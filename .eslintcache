[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"62"},{"size":479,"mtime":1618857799129,"results":"63","hashOfConfig":"64"},{"size":2120,"mtime":1618857799129,"results":"65","hashOfConfig":"64"},{"size":7072,"mtime":1619035218154,"results":"66","hashOfConfig":"64"},{"size":1482,"mtime":1618857799129,"results":"67","hashOfConfig":"64"},{"size":802,"mtime":1618857799133,"results":"68","hashOfConfig":"64"},{"size":266,"mtime":1619036790499,"results":"69","hashOfConfig":"64"},{"size":7797,"mtime":1619040873078,"results":"70","hashOfConfig":"64"},{"size":357,"mtime":1618857799133,"results":"71","hashOfConfig":"64"},{"size":266,"mtime":1618857799129,"results":"72","hashOfConfig":"64"},{"size":1081,"mtime":1619035218150,"results":"73","hashOfConfig":"64"},{"size":162,"mtime":1618857799129,"results":"74","hashOfConfig":"64"},{"size":1557,"mtime":1618857799125,"results":"75","hashOfConfig":"64"},{"size":296,"mtime":1619035218150,"results":"76","hashOfConfig":"64"},{"size":2177,"mtime":1618857799125,"results":"77","hashOfConfig":"64"},{"size":1170,"mtime":1618857799129,"results":"78","hashOfConfig":"64"},{"size":1399,"mtime":1618857799125,"results":"79","hashOfConfig":"64"},{"size":1655,"mtime":1618857799129,"results":"80","hashOfConfig":"64"},{"size":980,"mtime":1618857799129,"results":"81","hashOfConfig":"64"},{"size":363,"mtime":1618857799125,"results":"82","hashOfConfig":"64"},{"size":186,"mtime":1619035218150,"results":"83","hashOfConfig":"64"},{"size":3318,"mtime":1619035218150,"results":"84","hashOfConfig":"64"},{"size":893,"mtime":1619035218150,"results":"85","hashOfConfig":"64"},{"size":705,"mtime":1618857799129,"results":"86","hashOfConfig":"64"},{"size":572,"mtime":1618857799129,"results":"87","hashOfConfig":"64"},{"size":9052,"mtime":1618857799129,"results":"88","hashOfConfig":"64"},{"size":2871,"mtime":1618857799129,"results":"89","hashOfConfig":"64"},{"size":3327,"mtime":1618857799129,"results":"90","hashOfConfig":"64"},{"size":4907,"mtime":1619035218150,"results":"91","hashOfConfig":"64"},{"size":353,"mtime":1619035218150,"results":"92","hashOfConfig":"64"},{"size":1138,"mtime":1618857799125,"results":"93","hashOfConfig":"64"},{"size":629,"mtime":1619035218150,"results":"94","hashOfConfig":"64"},{"size":10201,"mtime":1618866683878,"results":"95","hashOfConfig":"64"},{"size":10839,"mtime":1619042312957,"results":"96","hashOfConfig":"64"},{"size":534,"mtime":1619035218154,"results":"97","hashOfConfig":"64"},{"size":1183,"mtime":1619035218150,"results":"98","hashOfConfig":"64"},{"size":1483,"mtime":1619035218154,"results":"99","hashOfConfig":"64"},{"size":23097,"mtime":1619041233150,"results":"100","hashOfConfig":"64"},{"size":3057,"mtime":1619035218154,"results":"101","hashOfConfig":"64"},{"size":758,"mtime":1619035218154,"results":"102","hashOfConfig":"64"},{"size":1363,"mtime":1619035218146,"results":"103","hashOfConfig":"64"},{"size":316,"mtime":1619035218146,"results":"104","hashOfConfig":"64"},{"size":135,"mtime":1619035218150,"results":"105","hashOfConfig":"64"},{"size":377,"mtime":1619035218146,"results":"106","hashOfConfig":"64"},{"size":419,"mtime":1619035218150,"results":"107","hashOfConfig":"64"},{"size":1765,"mtime":1619035218146,"results":"108","hashOfConfig":"64"},{"size":436,"mtime":1619035218150,"results":"109","hashOfConfig":"64"},{"size":414,"mtime":1619035218150,"results":"110","hashOfConfig":"64"},{"size":463,"mtime":1619035218154,"results":"111","hashOfConfig":"64"},{"size":1239,"mtime":1619035218150,"results":"112","hashOfConfig":"64"},{"size":5698,"mtime":1619035218150,"results":"113","hashOfConfig":"64"},{"size":5493,"mtime":1619035218150,"results":"114","hashOfConfig":"64"},{"size":262,"mtime":1619035218154,"results":"115","hashOfConfig":"64"},{"size":1222,"mtime":1619035218150,"results":"116","hashOfConfig":"64"},{"size":751,"mtime":1619035218150,"results":"117","hashOfConfig":"64"},{"size":852,"mtime":1619035218150,"results":"118","hashOfConfig":"64"},{"size":292,"mtime":1619036796823,"results":"119","hashOfConfig":"64"},{"size":170,"mtime":1619036800159,"results":"120","hashOfConfig":"64"},{"size":3617,"mtime":1619039376828,"results":"121","hashOfConfig":"64"},{"size":1803,"mtime":1619035218150,"results":"122","hashOfConfig":"64"},{"size":1200,"mtime":1619035218150,"results":"123","hashOfConfig":"64"},{"size":2131,"mtime":1619041516801,"results":"124","hashOfConfig":"64"},{"size":7338,"mtime":1619041540321,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cwa88",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx",["254"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["255","256","257","258","259","260","261"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount:\n      typeof responseCustomer.contaContrato === 'string'\n        ? responseCustomer.contaContrato.replace(/^0+/, '')\n        : responseCustomer.contaContrato.toString().replace(/^0+/, ''),\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: Number(debitosFatura.valorTotalDebitoFatura),\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits: Number(\n        debitosParcelamento.valorTotalDebitoParcelamento,\n      ),\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport { extractResponseData, getInstallationData, getServiceNotes };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["262"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx",["263","264"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["265"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",["266"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],["267","268","269","270","271"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["272"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Swal from 'sweetalert2';\n\nimport { useAuth } from './auth';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\n\nimport {\n  extractResponseData,\n  getInstallationData,\n  getServiceNotes,\n} from '../utils/extractResponseData';\n\nimport ServiceNotes from '../types/ServiceNotes';\nimport eqtlBarApi from '../services/eqtlBarApi';\nimport Address from '../types/Address';\n\ninterface CustomerServiceState {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  protocol?: string;\n  contracts: Contract[];\n}\n\ninterface GetCustomerData {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface StartServiceProps {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface CustomerServiceContextData {\n  operatingCompany: string;\n  protocol: string | undefined;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  contracts: Contract[];\n  serviceStarted: boolean;\n  fetchServiceData(customerData: GetCustomerData): Promise<void>;\n  fetchInstallationData({\n    contractAccount,\n    operatingCompany,\n  }: FetchInstallationDataProps): Promise<void>;\n  startService({\n    stateCode,\n    contractAccount,\n  }: StartServiceProps): Promise<void>;\n  finishService(attendanceTime: string): Promise<void>;\n  registerServicePerformed({\n    serviceName,\n    executionDate,\n  }: ServicePerformed): void;\n  findAllContracts({\n    stateCode,\n    cpf,\n  }: FindAllContractsProps): Promise<Contract[]>;\n}\n\ninterface GenerateProtocolProps {\n  operatingCompany: string;\n  contractAccount: string;\n}\n\ninterface FindAllContractsProps {\n  stateCode: string;\n  cpf: string;\n}\n\ninterface FetchInstallationDataProps {\n  contractAccount: string;\n  operatingCompany: string;\n}\n\ninterface ServicePerformed {\n  serviceName: string;\n  executionDate: Date;\n}\n\ninterface Contract {\n  contractAccount: string;\n  address: Address;\n}\n\nconst CustomerServiceContext = createContext<CustomerServiceContextData>(\n  {} as CustomerServiceContextData,\n);\n\nconst CustomerServiceProvider: React.FC = ({ children }) => {\n  const { user } = useAuth();\n\n  const [serviceStarted, setServiceStarted] = useState(false);\n  const [servicesPerformed, setServicesPerformed] = useState<\n    ServicePerformed[]\n  >([]);\n\n  const [\n    customerServiceData,\n    setCustomerServiceData,\n  ] = useState<CustomerServiceState>(() => {\n    const storagedCustomerServiceData = localStorage.getItem(\n      '@TelaAgil:customerServiceData',\n    );\n\n    const storagedProtocol = localStorage.getItem('@TelaAgil:protocol');\n\n    if (storagedCustomerServiceData) {\n      const {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = JSON.parse(storagedCustomerServiceData);\n\n      const customerServiceState: CustomerServiceState = {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      };\n\n      if (storagedProtocol) {\n        customerServiceState.protocol = storagedProtocol;\n      }\n\n      return customerServiceState;\n    }\n\n    return {} as CustomerServiceState;\n  });\n\n  const findAllContracts = useCallback(\n    async ({ stateCode, cpf }: FindAllContractsProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          cpf,\n          flagDadosCliente: true,\n          empresaOperadora: stateCode,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      const contracts: Contract[] = response.data.data.cliente.map(\n        (contract: any) => ({\n          contractAccount:\n            typeof contract.contaContrato === 'string'\n              ? contract.contaContrato.replace(/^0+/, '')\n              : contract.contaContrato.toString().replace(/^0+/, ''),\n          address: {\n            publicArea: contract.endereco.logradouro,\n            number: contract.endereco.numero,\n            neighborhood: contract.endereco.bairro,\n            city: contract.endereco.cidade,\n            uf: contract.endereco.uf,\n            postalCode: contract.endereco.cep,\n            referencePoint: contract.endereco.pontoReferencia,\n          },\n        }),\n      );\n\n      if (!contracts.length) {\n        throw new Error();\n      } else {\n        setCustomerServiceData({\n          ...customerServiceData,\n          operatingCompany: stateCode,\n          contracts,\n        });\n\n        return contracts;\n      }\n    },\n    [customerServiceData],\n  );\n\n  const fetchServiceData = useCallback(\n    async ({ stateCode, contractAccount }: GetCustomerData) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: formattedContractAccount,\n          empresaOperadora: stateCode,\n          flagDadosCliente: true,\n          flagStatusInstalacao: true,\n          flagPossuiDebitos: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n          flagDetalheDebitoCobranca: true,\n          flagDetalheDebitoFatura: true,\n        },\n      });\n\n      const {\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = extractResponseData(response, stateCode);\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          operatingCompany: stateCode,\n          customer,\n          installation,\n          debits,\n          serviceNotes,\n          contracts: [],\n        }),\n      );\n\n      setCustomerServiceData({\n        operatingCompany: stateCode,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      });\n    },\n    [],\n  );\n\n  const generateProtocol = useCallback(\n    async ({ operatingCompany, contractAccount }: GenerateProtocolProps) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          empresaOperadora: operatingCompany,\n          contrato: formattedContractAccount,\n          flagGerarProtocolo: true,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      localStorage.setItem('@TelaAgil:protocol', response.data.data.protocolo);\n\n      setCustomerServiceData(state => ({\n        ...state,\n        protocol: response.data.data.protocolo,\n      }));\n    },\n    [],\n  );\n\n  const fetchInstallationData = useCallback(\n    async ({\n      contractAccount,\n      operatingCompany,\n    }: FetchInstallationDataProps) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: formattedContractAccount,\n          empresaOperadora: operatingCompany,\n          flagStatusInstalacao: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n        },\n      });\n\n      const responseInstallationData = response.data.data.instalacao;\n\n      const installationData = getInstallationData(\n        responseInstallationData,\n        operatingCompany,\n      );\n\n      const serviceNotesData = getServiceNotes(response);\n\n      setCustomerServiceData({\n        ...customerServiceData,\n        installation: installationData,\n        serviceNotes: serviceNotesData,\n      });\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          ...customerServiceData,\n          installation: installationData,\n          serviceNotes: serviceNotesData,\n        }),\n      );\n    },\n    [customerServiceData],\n  );\n\n  const startService = useCallback(\n    async ({ stateCode, contractAccount }: StartServiceProps) => {\n      try {\n        await fetchServiceData({\n          stateCode,\n          contractAccount,\n        });\n\n        await generateProtocol({\n          contractAccount,\n          operatingCompany: stateCode,\n        });\n\n        setServiceStarted(true);\n      } catch {\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro no atendimento',\n          html:\n            '<p>Ocorreu um erro ao iniciar o atendimento, cheque as informações do cliente</p>',\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      }\n    },\n    [fetchServiceData, generateProtocol],\n  );\n\n  const saveAttendanceLog = useCallback(\n    async (attendanceTime: string) => {\n      await eqtlBarApi.post('/logs', {\n        user_id: user.id,\n        username: user.name,\n        contractAccount: customerServiceData.customer.contractAccount,\n        attendanceTime,\n        services: servicesPerformed,\n      });\n    },\n    [user, customerServiceData.customer, servicesPerformed],\n  );\n\n  const finishService = useCallback(\n    async (attendanceTime: string) => {\n      await saveAttendanceLog(attendanceTime);\n\n      localStorage.removeItem('@TelaAgil:protocol');\n      localStorage.removeItem('@TelaAgil:contracts');\n      localStorage.removeItem('@TelaAgil:customerServiceData');\n\n      setCustomerServiceData({} as CustomerServiceContextData);\n\n      setServicesPerformed([]);\n\n      setServiceStarted(false);\n    },\n    [saveAttendanceLog],\n  );\n\n  const registerServicePerformed = useCallback(\n    ({ serviceName, executionDate }: ServicePerformed) => {\n      setServicesPerformed(oldServices => [\n        ...oldServices,\n        { serviceName, executionDate },\n      ]);\n    },\n    [],\n  );\n\n  return (\n    <CustomerServiceContext.Provider\n      value={{\n        operatingCompany: customerServiceData.operatingCompany,\n        protocol: customerServiceData.protocol,\n        customer: customerServiceData.customer,\n        installation: customerServiceData.installation,\n        debits: customerServiceData.debits,\n        serviceNotes: customerServiceData.serviceNotes,\n        contracts: customerServiceData.contracts,\n        serviceStarted,\n        fetchServiceData,\n        fetchInstallationData,\n        startService,\n        finishService,\n        registerServicePerformed,\n        findAllContracts,\n      }}\n    >\n      {children}\n    </CustomerServiceContext.Provider>\n  );\n};\n\nfunction useCustomerService(): CustomerServiceContextData {\n  const context = useContext(CustomerServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'useCustomerService must be used within a CustomerServiceProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { CustomerServiceProvider, useCustomerService };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx",["273"],"import React from 'react';\nimport { useTable, Column } from 'react-table';\n\nimport {\n  Container,\n  TableContainer,\n  TableHeadContainer,\n  TableColumnsTitleContainer,\n  TableColumnTitle,\n  TableRow,\n  TableBody,\n  TableDataCell,\n} from './styles';\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\ninterface ServiceNotesTableProps {\n  columns: Column<Note>[];\n  data: Note[];\n}\n\nconst ServiceNotesTable: React.FC<ServiceNotesTableProps> = ({\n  columns,\n  data,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <Container>\n      <TableContainer {...getTableProps()}>\n        <TableHeadContainer>\n          {headerGroups.map(headerGroup => (\n            <TableColumnsTitleContainer {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <TableColumnTitle {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </TableColumnTitle>\n              ))}\n            </TableColumnsTitleContainer>\n          ))}\n        </TableHeadContainer>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableDataCell {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableDataCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ServiceNotesTable;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx",["274","275"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",[],{"ruleId":"276","severity":1,"message":"277","line":2,"column":16,"nodeType":"278","messageId":"279","endLine":2,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":87,"column":3,"nodeType":"278","messageId":"282","endLine":87,"endColumn":28},{"ruleId":"283","severity":1,"message":"284","line":87,"column":25,"nodeType":"285","messageId":"286","endLine":87,"endColumn":28,"suggestions":"287"},{"ruleId":"283","severity":1,"message":"284","line":152,"column":36,"nodeType":"285","messageId":"286","endLine":152,"endColumn":39,"suggestions":"288"},{"ruleId":"283","severity":1,"message":"284","line":156,"column":13,"nodeType":"285","messageId":"286","endLine":156,"endColumn":16,"suggestions":"289"},{"ruleId":"283","severity":1,"message":"284","line":168,"column":13,"nodeType":"285","messageId":"286","endLine":168,"endColumn":16,"suggestions":"290"},{"ruleId":"283","severity":1,"message":"284","line":204,"column":12,"nodeType":"285","messageId":"286","endLine":204,"endColumn":15,"suggestions":"291"},{"ruleId":"283","severity":1,"message":"284","line":223,"column":12,"nodeType":"285","messageId":"286","endLine":223,"endColumn":15,"suggestions":"292"},{"ruleId":"276","severity":1,"message":"293","line":18,"column":3,"nodeType":"278","messageId":"279","endLine":18,"endColumn":12},{"ruleId":"276","severity":1,"message":"294","line":8,"column":40,"nodeType":"278","messageId":"279","endLine":8,"endColumn":50},{"ruleId":"276","severity":1,"message":"295","line":8,"column":52,"nodeType":"278","messageId":"279","endLine":8,"endColumn":61},{"ruleId":"283","severity":1,"message":"284","line":7,"column":13,"nodeType":"285","messageId":"286","endLine":7,"endColumn":16,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":268,"column":6,"nodeType":"299","endLine":268,"endColumn":32,"suggestions":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"283","severity":1,"message":"284","line":157,"column":20,"nodeType":"285","messageId":"286","endLine":157,"endColumn":23,"suggestions":"311"},{"ruleId":"276","severity":1,"message":"312","line":55,"column":27,"nodeType":"278","messageId":"279","endLine":55,"endColumn":28},{"ruleId":"276","severity":1,"message":"313","line":42,"column":20,"nodeType":"278","messageId":"279","endLine":42,"endColumn":25},{"ruleId":"276","severity":1,"message":"314","line":42,"column":27,"nodeType":"278","messageId":"279","endLine":42,"endColumn":32},"@typescript-eslint/no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Argument 'responseInstallation' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],"'setIsOpen' is defined but never used.","'OwnerLabel' is defined but never used.","'OwnerName' is defined but never used.",["327","328"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'operatingCompany'. Either include it or remove the dependency array.","ArrayExpression",["329"],"lines-around-directive",["330"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["331","332"],"'i' is defined but never used.","'index' is defined but never used.","'event' is defined but never used.",{"messageId":"333","fix":"334","desc":"335"},{"messageId":"336","fix":"337","desc":"338"},{"messageId":"333","fix":"339","desc":"335"},{"messageId":"336","fix":"340","desc":"338"},{"messageId":"333","fix":"341","desc":"335"},{"messageId":"336","fix":"342","desc":"338"},{"messageId":"333","fix":"343","desc":"335"},{"messageId":"336","fix":"344","desc":"338"},{"messageId":"333","fix":"345","desc":"335"},{"messageId":"336","fix":"346","desc":"338"},{"messageId":"333","fix":"347","desc":"335"},{"messageId":"336","fix":"348","desc":"338"},{"messageId":"333","fix":"349","desc":"335"},{"messageId":"336","fix":"350","desc":"338"},{"desc":"351","fix":"352"},"padding-line-between-statements",{"messageId":"333","fix":"353","desc":"335"},{"messageId":"336","fix":"354","desc":"338"},"suggestUnknown",{"range":"355","text":"356"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"355","text":"357"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"358","text":"356"},{"range":"358","text":"357"},{"range":"359","text":"356"},{"range":"359","text":"357"},{"range":"360","text":"356"},{"range":"360","text":"357"},{"range":"361","text":"356"},{"range":"361","text":"357"},{"range":"362","text":"356"},{"range":"362","text":"357"},{"range":"363","text":"356"},{"range":"363","text":"357"},"Update the dependencies array to be: [debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",{"range":"364","text":"365"},{"range":"366","text":"356"},{"range":"366","text":"357"},[2760,2763],"unknown","never",[4379,4382],[4571,4574],[4980,4983],[6014,6017],[6639,6642],[147,150],[7542,7568],"[debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",[3796,3799]]