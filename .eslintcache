[{"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\toast.tsx":"1","E:\\www-hm\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx":"2","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Loading\\styles.ts":"3","E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\styles.ts":"4","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx":"5","E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\whatsappSending.tsx":"6","E:\\www-hm\\eqtl-tela-agil\\src\\services\\authenticationApi.ts":"7","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Loading\\index.tsx":"8","E:\\www-hm\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx":"9","E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts":"10","E:\\www-hm\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\styles.ts":"11","E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\monitoringOfProtocols.tsx":"12","E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\customerService.tsx":"13","E:\\www-hm\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts":"14","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Button\\index.tsx":"15","E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\index.tsx":"16","E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\index.tsx":"17","E:\\www-hm\\eqtl-tela-agil\\src\\pages\\SignIn\\styles.ts":"18","E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\auth.tsx":"19","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts":"20","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\index.tsx":"21","E:\\www-hm\\eqtl-tela-agil\\src\\pages\\Dashboard\\index.tsx":"22","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx":"23","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\styles.ts":"24","E:\\www-hm\\eqtl-tela-agil\\src\\index.tsx":"25","E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx":"26","E:\\www-hm\\eqtl-tela-agil\\src\\utils\\inputMasks.ts":"27","E:\\www-hm\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts":"28","E:\\www-hm\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\styles.ts":"29","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx":"30","E:\\www-hm\\eqtl-tela-agil\\src\\utils\\addZeroesToNumber.ts":"31","E:\\www-hm\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx":"32"},{"size":1546,"mtime":1641922236969,"results":"33","hashOfConfig":"34"},{"size":2485,"mtime":1641922236673,"results":"35","hashOfConfig":"34"},{"size":248,"mtime":1641922236766,"results":"36","hashOfConfig":"34"},{"size":461,"mtime":1641922236751,"results":"37","hashOfConfig":"34"},{"size":3594,"mtime":1641922236798,"results":"38","hashOfConfig":"34"},{"size":7269,"mtime":1641922236969,"results":"39","hashOfConfig":"34"},{"size":313,"mtime":1641999536813,"results":"40","hashOfConfig":"34"},{"size":1132,"mtime":1641922236766,"results":"41","hashOfConfig":"34"},{"size":7796,"mtime":1641922236766,"results":"42","hashOfConfig":"34"},{"size":1318,"mtime":1641922236735,"results":"43","hashOfConfig":"34"},{"size":1548,"mtime":1641922236860,"results":"44","hashOfConfig":"34"},{"size":3515,"mtime":1641922236954,"results":"45","hashOfConfig":"34"},{"size":11285,"mtime":1641999536813,"results":"46","hashOfConfig":"34"},{"size":2298,"mtime":1641999536813,"results":"47","hashOfConfig":"34"},{"size":329,"mtime":1641922236688,"results":"48","hashOfConfig":"34"},{"size":1450,"mtime":1641922236751,"results":"49","hashOfConfig":"34"},{"size":2226,"mtime":1641922236735,"results":"50","hashOfConfig":"34"},{"size":801,"mtime":1641922236985,"results":"51","hashOfConfig":"34"},{"size":2517,"mtime":1641922236938,"results":"52","hashOfConfig":"34"},{"size":611,"mtime":1641922236782,"results":"53","hashOfConfig":"34"},{"size":313,"mtime":1641922236829,"results":"54","hashOfConfig":"34"},{"size":643,"mtime":1641922236969,"results":"55","hashOfConfig":"34"},{"size":2429,"mtime":1641922236782,"results":"56","hashOfConfig":"34"},{"size":750,"mtime":1641922236813,"results":"57","hashOfConfig":"34"},{"size":495,"mtime":1641922236969,"results":"58","hashOfConfig":"34"},{"size":1589,"mtime":1641922236954,"results":"59","hashOfConfig":"34"},{"size":1803,"mtime":1641922237047,"results":"60","hashOfConfig":"34"},{"size":2319,"mtime":1641922236766,"results":"61","hashOfConfig":"34"},{"size":386,"mtime":1641922236720,"results":"62","hashOfConfig":"34"},{"size":1843,"mtime":1641999536798,"results":"63","hashOfConfig":"34"},{"size":323,"mtime":1641922237032,"results":"64","hashOfConfig":"34"},{"size":941,"mtime":1641922236829,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"i8kjhn",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\toast.tsx",[],["139","140","141","142","143"],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx",["144"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Rodal from 'rodal';\r\nimport { FiCheck, FiAlertTriangle, FiXCircle } from 'react-icons/fi';\r\nimport { GoInfo } from 'react-icons/go';\r\n\r\nimport 'rodal/lib/rodal.css';\r\n\r\nimport { AlertMessage } from '../../hooks/alert';\r\n\r\nimport {\r\n  AlertContent,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  ButtonsContainer,\r\n  ConfirmationButton,\r\n  ConfirmationButtonText,\r\n  CancelButton,\r\n  CancelButtonText,\r\n} from './styles';\r\n\r\ninterface AlertProps {\r\n  message: AlertMessage;\r\n  isOpen: boolean;\r\n  setIsOpen: () => void;\r\n}\r\n\r\nconst icons = {\r\n  info: <GoInfo size={80} color=\"#0DC9F0\" />,\r\n  error: <FiXCircle size={80} color=\"#eb5757\" />,\r\n  success: <FiCheck size={80} color=\"#04d361\" />,\r\n  warning: <FiAlertTriangle size={80} color=\"#FFC105\" />,\r\n};\r\n\r\nconst AlertModal: React.FC<AlertProps> = ({ message, isOpen, setIsOpen }) => {\r\n  const [alertStatus, setAlertStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAlertStatus(isOpen);\r\n  }, [isOpen]);\r\n\r\n  const handleConfirmationClick = useCallback(async () => {\r\n    if (message.confirmationAction) {\r\n      message.confirmationAction();\r\n    }\r\n\r\n    setIsOpen();\r\n  }, [setIsOpen, message]);\r\n\r\n  const handleCancelClick = useCallback(() => {\r\n    if (message.cancelAction) {\r\n      message.cancelAction();\r\n    }\r\n\r\n    setIsOpen();\r\n  }, [setIsOpen, message]);\r\n\r\n  return (\r\n    <Rodal\r\n      visible={alertStatus}\r\n      showCloseButton={false}\r\n      customStyles={{\r\n        borderRadius: '8px',\r\n        padding: '48px 64px',\r\n        width: '480px',\r\n        height: 'fit-content',\r\n      }}\r\n      customMaskStyles={{\r\n        background: 'rgba(0, 0, 0, 0.6)',\r\n      }}\r\n    >\r\n      <AlertContent>\r\n        {icons[message.type || 'info']}\r\n\r\n        <AlertTitle>{message.title}</AlertTitle>\r\n        <AlertDescription>{message.description}</AlertDescription>\r\n\r\n        <ButtonsContainer>\r\n          {message.cancelButtonText && (\r\n            <CancelButton onClick={handleCancelClick}>\r\n              <CancelButtonText>{message.cancelButtonText}</CancelButtonText>\r\n            </CancelButton>\r\n          )}\r\n\r\n          <ConfirmationButton onClick={handleConfirmationClick}>\r\n            <ConfirmationButtonText>\r\n              {message.confirmationText}\r\n            </ConfirmationButtonText>\r\n          </ConfirmationButton>\r\n        </ButtonsContainer>\r\n      </AlertContent>\r\n    </Rodal>\r\n  );\r\n};\r\n\r\nexport default AlertModal;\r\n",["145","146","147","148","149"],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Loading\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\styles.ts",[],["150","151","152","153","154"],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\whatsappSending.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\services\\authenticationApi.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Loading\\index.tsx",["155"],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx",["156","157"],"import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { FiPower } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport { format } from 'date-fns';\r\nimport * as Yup from 'yup';\r\nimport { useLoading } from 'react-use-loading';\r\nimport { useStopwatch } from 'react-timer-hook';\r\n\r\nimport getValidationErrors from '../../utils/getValidationErrors';\r\n\r\nimport {\r\n  Container,\r\n  Logo,\r\n  WelcomeText,\r\n  Username,\r\n  UserMenu,\r\n  LogoutButton,\r\n  LogoutButtonText,\r\n  ServiceForm,\r\n  StartServiceButton,\r\n  FinishServiceButton,\r\n  Cronometro,\r\n} from './styles';\r\n\r\nimport OutlineInput from '../OutlineInput';\r\nimport OutlineInputRegex from '../OutlineInputRegex';\r\nimport OutlineInputMask from '../OutlineInputMask';\r\nimport CustomRadioGroup from '../CustomRadioGroup';\r\nimport RadioOptions from '../CustomRadioGroup/RadioOptions';\r\nimport Loading from '../Loading';\r\nimport FindContractModal from '../FindContractModal';\r\n\r\nimport logoWhiteImg from '../../assets/logo-white.svg';\r\n\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { useCustomerService } from '../../hooks/customerService';\r\nimport { useToast } from '../../hooks/toast';\r\nimport { useAlert } from '../../hooks/alert';\r\n\r\ninterface StartServiceFormData {\r\n  state: string;\r\n  contract: string;\r\n  cpf: string;\r\n}\r\n\r\nconst LeftBar: React.FC = () => {\r\n  const { user, signOut } = useAuth();\r\n  const { addToast } = useToast();\r\n  const { customAlert } = useAlert();\r\n  const [{ isLoading, message }, { start, stop }] = useLoading();\r\n\r\n  const {\r\n    start: startTimer,\r\n    reset: resetTimer,\r\n    isRunning,\r\n    hours,\r\n    seconds,\r\n    minutes,\r\n  } = useStopwatch({\r\n    autoStart: false,\r\n  });\r\n\r\n  const {\r\n    startService,\r\n    customer,\r\n    finishService,\r\n    serviceStarted,\r\n    findAllContracts,\r\n    contracts,\r\n  } = useCustomerService();\r\n\r\n  const [openModalFindContract, setOpenModalFindContract] = useState(false);\r\n\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const toggleModalFindContract = useCallback(() => {\r\n    setOpenModalFindContract(!openModalFindContract);\r\n  }, [openModalFindContract]);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: StartServiceFormData) => {\r\n      try {\r\n        start('Localizando cliente ...');\r\n\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          contract: Yup.string().when('cpf', {\r\n            is: (val: string) => !val.length,\r\n            then: Yup.string().required('Conta contrato obrigatória'),\r\n            otherwise: Yup.string(),\r\n          }),\r\n          cpf: Yup.string(),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        if (data.contract && data.cpf) {\r\n          customAlert({\r\n            type: 'error',\r\n            title: 'Erro no formulário',\r\n            description:\r\n              'Utilize apenas um dos campos (Conta contrato ou CPF / CNPJ)',\r\n            confirmationText: 'OK',\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (!data.contract && data.cpf) {\r\n          const unformattedCpf = data.cpf.replace(/\\D/gim, '');\r\n\r\n          const responseContracts = await findAllContracts({\r\n            stateCode: data.state[0],\r\n            cpf: unformattedCpf,\r\n          });\r\n\r\n          if (responseContracts.length > 1) {\r\n            toggleModalFindContract();\r\n            return;\r\n          }\r\n\r\n          await startService({\r\n            stateCode: data.state[0],\r\n            contractAccount: responseContracts[0].contractAccount,\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        const unformattedContract = data.contract.replace(/\\D/gim, '');\r\n\r\n        await startService({\r\n          stateCode: data.state[0],\r\n          contractAccount: unformattedContract,\r\n        });\r\n      } catch (err) {\r\n        if (err instanceof Yup.ValidationError) {\r\n          const errors = getValidationErrors(err);\r\n\r\n          formRef.current?.setErrors(errors);\r\n          return;\r\n        }\r\n\r\n        customAlert({\r\n          type: 'error',\r\n          title: 'Erro no atendimento',\r\n          description:\r\n            'Não foi possível localizar o cliente, cheque as informações',\r\n          confirmationText: 'OK',\r\n        });\r\n      } finally {\r\n        stop();\r\n      }\r\n    },\r\n    [\r\n      startService,\r\n      start,\r\n      stop,\r\n      customAlert,\r\n      findAllContracts,\r\n      toggleModalFindContract,\r\n    ],\r\n  );\r\n\r\n  const formattedTime = useMemo(() => {\r\n    return format(new Date(0, 0, 0, hours, minutes, seconds), 'mm:ss');\r\n  }, [hours, minutes, seconds]);\r\n\r\n  const handleFinishService = useCallback(async () => {\r\n    try {\r\n      start('Finalizando atendimento ...');\r\n\r\n      await finishService(formattedTime);\r\n    } catch {\r\n      addToast({\r\n        type: 'error',\r\n        title: 'Registro de logs',\r\n        description: 'Ocorreu um erro ao salvar o log do atendimento.',\r\n      });\r\n    } finally {\r\n      stop();\r\n    }\r\n  }, [finishService, formattedTime, addToast, start, stop]);\r\n\r\n  useEffect(() => {\r\n    if (serviceStarted && !isRunning) {\r\n      startTimer();\r\n    }\r\n\r\n    if (!serviceStarted) {\r\n      resetTimer();\r\n    }\r\n  }, [serviceStarted, startTimer, isRunning, resetTimer]);\r\n\r\n  return (\r\n    <Container>\r\n      <UserMenu>\r\n        <Logo src={logoWhiteImg} alt=\"Equatorial Energia\" />\r\n\r\n        <WelcomeText>\r\n          Bem vindo,\r\n          <Username>{user.name}</Username>\r\n        </WelcomeText>\r\n\r\n        <LogoutButton onClick={signOut}>\r\n          <FiPower />\r\n          <LogoutButtonText>Sair</LogoutButtonText>\r\n        </LogoutButton>\r\n      </UserMenu>\r\n\r\n      <ServiceForm>\r\n        <Form\r\n          ref={formRef}\r\n          onSubmit={handleSubmit}\r\n          initialData={{ state: '82' }}\r\n        >\r\n          <CustomRadioGroup fieldLabel=\"Estado\">\r\n            <RadioOptions\r\n              name=\"state\"\r\n              options={[\r\n                { id: 'radio1', value: '82', label: 'Alagoas' },\r\n                { id: 'radio2', value: '98', label: 'Maranhão' },\r\n                { id: 'radio3', value: '95', label: 'Pará' },\r\n                { id: 'radio4', value: '86', label: 'Piauí' },\r\n              ]}\r\n              disabled={serviceStarted}\r\n            />\r\n          </CustomRadioGroup>\r\n\r\n          <OutlineInputRegex\r\n            name=\"contract\"\r\n            type=\"text\"\r\n            mask=\"contractAccount\"\r\n            placeholder=\"Código único ou conta contrato\"\r\n            autoComplete=\"off\"\r\n            disabled={serviceStarted}\r\n          />\r\n\r\n          <OutlineInputRegex\r\n            name=\"cpf\"\r\n            type=\"text\"\r\n            mask=\"cpfCnpj\"\r\n            placeholder=\"CPF ou CNPJ\"\r\n            autoComplete=\"off\"\r\n            disabled={serviceStarted}\r\n          />\r\n\r\n          {serviceStarted && customer ? (\r\n            <FinishServiceButton type=\"button\" onClick={handleFinishService}>\r\n              Encerrar atendimento\r\n            </FinishServiceButton>\r\n          ) : (\r\n            <StartServiceButton type=\"submit\">\r\n              Iniciar atendimento\r\n            </StartServiceButton>\r\n          )}\r\n\r\n          {serviceStarted && customer && (\r\n            <Cronometro>\r\n              <span>Tempo de atendimento:</span>\r\n              <h1>{formattedTime}</h1>\r\n            </Cronometro>\r\n          )}\r\n        </Form>\r\n      </ServiceForm>\r\n\r\n      {contracts && (\r\n        <FindContractModal\r\n          isOpen={openModalFindContract}\r\n          setIsOpen={toggleModalFindContract}\r\n        />\r\n      )}\r\n\r\n      {isLoading && (\r\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LeftBar;\r\n","E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\monitoringOfProtocols.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\customerService.tsx",["158","159","160","161"],"E:\\www-hm\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Button\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\index.tsx",["162","163"],"import React from 'react';\r\n\r\nimport { useCustomerService } from '../../hooks/customerService';\r\n\r\nimport Modal from '../Modal';\r\nimport ContractsTable from './ContractsTable';\r\n\r\nimport { ModalContent, OwnerContainer, OwnerLabel, OwnerName } from './styles';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: () => void;\r\n}\r\n\r\ninterface Contract {\r\n  contractAccount: string;\r\n  address: string;\r\n}\r\n\r\nconst FindContractModal: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\r\n  const { contracts } = useCustomerService();\r\n\r\n  const data: Contract[] = contracts.map(contract => ({\r\n    contractAccount: contract.contractAccount,\r\n    address: `${contract.address.publicArea}, ${contract.address.number}, ${contract.address.neighborhood}, ${contract.address.city} - ${contract.address.uf}, CEP ${contract.address.postalCode}`,\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      setIsOpen={setIsOpen}\r\n      customStyles={{\r\n        borderRadius: '8px',\r\n        padding: '48px 0',\r\n        width: 'fit-content',\r\n        height: 'fit-content',\r\n      }}\r\n    >\r\n      <ModalContent>\r\n        <OwnerContainer>\r\n          {/* <OwnerLabel>Nome do titular:</OwnerLabel> */}\r\n          {/* <OwnerName>{contracts && contracts[0].owner}</OwnerName> */}\r\n        </OwnerContainer>\r\n\r\n        <ContractsTable data={data} closeModal={setIsOpen} />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FindContractModal;\r\n",["164","165","166","167","168"],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\index.tsx",["169","170"],"import React, { useCallback } from 'react';\r\nimport { useLoading } from 'react-use-loading';\r\n\r\nimport { Container, RCTable } from './styles';\r\nimport { useCustomerService } from '../../../hooks/customerService';\r\nimport { useAlert } from '../../../hooks/alert';\r\n\r\nimport Loading from '../../Loading';\r\n\r\ninterface Contract {\r\n  contractAccount: string;\r\n  address: string;\r\n}\r\n\r\ninterface TableProps {\r\n  data: Contract[];\r\n  closeModal(): void;\r\n}\r\n\r\nconst ContractsTable: React.FC<TableProps> = ({ data, closeModal }) => {\r\n  const { customAlert } = useAlert();\r\n  const [\r\n    { isLoading, message },\r\n    { start: startLoading, stop: stopLoading },\r\n  ] = useLoading();\r\n\r\n  const { startService, operatingCompany } = useCustomerService();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Conta contrato',\r\n      dataIndex: 'contractAccount',\r\n      key: 'contractAccount',\r\n    },\r\n    {\r\n      title: 'Endereço',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n  ];\r\n\r\n  const onRowClick = useCallback(\r\n    async (record, index, event) => {\r\n      try {\r\n        startLoading('Iniciando atendimento ...');\r\n\r\n        if (record.contractAccount) {\r\n          await startService({\r\n            stateCode: operatingCompany,\r\n            contractAccount: record.contractAccount,\r\n          });\r\n        }\r\n      } catch (err) {\r\n        customAlert({\r\n          type: 'error',\r\n          title: 'Erro no atendimento',\r\n          description: 'Não foi iniciar o atendimento.',\r\n          confirmationText: 'OK',\r\n        });\r\n      } finally {\r\n        closeModal();\r\n        stopLoading();\r\n      }\r\n    },\r\n    [\r\n      closeModal,\r\n      customAlert,\r\n      operatingCompany,\r\n      startService,\r\n      startLoading,\r\n      stopLoading,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <RCTable\r\n        columns={columns}\r\n        data={data}\r\n        tableLayout=\"auto\"\r\n        rowKey=\"contractAccount\"\r\n        onRow={(record, index) => ({\r\n          onClick: onRowClick.bind(null, record, index),\r\n        })}\r\n      />\r\n\r\n      {isLoading && (\r\n        <Loading isOpen={isLoading} message={message} setIsOpen={stopLoading} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContractsTable;\r\n","E:\\www-hm\\eqtl-tela-agil\\src\\pages\\SignIn\\styles.ts",[],["171","172","173","174","175"],"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\auth.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\pages\\Dashboard\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\utils\\inputMasks.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\styles.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx",[],"E:\\www-hm\\eqtl-tela-agil\\src\\utils\\addZeroesToNumber.ts",[],"E:\\www-hm\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx",["176"],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":41,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"181","replacedBy":"193"},{"ruleId":"183","replacedBy":"194"},{"ruleId":"185","replacedBy":"195"},{"ruleId":"177","replacedBy":"196"},{"ruleId":"179","replacedBy":"197"},{"ruleId":"181","replacedBy":"198"},{"ruleId":"183","replacedBy":"199"},{"ruleId":"185","replacedBy":"200"},{"ruleId":"187","severity":1,"message":"201","line":18,"column":3,"nodeType":"189","messageId":"190","endLine":18,"endColumn":12},{"ruleId":"187","severity":1,"message":"202","line":32,"column":8,"nodeType":"189","messageId":"190","endLine":32,"endColumn":20},{"ruleId":"187","severity":1,"message":"203","line":34,"column":8,"nodeType":"189","messageId":"190","endLine":34,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":161,"column":20,"nodeType":"206","messageId":"207","endLine":161,"endColumn":23,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":211,"column":7,"nodeType":"211","messageId":"212","endLine":211,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":220,"column":7,"nodeType":"211","messageId":"212","endLine":220,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":328,"column":9,"nodeType":"211","messageId":"212","endLine":328,"endColumn":20},{"ruleId":"187","severity":1,"message":"213","line":8,"column":40,"nodeType":"189","messageId":"190","endLine":8,"endColumn":50},{"ruleId":"187","severity":1,"message":"214","line":8,"column":52,"nodeType":"189","messageId":"190","endLine":8,"endColumn":61},{"ruleId":"177","replacedBy":"215"},{"ruleId":"179","replacedBy":"216"},{"ruleId":"181","replacedBy":"217"},{"ruleId":"183","replacedBy":"218"},{"ruleId":"185","replacedBy":"219"},{"ruleId":"187","severity":1,"message":"220","line":43,"column":20,"nodeType":"189","messageId":"190","endLine":43,"endColumn":25},{"ruleId":"187","severity":1,"message":"221","line":43,"column":27,"nodeType":"189","messageId":"190","endLine":43,"endColumn":32},{"ruleId":"177","replacedBy":"222"},{"ruleId":"179","replacedBy":"223"},{"ruleId":"181","replacedBy":"224"},{"ruleId":"183","replacedBy":"225"},{"ruleId":"185","replacedBy":"226"},{"ruleId":"204","severity":1,"message":"205","line":7,"column":13,"nodeType":"206","messageId":"207","endLine":7,"endColumn":16,"suggestions":"227"},"lines-around-directive",["228"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar",["228"],[],[],[],[],["228"],[],[],[],[],"'setIsOpen' is defined but never used.","'OutlineInput' is defined but never used.","'OutlineInputMask' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["229","230"],"no-console","Unexpected console statement.","MemberExpression","unexpected","'OwnerLabel' is defined but never used.","'OwnerName' is defined but never used.",["228"],[],[],[],[],"'index' is defined but never used.","'event' is defined but never used.",["228"],[],[],[],[],["231","232"],"padding-line-between-statements",{"messageId":"233","fix":"234","desc":"235"},{"messageId":"236","fix":"237","desc":"238"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"236","fix":"240","desc":"238"},"suggestUnknown",{"range":"241","text":"242"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"241","text":"243"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"244","text":"242"},{"range":"244","text":"243"},[4064,4067],"unknown","never",[153,156]]