[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/styles.ts":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/index.tsx":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx":"71","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"72","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"73","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/index.tsx":"74","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"75","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"76","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"77","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx":"78","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts":"79","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"80","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts":"81","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"82","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"83","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"84","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"85","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"86","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"87","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"88","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"89","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx":"90","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"91"},{"size":479,"mtime":1614860182232,"results":"92","hashOfConfig":"93"},{"size":534,"mtime":1614860182232,"results":"94","hashOfConfig":"93"},{"size":2120,"mtime":1614860182232,"results":"95","hashOfConfig":"93"},{"size":1527,"mtime":1614860182232,"results":"96","hashOfConfig":"93"},{"size":3464,"mtime":1614978136381,"results":"97","hashOfConfig":"93"},{"size":292,"mtime":1614860182232,"results":"98","hashOfConfig":"93"},{"size":7656,"mtime":1614860182232,"results":"99","hashOfConfig":"93"},{"size":1732,"mtime":1614860182232,"results":"100","hashOfConfig":"93"},{"size":785,"mtime":1614860182232,"results":"101","hashOfConfig":"93"},{"size":1081,"mtime":1614860182228,"results":"102","hashOfConfig":"93"},{"size":296,"mtime":1614860182228,"results":"103","hashOfConfig":"93"},{"size":1180,"mtime":1614860182232,"results":"104","hashOfConfig":"93"},{"size":1273,"mtime":1614860182228,"results":"105","hashOfConfig":"93"},{"size":419,"mtime":1614860182228,"results":"106","hashOfConfig":"93"},{"size":366,"mtime":1614860182228,"results":"107","hashOfConfig":"93"},{"size":1655,"mtime":1614860182228,"results":"108","hashOfConfig":"93"},{"size":980,"mtime":1614860182228,"results":"109","hashOfConfig":"93"},{"size":363,"mtime":1614860182228,"results":"110","hashOfConfig":"93"},{"size":343,"mtime":1614860182232,"results":"111","hashOfConfig":"93"},{"size":1460,"mtime":1614860182228,"results":"112","hashOfConfig":"93"},{"size":743,"mtime":1614860182232,"results":"113","hashOfConfig":"93"},{"size":572,"mtime":1614860182228,"results":"114","hashOfConfig":"93"},{"size":807,"mtime":1614860182228,"results":"115","hashOfConfig":"93"},{"size":1183,"mtime":1614898393797,"results":"116","hashOfConfig":"93"},{"size":7004,"mtime":1614860182232,"results":"117","hashOfConfig":"93"},{"size":1393,"mtime":1614899292880,"results":"118","hashOfConfig":"93"},{"size":3082,"mtime":1614860182232,"results":"119","hashOfConfig":"93"},{"size":844,"mtime":1614883272890,"results":"120","hashOfConfig":"93"},{"size":6665,"mtime":1615331360147,"results":"121","hashOfConfig":"93"},{"size":422,"mtime":1614860182228,"results":"122","hashOfConfig":"93"},{"size":186,"mtime":1614860182228,"results":"123","hashOfConfig":"93"},{"size":6748,"mtime":1615242165980,"results":"124","hashOfConfig":"93"},{"size":5694,"mtime":1615244969754,"results":"125","hashOfConfig":"93"},{"size":3388,"mtime":1615245232987,"results":"126","hashOfConfig":"93"},{"size":262,"mtime":1614860182232,"results":"127","hashOfConfig":"93"},{"size":2871,"mtime":1615209771089,"results":"128","hashOfConfig":"93"},{"size":1222,"mtime":1614860182228,"results":"129","hashOfConfig":"93"},{"size":751,"mtime":1614860182228,"results":"130","hashOfConfig":"93"},{"size":893,"mtime":1614860182228,"results":"131","hashOfConfig":"93"},{"size":1803,"mtime":1614886338316,"results":"132","hashOfConfig":"93"},{"size":1200,"mtime":1614886650378,"results":"133","hashOfConfig":"93"},{"size":352,"mtime":1615227940211,"results":"134","hashOfConfig":"93"},{"size":1483,"mtime":1614860182232,"results":"135","hashOfConfig":"93"},{"size":8703,"mtime":1615330016468,"results":"136","hashOfConfig":"93"},{"size":357,"mtime":1614860182232,"results":"137","hashOfConfig":"93"},{"size":1668,"mtime":1614899414604,"results":"138","hashOfConfig":"93"},{"size":135,"mtime":1614860182228,"results":"139","hashOfConfig":"93"},{"size":2177,"mtime":1614860182228,"results":"140","hashOfConfig":"93"},{"size":1671,"mtime":1614860182228,"results":"141","hashOfConfig":"93"},{"size":1448,"mtime":1614860182228,"results":"142","hashOfConfig":"93"},{"size":8207,"mtime":1615244914121,"results":"143","hashOfConfig":"93"},{"size":3327,"mtime":1614860182228,"results":"144","hashOfConfig":"93"},{"size":353,"mtime":1614860182228,"results":"145","hashOfConfig":"93"},{"size":1138,"mtime":1614860182228,"results":"146","hashOfConfig":"93"},{"size":629,"mtime":1614860182228,"results":"147","hashOfConfig":"93"},{"size":1281,"mtime":1615245128594,"results":"148","hashOfConfig":"93"},{"size":275,"mtime":1614886631698,"results":"149","hashOfConfig":"93"},{"size":4715,"mtime":1615245116125,"results":"150","hashOfConfig":"93"},{"size":852,"mtime":1614860182228,"results":"151","hashOfConfig":"93"},{"size":3731,"mtime":1615244938578,"results":"152","hashOfConfig":"93"},{"size":2490,"mtime":1614860182228,"results":"153","hashOfConfig":"93"},{"size":5511,"mtime":1615244847891,"results":"154","hashOfConfig":"93"},{"size":1609,"mtime":1614860182228,"results":"155","hashOfConfig":"93"},{"size":852,"mtime":1614889628241,"results":"156","hashOfConfig":"93"},{"size":4514,"mtime":1614968759808,"results":"157","hashOfConfig":"93"},{"size":802,"mtime":1614860182232,"results":"158","hashOfConfig":"93"},{"size":615,"mtime":1614860182232,"results":"159","hashOfConfig":"93"},{"size":162,"mtime":1614860182232,"results":"160","hashOfConfig":"93"},{"size":1557,"mtime":1614860182228,"results":"161","hashOfConfig":"93"},{"size":234,"mtime":1614860182228,"results":"162","hashOfConfig":"93"},{"size":1447,"mtime":1614860182228,"results":"163","hashOfConfig":"93"},{"size":414,"mtime":1614860182228,"results":"164","hashOfConfig":"93"},{"size":705,"mtime":1614860182228,"results":"165","hashOfConfig":"93"},{"size":2786,"mtime":1615245186342,"results":"166","hashOfConfig":"93"},{"size":1170,"mtime":1614860182232,"results":"167","hashOfConfig":"93"},{"size":1204,"mtime":1614965895057,"results":"168","hashOfConfig":"93"},{"size":379,"mtime":1614860182232,"results":"169","hashOfConfig":"93"},{"size":1265,"mtime":1614860182232,"results":"170","hashOfConfig":"93"},{"size":2199,"mtime":1614860182232,"results":"171","hashOfConfig":"93"},{"size":758,"mtime":1614860182232,"results":"172","hashOfConfig":"93"},{"size":1271,"mtime":1614860182228,"results":"173","hashOfConfig":"93"},{"size":3318,"mtime":1614860182228,"results":"174","hashOfConfig":"93"},{"size":377,"mtime":1614860182228,"results":"175","hashOfConfig":"93"},{"size":266,"mtime":1614860182232,"results":"176","hashOfConfig":"93"},{"size":316,"mtime":1614860182228,"results":"177","hashOfConfig":"93"},{"size":1765,"mtime":1614860182228,"results":"178","hashOfConfig":"93"},{"size":1125,"mtime":1614860182228,"results":"179","hashOfConfig":"93"},{"size":255,"mtime":1614860182232,"results":"180","hashOfConfig":"93"},{"size":266,"mtime":1614860182232,"results":"181","hashOfConfig":"93"},{"size":1679,"mtime":1615331422163,"results":"182","hashOfConfig":"93"},{"size":275,"mtime":1615326954711,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"11dd9mg",{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"189"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"189"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"281"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"198"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"198"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"208"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"208"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],["393","394","395","396","397"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],["398","399","400","401","402"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],["403","404","405","406","407"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx",[],["408","409","410","411","412"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx",[],["413","414","415","416","417"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["418","419","420","421","422","423"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount: responseCustomer.contaContrato,\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    customer.contractAccount = responseCustomer.contaContrato.toString();\n\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: debitosFatura.valorTotalDebitoFatura,\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits:\n        debitosParcelamento.valorTotalDebitoParcelamento,\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport default extractResponseData;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],["424","425","426","427","428"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["429"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\nimport Spinner from 'react-spinkit';\n\nimport 'rodal/lib/rodal.css';\n\nimport { Content } from './styles';\n\ninterface LoadingModalProps {\n  isOpen: boolean;\n  message?: string;\n  setIsOpen: () => void;\n}\n\nconst LoadingModal: React.FC<LoadingModalProps> = ({\n  isOpen,\n  message,\n  setIsOpen,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton={false}\n      customStyles={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n        width: 'fit-content',\n      }}\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      <Content>\n        <Spinner name=\"ball-pulse-sync\" fadeIn=\"none\" color=\"#fff\" />\n        <h2>{message}</h2>\n      </Content>\n    </Rodal>\n  );\n};\n\nexport default LoadingModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts",[],["430","431","432","433","434"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],["435","436","437","438","439"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],["440","441","442","443","444"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],["445","446","447","448","449"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",["450"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useLoading } from 'react-use-loading';\nimport { format } from 'date-fns';\nimport { useStopwatch } from 'react-timer-hook';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport {\n  Container,\n  Logo,\n  WelcomeText,\n  Username,\n  UserMenu,\n  LogoutButton,\n  LogoutButtonText,\n  ServiceForm,\n  StartServiceButton,\n  FinishServiceButton,\n  Cronometro,\n} from './styles';\n\nimport OutlineInput from '../OutlineInput';\nimport OutlineInputMask from '../OutlineInputMask';\nimport CustomRadioGroup from '../CustomRadioGroup';\nimport RadioOptions from '../CustomRadioGroup/RadioOptions';\nimport Loading from '../Loading';\nimport FindContractModal from '../FindContractModal';\n\nimport logoWhiteImg from '../../assets/logo-white.svg';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useCustomerService } from '../../hooks/customerService';\nimport { useToast } from '../../hooks/toast';\nimport { useAlert } from '../../hooks/alert';\n\ninterface StartServiceFormData {\n  state: string;\n  contract: string;\n  cpf: string;\n}\n\nconst LeftBar: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const { addToast } = useToast();\n  const { customAlert } = useAlert();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    start: startTimer,\n    reset: resetTimer,\n    isRunning,\n    hours,\n    seconds,\n    minutes,\n  } = useStopwatch({\n    autoStart: false,\n  });\n\n  const {\n    startService,\n    customer,\n    finishService,\n    serviceStarted,\n    findAllContracts,\n  } = useCustomerService();\n\n  const [openModalFindContract, setOpenModalFindContract] = useState(false);\n\n  const formRef = useRef<FormHandles>(null);\n\n  const toggleModalFindContract = () => {\n    setOpenModalFindContract(!openModalFindContract);\n  };\n\n  const handleSubmit = useCallback(\n    async (data: StartServiceFormData) => {\n      try {\n        start('Localizando cliente ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          contract: Yup.string().when('cpf', {\n            is: (val: string) => !val.length,\n            then: Yup.string().required('Conta contrato obrigatória'),\n            otherwise: Yup.string(),\n          }),\n          cpf: Yup.string(),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (data.contract && data.cpf) {\n          customAlert({\n            type: 'error',\n            title: 'Erro no formulário',\n            description:\n              'Utilize apenas um dos campos (Conta contrato ou CPF / CNPJ)',\n            confirmationText: 'OK',\n          });\n\n          return;\n        }\n\n        if (!data.contract && data.cpf) {\n          const unformattedCpf = data.cpf.replace(/\\D/gim, '');\n\n          await findAllContracts({\n            stateCode: data.state[0],\n            cpf: unformattedCpf,\n          });\n\n          toggleModalFindContract();\n        } else {\n          await startService({\n            stateCode: data.state[0],\n            contract: data.contract,\n          });\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n        }\n      } finally {\n        stop();\n      }\n    },\n    [startService, start, stop, customAlert, findAllContracts],\n  );\n\n  const formattedTime = useMemo(() => {\n    return format(new Date(0, 0, 0, hours, minutes, seconds), 'mm:ss');\n  }, [hours, minutes, seconds]);\n\n  const handleFinishService = useCallback(async () => {\n    try {\n      start('Finalizando atendimento ...');\n\n      await finishService(formattedTime);\n    } catch {\n      addToast({\n        type: 'error',\n        title: 'Registro de logs',\n        description: 'Ocorreu um erro ao salvar o log do atendimento.',\n      });\n    } finally {\n      stop();\n    }\n  }, [finishService, formattedTime, addToast, start, stop]);\n\n  useEffect(() => {\n    if (serviceStarted && !isRunning) {\n      startTimer();\n    }\n\n    if (!serviceStarted) {\n      resetTimer();\n    }\n  }, [serviceStarted, startTimer, isRunning, resetTimer]);\n\n  return (\n    <Container>\n      <UserMenu>\n        <Logo src={logoWhiteImg} alt=\"Equatorial Energia\" />\n\n        <WelcomeText>\n          Bem vindo,\n          <Username>{user.name}</Username>\n        </WelcomeText>\n\n        <LogoutButton onClick={signOut}>\n          <FiPower />\n          <LogoutButtonText>Sair</LogoutButtonText>\n        </LogoutButton>\n      </UserMenu>\n\n      <ServiceForm>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{ state: '82' }}\n        >\n          <CustomRadioGroup fieldLabel=\"Estado\">\n            <RadioOptions\n              name=\"state\"\n              options={[\n                { id: 'radio1', value: '82', label: 'Alagoas' },\n                { id: 'radio2', value: '98', label: 'Maranhão' },\n                { id: 'radio3', value: '95', label: 'Pará' },\n                { id: 'radio4', value: '86', label: 'Piauí' },\n              ]}\n              disabled={serviceStarted}\n            />\n          </CustomRadioGroup>\n\n          <OutlineInput\n            name=\"contract\"\n            type=\"text\"\n            placeholder=\"Código único ou conta contrato\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          <OutlineInputMask\n            name=\"cpf\"\n            mask=\"999.999.999-99\"\n            type=\"text\"\n            placeholder=\"CPF ou CNPJ\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          {serviceStarted && customer ? (\n            <FinishServiceButton type=\"button\" onClick={handleFinishService}>\n              Encerrar atendimento\n            </FinishServiceButton>\n          ) : (\n            <StartServiceButton type=\"submit\">\n              Iniciar atendimento\n            </StartServiceButton>\n          )}\n\n          {serviceStarted && customer && (\n            <Cronometro>\n              <span>Tempo de atendimento:</span>\n              <h1>{formattedTime}</h1>\n            </Cronometro>\n          )}\n        </Form>\n      </ServiceForm>\n\n      <FindContractModal\n        isOpen={openModalFindContract}\n        setIsOpen={toggleModalFindContract}\n      />\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Container>\n  );\n};\n\nexport default LeftBar;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],["451","452","453","454","455"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["456"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  customStyles?: object;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({\n  children,\n  isOpen,\n  setIsOpen,\n  customStyles,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton\n      closeOnEsc\n      onClose={setIsOpen}\n      customStyles={\n        customStyles || {\n          borderRadius: '8px',\n          padding: '48px 64px',\n          width: '736px',\n          height: 'fit-content',\n        }\n      }\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      {children}\n    </Rodal>\n  );\n};\n\nexport default Modal;\n",["457","458","459","460","461"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx",["462"],"import React from 'react';\nimport { useTable, Column } from 'react-table';\n\nimport {\n  Container,\n  TableContainer,\n  TableHeadContainer,\n  TableColumnsTitleContainer,\n  TableColumnTitle,\n  TableRow,\n  TableBody,\n  TableDataCell,\n} from './styles';\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\ninterface ServiceNotesTableProps {\n  columns: Column<Note>[];\n  data: Note[];\n}\n\nconst ServiceNotesTable: React.FC<ServiceNotesTableProps> = ({\n  columns,\n  data,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <Container>\n      <TableContainer {...getTableProps()}>\n        <TableHeadContainer>\n          {headerGroups.map(headerGroup => (\n            <TableColumnsTitleContainer {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <TableColumnTitle {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </TableColumnTitle>\n              ))}\n            </TableColumnsTitleContainer>\n          ))}\n        </TableHeadContainer>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableDataCell {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableDataCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ServiceNotesTable;\n",["463","464","465","466","467"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["468"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { useAlert } from './alert';\nimport { useAuth } from './auth';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\n\nimport extractResponseData from '../utils/extractResponseData';\nimport ServiceNotes from '../types/ServiceNotes';\nimport eqtlBarApi from '../services/eqtlBarApi';\nimport Address from '../types/Address';\n\ninterface CustomerServiceState {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  protocol?: string;\n  contracts?: Contract[];\n}\n\ninterface GetCustomerData {\n  stateCode: string;\n  contract: string;\n}\n\ninterface StartServiceProps {\n  stateCode: string;\n  contract: string;\n}\n\ninterface CustomerServiceContextData {\n  operatingCompany: string;\n  protocol: string | undefined;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  contracts: Contract[] | undefined;\n  serviceStarted: boolean;\n  getCustomer(customerData: GetCustomerData): Promise<void>;\n  startService({ stateCode, contract }: GetCustomerData): Promise<void>;\n  finishService(attendanceTime: string): Promise<void>;\n  registerServicePerformed({\n    serviceName,\n    executionDate,\n  }: ServicePerformed): void;\n  findAllContracts({ stateCode, cpf }: FindAllContractsProps): Promise<void>;\n}\n\ninterface GenerateProtocolProps {\n  operatingCompany: string;\n  contract: string;\n}\n\ninterface FindAllContractsProps {\n  stateCode: string;\n  cpf: string;\n}\n\ninterface ServicePerformed {\n  serviceName: string;\n  executionDate: Date;\n}\n\ninterface Contract {\n  contractAccount: string;\n  address: Address;\n}\n\nconst CustomerServiceContext = createContext<CustomerServiceContextData>(\n  {} as CustomerServiceContextData,\n);\n\nconst CustomerServiceProvider: React.FC = ({ children }) => {\n  const { customAlert } = useAlert();\n  const { user } = useAuth();\n\n  const [serviceStarted, setServiceStarted] = useState(false);\n  const [servicesPerformed, setServicesPerformed] = useState<\n    ServicePerformed[]\n  >([]);\n\n  const [\n    customerServiceData,\n    setCustomerServiceData,\n  ] = useState<CustomerServiceState>(() => {\n    const storagedCustomerServiceData = localStorage.getItem(\n      '@TelaAgil:customerServiceData',\n    );\n\n    const storagedProtocol = localStorage.getItem('@TelaAgil:protocol');\n\n    if (storagedCustomerServiceData) {\n      const {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts,\n      } = JSON.parse(storagedCustomerServiceData);\n\n      const customerServiceState: CustomerServiceState = {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts,\n      };\n\n      if (storagedProtocol) {\n        customerServiceState.protocol = storagedProtocol;\n      }\n\n      return customerServiceState;\n    }\n\n    return {} as CustomerServiceState;\n  });\n\n  const findAllContracts = useCallback(\n    async ({ stateCode, cpf }: FindAllContractsProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          cpf,\n          flagDadosCliente: true,\n          empresaOperadora: stateCode,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      const contracts = response.data.data.cliente.map((contract: any) => ({\n        contractAccount: contract.contaContrato,\n        address: {\n          publicArea: contract.endereco.logradouro,\n          number: contract.endereco.numero,\n          neighborhood: contract.endereco.bairro,\n          city: contract.endereco.cidade,\n          uf: contract.endereco.uf,\n          postalCode: contract.endereco.cep,\n          referencePoint: contract.endereco.pontoReferencia,\n        },\n      }));\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          ...customerServiceData,\n          contracts,\n        }),\n      );\n\n      setCustomerServiceData({\n        ...customerServiceData,\n        contracts,\n      });\n    },\n    [customerServiceData],\n  );\n\n  const getCustomer = useCallback(\n    async ({ stateCode, contract }: GetCustomerData) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: contract,\n          empresaOperadora: stateCode,\n          flagDadosCliente: true,\n          flagStatusInstalacao: true,\n          flagPossuiDebitos: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n          flagDetalheDebitoCobranca: true,\n          flagDetalheDebitoFatura: true,\n        },\n      });\n\n      const {\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = extractResponseData(response, stateCode);\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          operatingCompany: stateCode,\n          customer,\n          installation,\n          debits,\n          serviceNotes,\n        }),\n      );\n\n      setCustomerServiceData({\n        operatingCompany: stateCode,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      });\n    },\n    [],\n  );\n\n  const generateProtocol = useCallback(\n    async ({ operatingCompany, contract }: GenerateProtocolProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          empresaOperadora: operatingCompany,\n          contrato: contract,\n          flagGerarProtocolo: true,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      localStorage.setItem('@TelaAgil:protocol', response.data.data.protocolo);\n\n      setCustomerServiceData(state => ({\n        ...state,\n        protocol: response.data.data.protocolo,\n      }));\n    },\n    [],\n  );\n\n  const startService = useCallback(\n    async ({ stateCode, contract }: StartServiceProps) => {\n      try {\n        await getCustomer({\n          stateCode,\n          contract,\n        });\n\n        await generateProtocol({\n          contract,\n          operatingCompany: stateCode,\n        });\n\n        setServiceStarted(true);\n      } catch {\n        customAlert({\n          type: 'error',\n          title: 'Erro no atendimento',\n          description:\n            'Ocorreu um erro ao iniciar o atendimento, cheque as informações do cliente',\n          confirmationText: 'OK',\n        });\n      }\n    },\n    [getCustomer, generateProtocol, customAlert],\n  );\n\n  const saveAttendanceLog = useCallback(\n    async (attendanceTime: string) => {\n      await eqtlBarApi.post('/logs', {\n        user_id: user.id,\n        username: user.name,\n        contractAccount: customerServiceData.customer.contractAccount,\n        attendanceTime,\n        services: servicesPerformed,\n      });\n    },\n    [user, customerServiceData.customer, servicesPerformed],\n  );\n\n  const finishService = useCallback(\n    async (attendanceTime: string) => {\n      await saveAttendanceLog(attendanceTime);\n\n      localStorage.removeItem('@TelaAgil:protocol');\n      localStorage.removeItem('@TelaAgil:customerServiceData');\n\n      setCustomerServiceData({} as CustomerServiceContextData);\n\n      setServicesPerformed([]);\n\n      setServiceStarted(false);\n    },\n    [saveAttendanceLog],\n  );\n\n  const registerServicePerformed = useCallback(\n    ({ serviceName, executionDate }: ServicePerformed) => {\n      setServicesPerformed(oldServices => [\n        ...oldServices,\n        { serviceName, executionDate },\n      ]);\n    },\n    [],\n  );\n\n  return (\n    <CustomerServiceContext.Provider\n      value={{\n        operatingCompany: customerServiceData.operatingCompany,\n        protocol: customerServiceData.protocol,\n        customer: customerServiceData.customer,\n        installation: customerServiceData.installation,\n        debits: customerServiceData.debits,\n        serviceNotes: customerServiceData.serviceNotes,\n        contracts: customerServiceData.contracts,\n        serviceStarted,\n        getCustomer,\n        startService,\n        finishService,\n        registerServicePerformed,\n        findAllContracts,\n      }}\n    >\n      {children}\n    </CustomerServiceContext.Provider>\n  );\n};\n\nfunction useCustomerService(): CustomerServiceContextData {\n  const context = useContext(CustomerServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'useCustomerService must be used within a CustomerServiceProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { CustomerServiceProvider, useCustomerService };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx",["469","470"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  disabled,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error} isDisabled={disabled}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n",["471","472","473","474","475"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],["476","477","478","479","480"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx",["481","482","483"],"import React, { useCallback, useEffect, useState } from 'react';\n\nimport StepModal, { Question } from './StepModal';\n\nimport { useCustomerService } from '../../../hooks/customerService';\n\nimport powerOutageQuestions from './questions/PowerOutageQuestions';\n\ninterface FlowComponentProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst PowerOutageFlow: React.FC<FlowComponentProps> = ({\n  modalOpen,\n  toggleModal,\n}) => {\n  const [questions, setQuestions] = useState<Question[]>(powerOutageQuestions);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n\n  const handleSetCurrentQuestion = useCallback(\n    (nextQuestionId: string) => {\n      const nextQuestion: Question | undefined = questions.find(\n        question => question.id === nextQuestionId,\n      );\n\n      if (nextQuestion) {\n        setCurrentQuestion(nextQuestion);\n      }\n    },\n    [questions],\n  );\n\n  const handleClearFlow = useCallback(() => {\n    setCurrentQuestion(questions[0]);\n  }, [questions]);\n\n  return (\n    <StepModal\n      isOpen={modalOpen}\n      setIsOpen={toggleModal}\n      title=\"Falta de energia\"\n      question={currentQuestion}\n      setCurrentQuestion={handleSetCurrentQuestion}\n      clearFlow={handleClearFlow}\n    />\n  );\n};\n\nexport default PowerOutageFlow;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",["484"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { useLoading } from 'react-use-loading';\n\nimport eqtlBarApi from '../../../services/eqtlBarApi';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\n\nimport {\n  ModalContent,\n  SelectDate,\n  ConfirmButton,\n  SelectContainer,\n} from './styles';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useAlert } from '../../../hooks/alert';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface ValidDate {\n  description: string;\n  code: string;\n}\n\ninterface ResponseValidDate {\n  descricaoDt: string;\n  codigoDt: string;\n}\n\ninterface GetDueDateListProps {\n  contract: string;\n  stateCode: string;\n}\n\ninterface SetDueDateProps {\n  contract: string;\n  stateCode: string;\n  requestedDate: string;\n}\n\ninterface OptionProps {\n  value: string;\n  label: string;\n}\n\nconst DueDateChange: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    customer,\n    operatingCompany,\n    registerServicePerformed,\n  } = useCustomerService();\n  const { customAlert } = useAlert();\n\n  const [validDates, setValidDates] = useState<ValidDate[]>([]);\n  const [selectOptions, setSelectOptions] = useState<OptionProps[]>([]);\n  const [selectedDate, setSelectedDate] = useState<OptionProps | undefined>(\n    undefined,\n  );\n\n  const getDueDateList = useCallback(\n    async ({ contract, stateCode }: GetDueDateListProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagConsultar: true,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      return response.data.data.listaDataCerta;\n    },\n    [],\n  );\n\n  const setDueDate = useCallback(\n    async ({ contract, stateCode, requestedDate }: SetDueDateProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagAlterar: true,\n          dataSolicitada: requestedDate,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      if (response.data.data.mensagem !== 'Data Certa Incluida com Sucesso!') {\n        throw new Error(response.data.data.mensagem);\n      }\n    },\n    [],\n  );\n\n  const handleChangeSelect = useCallback((value: OptionProps) => {\n    setSelectedDate(value);\n  }, []);\n\n  const handleClickSetDueDate = useCallback(async () => {\n    try {\n      start('Ativando serviço ...');\n\n      if (selectedDate) {\n        await setDueDate({\n          contract: customer.contractAccount,\n          stateCode: operatingCompany,\n          requestedDate: selectedDate.value,\n        });\n\n        customAlert({\n          type: 'success',\n          title: 'Sucesso na alteração',\n          description: 'Data certa alterada com sucesso.',\n          confirmationText: 'OK',\n        });\n      }\n    } catch (err) {\n      customAlert({\n        type: 'error',\n        title: 'Erro na alteração',\n        description: err.message,\n        confirmationText: 'OK',\n      });\n    } finally {\n      setIsOpen();\n      stop();\n    }\n  }, [\n    customAlert,\n    selectedDate,\n    setDueDate,\n    setIsOpen,\n    start,\n    stop,\n    customer,\n    operatingCompany,\n  ]);\n\n  useEffect(() => {\n    getDueDateList({\n      contract: customer.contractAccount,\n      stateCode: operatingCompany,\n    }).then(data => {\n      setValidDates(\n        data.map((date: ResponseValidDate) => {\n          const validDate: ValidDate = {\n            description: date.descricaoDt,\n            code: date.codigoDt,\n          };\n\n          return validDate;\n        }),\n      );\n    });\n  }, [customer, getDueDateList, operatingCompany]);\n\n  useEffect(() => {\n    setSelectOptions(\n      validDates.map(date => {\n        const option: OptionProps = {\n          value: date.description,\n          label: date.code,\n        };\n\n        return option;\n      }),\n    );\n  }, [validDates]);\n\n  useEffect(() => {\n    setSelectedDate(undefined);\n  }, [setIsOpen]);\n\n  useEffect(() => {\n    if (isOpen) {\n      registerServicePerformed({\n        serviceName: 'Alteração de Data Certa',\n        executionDate: new Date(),\n      });\n    }\n  }, [registerServicePerformed, isOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      {validDates.length ? (\n        <ModalContent>\n          <h2>Data certa</h2>\n\n          <h1>\n            Escolha a melhor data para você receber suas próximas faturas:\n          </h1>\n\n          <SelectContainer>\n            <SelectDate\n              name=\"dueDate\"\n              options={[...selectOptions]}\n              maxMenuHeight={144}\n              placeholder=\"Selecione\"\n              onChange={(value: OptionProps) => handleChangeSelect(value)}\n            />\n\n            <ConfirmButton\n              type=\"button\"\n              onClick={handleClickSetDueDate}\n              disabled={!selectedDate}\n            >\n              Cadastrar\n            </ConfirmButton>\n          </SelectContainer>\n        </ModalContent>\n      ) : (\n        <p>Data certa não habilitada para o cliente</p>\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DueDateChange;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["485","486"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/index.tsx",["487"],"import React, { useCallback, useState } from 'react';\n\nimport DebitsValidationModal, { Question } from './DebitsValidationModal';\n\nimport { currencyMask } from '../../../utils/inputMasks';\n\nimport { useCustomerService } from '../../../hooks/customerService';\n\ninterface FlowComponentProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst PowerReconnectionFlow: React.FC<FlowComponentProps> = ({\n  modalOpen,\n  toggleModal,\n}) => {\n  const { debits } = useCustomerService();\n\n  const powerReconnectionQuestions: Question[] = [\n    {\n      id: 'f1-q1',\n      title: `Você possui ${\n        debits.invoiceDebits.invoiceDebitDetails.length\n      } faturas com um débito de ${currencyMask(\n        debits.invoiceDebits.totalAmountInvoiceDebits,\n      )}. Estão pagas?`,\n      options: [\n        {\n          answer: 'Sim',\n          action: 'valida-religa-urgencia',\n        },\n        {\n          answer: 'Não',\n          nextQuestionId: 'resposta-efetue-pagamento',\n        },\n      ],\n    },\n    {\n      id: 'f1-q2',\n      title: `Você possui débitos de parcelamento com entrada de ${currencyMask(\n        debits.installmentDebits.totalAmountInstallmentDebits,\n      )}. Estão pagos?`,\n      options: [\n        {\n          answer: 'Sim',\n          action: 'valida-religa-urgencia',\n        },\n        {\n          answer: 'Não',\n          nextQuestionId: 'resposta-efetue-pagamento',\n        },\n      ],\n    },\n    {\n      id: 'resposta-efetue-pagamento',\n      title: 'Efetue o pagamento e retorne para solicitar a religação.',\n      options: [\n        {\n          answer: 'Sair',\n        },\n      ],\n    },\n  ];\n\n  const [questions, setQuestions] = useState<Question[]>(\n    powerReconnectionQuestions,\n  );\n  const [currentQuestion, setCurrentQuestion] = useState(\n    debits.invoiceDebits.totalAmountInvoiceDebits > 0\n      ? questions[0]\n      : questions[1],\n  );\n\n  const handleSetCurrentQuestion = useCallback(\n    (nextQuestionId: string) => {\n      const nextQuestion: Question | undefined = questions.find(\n        question => question.id === nextQuestionId,\n      );\n\n      if (nextQuestion) {\n        setCurrentQuestion(nextQuestion);\n      }\n    },\n    [questions],\n  );\n\n  const handleClearFlow = useCallback(() => {\n    setCurrentQuestion(questions[0]);\n  }, [questions]);\n\n  return (\n    <>\n      {debits.invoiceDebits.totalAmountInvoiceDebits > 0 ||\n      debits.installmentDebits.totalAmountInstallmentDebits > 0 ? (\n        <DebitsValidationModal\n          isOpen={modalOpen}\n          setIsOpen={toggleModal}\n          title=\"Religação\"\n          question={currentQuestion}\n          setCurrentQuestion={handleSetCurrentQuestion}\n          clearFlow={handleClearFlow}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default PowerReconnectionFlow;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",["488"],"import React, { createContext, useCallback, useContext } from 'react';\n\nimport eqtlBarApi from '../services/eqtlBarApi';\n\ninterface PowerReconnectionContextData {\n  ableToReconnection(): boolean;\n  suitableForEmergencyReconnection(): boolean;\n}\n\nconst PowerReconnectionServiceContext = createContext<PowerReconnectionContextData>(\n  {} as PowerReconnectionContextData,\n);\n\nconst PowerReconnectionProvider: React.FC = ({ children }) => {\n  const ableToReconnection = useCallback(() => {\n    return false; // HARD CODDED\n  }, []);\n\n  const suitableForEmergencyReconnection = useCallback(() => {\n    return false; // HARD CODDED\n  }, []);\n\n  return (\n    <PowerReconnectionServiceContext.Provider\n      value={{ ableToReconnection, suitableForEmergencyReconnection }}\n    >\n      {children}\n    </PowerReconnectionServiceContext.Provider>\n  );\n};\n\nfunction usePowerReconnectionService(): PowerReconnectionContextData {\n  const context = useContext(PowerReconnectionServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'usePowerReconnectionService must be used within a PowerReconnectionProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { PowerReconnectionProvider, usePowerReconnectionService };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx",["489","490","491"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],{"ruleId":"492","replacedBy":"493"},{"ruleId":"494","replacedBy":"495"},{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","replacedBy":"501"},{"ruleId":"492","replacedBy":"502"},{"ruleId":"494","replacedBy":"503"},{"ruleId":"496","replacedBy":"504"},{"ruleId":"498","replacedBy":"505"},{"ruleId":"500","replacedBy":"506"},{"ruleId":"492","replacedBy":"507"},{"ruleId":"494","replacedBy":"508"},{"ruleId":"496","replacedBy":"509"},{"ruleId":"498","replacedBy":"510"},{"ruleId":"500","replacedBy":"511"},{"ruleId":"492","replacedBy":"512"},{"ruleId":"494","replacedBy":"513"},{"ruleId":"496","replacedBy":"514"},{"ruleId":"498","replacedBy":"515"},{"ruleId":"500","replacedBy":"516"},{"ruleId":"492","replacedBy":"517"},{"ruleId":"494","replacedBy":"518"},{"ruleId":"496","replacedBy":"519"},{"ruleId":"498","replacedBy":"520"},{"ruleId":"500","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":86,"column":25,"nodeType":"524","messageId":"525","endLine":86,"endColumn":28,"suggestions":"526"},{"ruleId":"522","severity":1,"message":"523","line":151,"column":36,"nodeType":"524","messageId":"525","endLine":151,"endColumn":39,"suggestions":"527"},{"ruleId":"522","severity":1,"message":"523","line":155,"column":13,"nodeType":"524","messageId":"525","endLine":155,"endColumn":16,"suggestions":"528"},{"ruleId":"522","severity":1,"message":"523","line":167,"column":13,"nodeType":"524","messageId":"525","endLine":167,"endColumn":16,"suggestions":"529"},{"ruleId":"522","severity":1,"message":"523","line":202,"column":12,"nodeType":"524","messageId":"525","endLine":202,"endColumn":15,"suggestions":"530"},{"ruleId":"522","severity":1,"message":"523","line":221,"column":12,"nodeType":"524","messageId":"525","endLine":221,"endColumn":15,"suggestions":"531"},{"ruleId":"492","replacedBy":"532"},{"ruleId":"494","replacedBy":"533"},{"ruleId":"496","replacedBy":"534"},{"ruleId":"498","replacedBy":"535"},{"ruleId":"500","replacedBy":"536"},{"ruleId":"537","severity":1,"message":"538","line":18,"column":3,"nodeType":"539","messageId":"540","endLine":18,"endColumn":12},{"ruleId":"492","replacedBy":"541"},{"ruleId":"494","replacedBy":"542"},{"ruleId":"496","replacedBy":"543"},{"ruleId":"498","replacedBy":"544"},{"ruleId":"500","replacedBy":"545"},{"ruleId":"492","replacedBy":"546"},{"ruleId":"494","replacedBy":"547"},{"ruleId":"496","replacedBy":"548"},{"ruleId":"498","replacedBy":"549"},{"ruleId":"500","replacedBy":"550"},{"ruleId":"492","replacedBy":"551"},{"ruleId":"494","replacedBy":"552"},{"ruleId":"496","replacedBy":"553"},{"ruleId":"498","replacedBy":"554"},{"ruleId":"500","replacedBy":"555"},{"ruleId":"492","replacedBy":"556"},{"ruleId":"494","replacedBy":"557"},{"ruleId":"496","replacedBy":"558"},{"ruleId":"498","replacedBy":"559"},{"ruleId":"500","replacedBy":"560"},{"ruleId":"561","severity":1,"message":"562","line":142,"column":5,"nodeType":"563","endLine":142,"endColumn":63,"suggestions":"564"},{"ruleId":"492","replacedBy":"565"},{"ruleId":"494","replacedBy":"566"},{"ruleId":"496","replacedBy":"567"},{"ruleId":"498","replacedBy":"568"},{"ruleId":"500","replacedBy":"569"},{"ruleId":"522","severity":1,"message":"523","line":7,"column":13,"nodeType":"524","messageId":"525","endLine":7,"endColumn":16,"suggestions":"570"},{"ruleId":"492","replacedBy":"571"},{"ruleId":"494","replacedBy":"572"},{"ruleId":"496","replacedBy":"573"},{"ruleId":"498","replacedBy":"574"},{"ruleId":"500","replacedBy":"575"},{"ruleId":"537","severity":1,"message":"576","line":55,"column":27,"nodeType":"539","messageId":"540","endLine":55,"endColumn":28},{"ruleId":"492","replacedBy":"577"},{"ruleId":"494","replacedBy":"578"},{"ruleId":"496","replacedBy":"579"},{"ruleId":"498","replacedBy":"580"},{"ruleId":"500","replacedBy":"581"},{"ruleId":"522","severity":1,"message":"523","line":138,"column":67,"nodeType":"524","messageId":"525","endLine":138,"endColumn":70,"suggestions":"582"},{"ruleId":"522","severity":1,"message":"523","line":37,"column":21,"nodeType":"524","messageId":"525","endLine":37,"endColumn":24,"suggestions":"583"},{"ruleId":"522","severity":1,"message":"523","line":40,"column":23,"nodeType":"524","messageId":"525","endLine":40,"endColumn":26,"suggestions":"584"},{"ruleId":"492","replacedBy":"585"},{"ruleId":"494","replacedBy":"586"},{"ruleId":"496","replacedBy":"587"},{"ruleId":"498","replacedBy":"588"},{"ruleId":"500","replacedBy":"589"},{"ruleId":"492","replacedBy":"590"},{"ruleId":"494","replacedBy":"591"},{"ruleId":"496","replacedBy":"592"},{"ruleId":"498","replacedBy":"593"},{"ruleId":"500","replacedBy":"594"},{"ruleId":"537","severity":1,"message":"595","line":1,"column":30,"nodeType":"539","messageId":"540","endLine":1,"endColumn":39},{"ruleId":"537","severity":1,"message":"596","line":5,"column":10,"nodeType":"539","messageId":"540","endLine":5,"endColumn":28},{"ruleId":"537","severity":1,"message":"597","line":18,"column":21,"nodeType":"539","messageId":"540","endLine":18,"endColumn":33},{"ruleId":"537","severity":1,"message":"598","line":1,"column":41,"nodeType":"539","messageId":"540","endLine":1,"endColumn":47},{"ruleId":"522","severity":1,"message":"523","line":36,"column":21,"nodeType":"524","messageId":"525","endLine":36,"endColumn":24,"suggestions":"599"},{"ruleId":"522","severity":1,"message":"523","line":39,"column":23,"nodeType":"524","messageId":"525","endLine":39,"endColumn":26,"suggestions":"600"},{"ruleId":"537","severity":1,"message":"597","line":66,"column":21,"nodeType":"539","messageId":"540","endLine":66,"endColumn":33},{"ruleId":"537","severity":1,"message":"601","line":3,"column":8,"nodeType":"539","messageId":"540","endLine":3,"endColumn":18},{"ruleId":"537","severity":1,"message":"602","line":6,"column":8,"nodeType":"539","messageId":"540","endLine":6,"endColumn":13},{"ruleId":"537","severity":1,"message":"603","line":23,"column":9,"nodeType":"539","messageId":"540","endLine":23,"endColumn":36},{"ruleId":"537","severity":1,"message":"604","line":38,"column":9,"nodeType":"539","messageId":"540","endLine":38,"endColumn":13},"lines-around-directive",["605"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["605"],[],[],[],[],["605"],[],[],[],[],["605"],[],[],[],[],["605"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["606","607"],["608","609"],["610","611"],["612","613"],["614","615"],["616","617"],["605"],[],[],[],[],"@typescript-eslint/no-unused-vars","'setIsOpen' is defined but never used.","Identifier","unusedVar",["605"],[],[],[],[],["605"],[],[],[],[],["605"],[],[],[],[],["605"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'toggleModalFindContract'. Either include it or remove the dependency array.","ArrayExpression",["618"],["605"],[],[],[],[],["619","620"],["605"],[],[],[],[],"'i' is defined but never used.",["605"],[],[],[],[],["621","622"],["623","624"],["625","626"],["605"],[],[],[],[],["605"],[],[],[],[],"'useEffect' is defined but never used.","'useCustomerService' is defined but never used.","'setQuestions' is assigned a value but never used.","'useRef' is defined but never used.",["627","628"],["629","630"],"'eqtlBarApi' is defined but never used.","'Table' is defined but never used.","'columns' is assigned a value but never used.","'data' is assigned a value but never used.","padding-line-between-statements",{"messageId":"631","fix":"632","desc":"633"},{"messageId":"634","fix":"635","desc":"636"},{"messageId":"631","fix":"637","desc":"633"},{"messageId":"634","fix":"638","desc":"636"},{"messageId":"631","fix":"639","desc":"633"},{"messageId":"634","fix":"640","desc":"636"},{"messageId":"631","fix":"641","desc":"633"},{"messageId":"634","fix":"642","desc":"636"},{"messageId":"631","fix":"643","desc":"633"},{"messageId":"634","fix":"644","desc":"636"},{"messageId":"631","fix":"645","desc":"633"},{"messageId":"634","fix":"646","desc":"636"},{"desc":"647","fix":"648"},{"messageId":"631","fix":"649","desc":"633"},{"messageId":"634","fix":"650","desc":"636"},{"messageId":"631","fix":"651","desc":"633"},{"messageId":"634","fix":"652","desc":"636"},{"messageId":"631","fix":"653","desc":"633"},{"messageId":"634","fix":"654","desc":"636"},{"messageId":"631","fix":"655","desc":"633"},{"messageId":"634","fix":"656","desc":"636"},{"messageId":"631","fix":"657","desc":"633"},{"messageId":"634","fix":"658","desc":"636"},{"messageId":"631","fix":"659","desc":"633"},{"messageId":"634","fix":"660","desc":"636"},"suggestUnknown",{"range":"661","text":"662"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"661","text":"663"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"664","text":"662"},{"range":"664","text":"663"},{"range":"665","text":"662"},{"range":"665","text":"663"},{"range":"666","text":"662"},{"range":"666","text":"663"},{"range":"667","text":"662"},{"range":"667","text":"663"},{"range":"668","text":"662"},{"range":"668","text":"663"},"Update the dependencies array to be: [start, customAlert, findAllContracts, toggleModalFindContract, startService, stop]",{"range":"669","text":"670"},{"range":"671","text":"662"},{"range":"671","text":"663"},{"range":"672","text":"662"},{"range":"672","text":"663"},{"range":"673","text":"662"},{"range":"673","text":"663"},{"range":"674","text":"662"},{"range":"674","text":"663"},{"range":"675","text":"662"},{"range":"675","text":"663"},{"range":"676","text":"662"},{"range":"676","text":"663"},[2678,2681],"unknown","never",[4297,4300],[4489,4492],[4898,4901],[5907,5910],[6532,6535],[3535,3593],"[start, customAlert, findAllContracts, toggleModalFindContract, startService, stop]",[147,150],[3517,3520],[975,978],[1062,1065],[963,966],[1050,1053]]