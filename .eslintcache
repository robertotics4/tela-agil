[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"71","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"72","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts":"73","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"74","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"75","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"76","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx":"77","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx":"78","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"79","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"80","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts":"81","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx":"82","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts":"83"},{"size":479,"mtime":1619035218154,"results":"84","hashOfConfig":"85"},{"size":2120,"mtime":1619035218150,"results":"86","hashOfConfig":"85"},{"size":7072,"mtime":1619035218154,"results":"87","hashOfConfig":"85"},{"size":1482,"mtime":1618857799129,"results":"88","hashOfConfig":"85"},{"size":802,"mtime":1619035218154,"results":"89","hashOfConfig":"85"},{"size":272,"mtime":1619122485148,"results":"90","hashOfConfig":"85"},{"size":7797,"mtime":1619040873078,"results":"91","hashOfConfig":"85"},{"size":357,"mtime":1619035218154,"results":"92","hashOfConfig":"85"},{"size":266,"mtime":1619035218154,"results":"93","hashOfConfig":"85"},{"size":1081,"mtime":1619035218150,"results":"94","hashOfConfig":"85"},{"size":162,"mtime":1619035218150,"results":"95","hashOfConfig":"85"},{"size":1557,"mtime":1619035218150,"results":"96","hashOfConfig":"85"},{"size":296,"mtime":1619035218150,"results":"97","hashOfConfig":"85"},{"size":2177,"mtime":1618857799125,"results":"98","hashOfConfig":"85"},{"size":1170,"mtime":1618857799129,"results":"99","hashOfConfig":"85"},{"size":1399,"mtime":1619035218150,"results":"100","hashOfConfig":"85"},{"size":1655,"mtime":1619035218150,"results":"101","hashOfConfig":"85"},{"size":980,"mtime":1619035218150,"results":"102","hashOfConfig":"85"},{"size":363,"mtime":1619035218146,"results":"103","hashOfConfig":"85"},{"size":186,"mtime":1619035218150,"results":"104","hashOfConfig":"85"},{"size":3318,"mtime":1619035218150,"results":"105","hashOfConfig":"85"},{"size":893,"mtime":1619035218150,"results":"106","hashOfConfig":"85"},{"size":705,"mtime":1619035218150,"results":"107","hashOfConfig":"85"},{"size":572,"mtime":1619035218150,"results":"108","hashOfConfig":"85"},{"size":9052,"mtime":1619035218150,"results":"109","hashOfConfig":"85"},{"size":2871,"mtime":1619035218150,"results":"110","hashOfConfig":"85"},{"size":3327,"mtime":1619035218150,"results":"111","hashOfConfig":"85"},{"size":4907,"mtime":1619035218150,"results":"112","hashOfConfig":"85"},{"size":353,"mtime":1619035218150,"results":"113","hashOfConfig":"85"},{"size":1138,"mtime":1619035218150,"results":"114","hashOfConfig":"85"},{"size":629,"mtime":1619035218150,"results":"115","hashOfConfig":"85"},{"size":10201,"mtime":1619035218150,"results":"116","hashOfConfig":"85"},{"size":10839,"mtime":1619042312957,"results":"117","hashOfConfig":"85"},{"size":534,"mtime":1619035218154,"results":"118","hashOfConfig":"85"},{"size":1183,"mtime":1619035218150,"results":"119","hashOfConfig":"85"},{"size":1483,"mtime":1619035218154,"results":"120","hashOfConfig":"85"},{"size":23097,"mtime":1619041233150,"results":"121","hashOfConfig":"85"},{"size":3057,"mtime":1619035218154,"results":"122","hashOfConfig":"85"},{"size":758,"mtime":1619035218154,"results":"123","hashOfConfig":"85"},{"size":1363,"mtime":1619035218146,"results":"124","hashOfConfig":"85"},{"size":316,"mtime":1619035218146,"results":"125","hashOfConfig":"85"},{"size":135,"mtime":1619035218150,"results":"126","hashOfConfig":"85"},{"size":377,"mtime":1619035218146,"results":"127","hashOfConfig":"85"},{"size":419,"mtime":1619035218150,"results":"128","hashOfConfig":"85"},{"size":1765,"mtime":1619035218146,"results":"129","hashOfConfig":"85"},{"size":436,"mtime":1619035218150,"results":"130","hashOfConfig":"85"},{"size":414,"mtime":1619035218150,"results":"131","hashOfConfig":"85"},{"size":463,"mtime":1619035218154,"results":"132","hashOfConfig":"85"},{"size":1239,"mtime":1619035218150,"results":"133","hashOfConfig":"85"},{"size":5698,"mtime":1619035218150,"results":"134","hashOfConfig":"85"},{"size":5493,"mtime":1619035218150,"results":"135","hashOfConfig":"85"},{"size":262,"mtime":1619035218154,"results":"136","hashOfConfig":"85"},{"size":1222,"mtime":1619035218150,"results":"137","hashOfConfig":"85"},{"size":751,"mtime":1619035218150,"results":"138","hashOfConfig":"85"},{"size":852,"mtime":1619035218150,"results":"139","hashOfConfig":"85"},{"size":298,"mtime":1619119785970,"results":"140","hashOfConfig":"85"},{"size":176,"mtime":1619119920867,"results":"141","hashOfConfig":"85"},{"size":3617,"mtime":1619039376828,"results":"142","hashOfConfig":"85"},{"size":1803,"mtime":1619035218150,"results":"143","hashOfConfig":"85"},{"size":1200,"mtime":1619035218150,"results":"144","hashOfConfig":"85"},{"size":2131,"mtime":1619041516801,"results":"145","hashOfConfig":"85"},{"size":7338,"mtime":1619041540321,"results":"146","hashOfConfig":"85"},{"size":1732,"mtime":1619035218154,"results":"147","hashOfConfig":"85"},{"size":785,"mtime":1619035218150,"results":"148","hashOfConfig":"85"},{"size":1180,"mtime":1619035218150,"results":"149","hashOfConfig":"85"},{"size":1671,"mtime":1619035218150,"results":"150","hashOfConfig":"85"},{"size":1448,"mtime":1619035218150,"results":"151","hashOfConfig":"85"},{"size":1656,"mtime":1619035218150,"results":"152","hashOfConfig":"85"},{"size":275,"mtime":1619035218150,"results":"153","hashOfConfig":"85"},{"size":379,"mtime":1619035218154,"results":"154","hashOfConfig":"85"},{"size":615,"mtime":1619035218154,"results":"155","hashOfConfig":"85"},{"size":234,"mtime":1619035218150,"results":"156","hashOfConfig":"85"},{"size":1271,"mtime":1619035218150,"results":"157","hashOfConfig":"85"},{"size":1161,"mtime":1619035218150,"results":"158","hashOfConfig":"85"},{"size":2490,"mtime":1619035218150,"results":"159","hashOfConfig":"85"},{"size":1609,"mtime":1619035218150,"results":"160","hashOfConfig":"85"},{"size":1527,"mtime":1619035218150,"results":"161","hashOfConfig":"85"},{"size":1265,"mtime":1619035218150,"results":"162","hashOfConfig":"85"},{"size":366,"mtime":1619035218150,"results":"163","hashOfConfig":"85"},{"size":743,"mtime":1619035218150,"results":"164","hashOfConfig":"85"},{"size":807,"mtime":1619035218150,"results":"165","hashOfConfig":"85"},{"size":343,"mtime":1619035218150,"results":"166","hashOfConfig":"85"},{"size":2199,"mtime":1619035218154,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cwa88",{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"175"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"223"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"223"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"193"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx",["348"],"import React, { createContext, useCallback, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport yaloApi from '../services/yaloApi';\n\ninterface UrlVariationsProps {\n  [operatingCompany: string]: {\n    id: string;\n    token: {\n      activeSession: string;\n      noSession: string;\n    };\n  };\n}\n\nconst urlVariations: UrlVariationsProps = {\n  '98': {\n    id: 'equatorial-cemar',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiZXhwIjoxNTUzNzM1NjIwLCJpYXQiOjE1NTEzMTY0MjAsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiJlNjM2MmVmYS01ZDRlLTQ0Y2EtODE0OS0xMmQ0ZGY3MmViNWIiLCJuYmYiOjE1NTEzMTY0MTksInN1YiI6IjVjNzczNWMxMzdhZGE5MDAwODg1OWIwMSIsInR5cCI6ImFjY2VzcyJ9.ExSTxYepjNNi1NWV_MtC_g87NEmZz7tAPpeGHLfre9IkiI3oC2np945L9nCTTzleqgjJ9kWUNscdJaaEIy6SPg',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '95': {\n    id: 'equatorial-celpa',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiZXhwIjoxNTU1MDM2OTM1LCJpYXQiOjE1NTI2MTc3MzUsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiI2Y2JjN2I0OC03YzYwLTRjOTgtOGQwNy1jODAxZmE0MmRhMzUiLCJuYmYiOjE1NTI2MTc3MzQsInN1YiI6IjVjOGIwZjcyZTU3M2ZjMDAwOTE0NjA1MiIsInR5cCI6ImFjY2VzcyJ9.mU7bgLdmcdFgxt017Ds2UrlNyUNzy31irOyLQTJwVSoeGo7ejKwzN0ctpV6Ntm3rGkF4G_xnI1T8Ua0hPZP1WQ',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '82': {\n    id: 'equatorial-alagoas',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiYm90IjoiZXF1YXRvcmlhbC1hbGFnb2FzIiwiZXhwIjoxNTcwMDQyMzIxLCJpYXQiOjE1Njc2MjMxMjEsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiI2NWQ1OGQ0Zi03MDM0LTRjNGItOWYyNS0yYzRmMTdjMzYwN2EiLCJuYmYiOjE1Njc2MjMxMjAsInN1YiI6IjVkNzAwN2M4NmM5OGFhMDAwOTBlZDc3ZiIsInR5cCI6ImFjY2VzcyJ9.VTPLnWo7zJYDMlrywLVN1LV36rFA7C6NfLmoIOxy8WyyHsenon5C7gALbgfwtZnmtHnvz-ERNzVtcYewlgOl0A',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '86': {\n    id: 'equatorial-piaui',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiYm90IjoiZXF1YXRvcmlhbC1waWF1aSIsImV4cCI6MTU3MDA0MjIzNiwiaWF0IjoxNTY3NjIzMDM2LCJpc3MiOiJ5YWxvY2hhdF9hdXRoIiwianRpIjoiNDBhNWRjMGUtZDQwZS00OGM0LTkzMTQtY2ViMzQ4MTJlNDk3IiwibmJmIjoxNTY3NjIzMDM1LCJzdWIiOiI1ZDcwMDcxMWZlZTExNTAwMGJhZTJhNjkiLCJ0eXAiOiJhY2Nlc3MifQ.-M94J42QltLdAHuHxyiz-BaFR6EfxHfUA8Z89Jblp6udxL-xIHn8yhDUCUL7nGrPxfMhbR6nJAf6Rg4EsujVZQ',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n};\n\ninterface WhatsappSendingContextData {\n  sendNotification({\n    operatingCompany,\n    phoneNumber,\n  }: SendNotificationProps): Promise<void>;\n  sendInvoiceDebit({\n    operatingCompany,\n    invoiceUrl,\n    reference,\n    phoneNumber,\n  }: SendInvoiceDebitProps): Promise<void>;\n  sendInstallmentPayment({\n    operatingCompany,\n    phoneNumber,\n    name,\n    contract,\n    amount,\n    barCode,\n  }: SendInstallmentPaymentProps): Promise<void>;\n}\n\ninterface SendInvoiceDebitProps {\n  operatingCompany: string;\n  invoiceUrl: string;\n  reference: string;\n  phoneNumber: string;\n}\n\ninterface SendNotificationProps {\n  operatingCompany: string;\n  phoneNumber: string;\n}\n\ninterface SendInstallmentPaymentProps {\n  operatingCompany: string;\n  phoneNumber: string;\n  name: string;\n  contract: string;\n  amount: number;\n  barCode: string;\n}\n\nconst WhatsappSendingContext = createContext<WhatsappSendingContextData>(\n  {} as WhatsappSendingContextData,\n);\n\nconst WhatsappSendingProvider: React.FC = ({ children }) => {\n  const sendNotification = useCallback(\n    async ({ operatingCompany, phoneNumber }: SendNotificationProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'entrada-parcelamento',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                nomeCliente: 'teste',\n                contaContrato: 'teste',\n                valorEntrada: 'teste',\n                codBarras: 'teste',\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  const sendInstallmentPayment = useCallback(\n    async ({\n      operatingCompany,\n      phoneNumber,\n      name,\n      contract,\n      amount,\n      barCode,\n    }: SendInstallmentPaymentProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'entrada-parcelamento',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                nomeCliente: name,\n                contaContrato: contract,\n                valorEntrada: amount,\n                codBarras: barCode,\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  const sendInvoiceDebit = useCallback(\n    async ({\n      operatingCompany,\n      invoiceUrl,\n      reference,\n      phoneNumber,\n    }: SendInvoiceDebitProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'segunda-via',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                document: {\n                  caption: `2ª via de fatura (${reference})`,\n                  link: invoiceUrl,\n                },\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  return (\n    <WhatsappSendingContext.Provider\n      value={{\n        sendNotification,\n        sendInvoiceDebit,\n        sendInstallmentPayment,\n      }}\n    >\n      {children}\n    </WhatsappSendingContext.Provider>\n  );\n};\n\nfunction useWhatsappSending(): WhatsappSendingContextData {\n  const context = useContext(WhatsappSendingContext);\n\n  if (!context) {\n    throw new Error(\n      'useWhatsappSending must be used within a WhatsappSendingProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { WhatsappSendingProvider, useWhatsappSending };\n",["349","350","351","352","353"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["354","355","356","357","358","359","360"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount:\n      typeof responseCustomer.contaContrato === 'string'\n        ? responseCustomer.contaContrato.replace(/^0+/, '')\n        : responseCustomer.contaContrato.toString().replace(/^0+/, ''),\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: Number(debitosFatura.valorTotalDebitoFatura),\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits: Number(\n        debitosParcelamento.valorTotalDebitoParcelamento,\n      ),\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport { extractResponseData, getInstallationData, getServiceNotes };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],["361","362","363","364","365"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["366"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\nimport Spinner from 'react-spinkit';\n\nimport 'rodal/lib/rodal.css';\n\nimport { Content } from './styles';\n\ninterface LoadingModalProps {\n  isOpen: boolean;\n  message?: string;\n  setIsOpen: () => void;\n}\n\nconst LoadingModal: React.FC<LoadingModalProps> = ({\n  isOpen,\n  message,\n  setIsOpen,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton={false}\n      customStyles={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n        width: 'fit-content',\n      }}\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      <Content>\n        <Spinner name=\"ball-pulse-sync\" fadeIn=\"none\" color=\"#fff\" />\n        <h2>{message}</h2>\n      </Content>\n    </Rodal>\n  );\n};\n\nexport default LoadingModal;\n",["367","368","369","370","371"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx",["372","373"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["374"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  customStyles?: object;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({\n  children,\n  isOpen,\n  setIsOpen,\n  customStyles,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton\n      closeOnEsc\n      onClose={setIsOpen}\n      customStyles={\n        customStyles || {\n          borderRadius: '8px',\n          padding: '48px 64px',\n          width: '736px',\n          height: 'fit-content',\n        }\n      }\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      {children}\n    </Rodal>\n  );\n};\n\nexport default Modal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],["375","376","377","378","379"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",["380"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { format } from 'date-fns';\nimport { useLoading } from 'react-use-loading';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\n\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport getUnformattedPhone from '../../../utils/getUnformattedPhone';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useDebitsConsultation } from '../../../hooks/debitsConsultation';\nimport { useWhatsappSending } from '../../../hooks/whatsappSending';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\nimport InputMask from '../../InputMask';\n\nimport { currencyMask } from '../../../utils/inputMasks';\n\nimport { InstallmentDebit, InvoiceDebit } from '../../../types/Debits';\nimport { ModalContent, SendButton, DebitContainer } from './styles';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface SendDebitFormData {\n  phone: string;\n}\n\nconst DebitsConsultationModal: React.FC<ModalProps> = ({\n  isOpen,\n  setIsOpen,\n}) => {\n  const [selectedDebit, setSelectedDebit] = useState<\n    InstallmentDebit | InvoiceDebit | undefined\n  >(undefined);\n\n  const {\n    debits,\n    customer,\n    operatingCompany,\n    registerServicePerformed,\n  } = useCustomerService();\n  const { getInvoiceUrl } = useDebitsConsultation();\n  const { sendInvoiceDebit, sendInstallmentPayment } = useWhatsappSending();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const selectedDebitReference = useMemo(() => {\n    if (selectedDebit) {\n      if (Object.keys(selectedDebit).includes('overdueInvoiceNumber')) {\n        const invoiceDebit: InvoiceDebit = selectedDebit as InvoiceDebit;\n\n        let monthReference;\n        let yearReference;\n\n        if (operatingCompany === '98' || operatingCompany === '95') {\n          yearReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(1, 4),\n          );\n\n          monthReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(5, 2),\n          );\n        } else {\n          yearReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(8, 4),\n          );\n\n          monthReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(12, 2),\n          );\n        }\n\n        const referenceDate = new Date(yearReference, monthReference - 1);\n\n        return format(referenceDate, 'MM/yyyy');\n      }\n\n      return 'Parcelamento';\n    }\n\n    return null;\n  }, [selectedDebit, operatingCompany]);\n\n  const handleSubmit = useCallback(\n    async (data: SendDebitFormData) => {\n      try {\n        start('Enviando fatura ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          phone: Yup.string().required('Telefone obrigatório'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (selectedDebit) {\n          if (Object.keys(selectedDebit).includes('overdueInvoiceNumber')) {\n            const invoiceUrl = await getInvoiceUrl({\n              invoiceReference: selectedDebit.invoiceReference,\n              operatingCompany,\n            });\n\n            if (invoiceUrl && selectedDebitReference) {\n              await sendInvoiceDebit({\n                invoiceUrl,\n                operatingCompany,\n                reference: selectedDebitReference,\n                phoneNumber: getUnformattedPhone(data.phone),\n              });\n\n              Swal.fire({\n                icon: 'success',\n                title: 'Fatura enviada',\n                html: '<p>Fatura foi enviada com sucesso.</p>',\n                confirmButtonText: `OK`,\n                confirmButtonColor: '#3c1490',\n              });\n            }\n\n            return;\n          }\n\n          if (Object.keys(selectedDebit).includes('billingDocumentNumber')) {\n            await sendInstallmentPayment({\n              operatingCompany,\n              phoneNumber: getUnformattedPhone(data.phone),\n              name: customer.name,\n              amount: selectedDebit.invoiceAmount,\n              barCode: selectedDebit.paymentCode,\n              contract: customer.contractAccount,\n            });\n\n            Swal.fire({\n              icon: 'success',\n              title: 'Código enviado',\n              html: '<p>O código para pagamento foi enviado com sucesso.</p>',\n              confirmButtonText: `OK`,\n              confirmButtonColor: '#3c1490',\n            });\n          }\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro no envio',\n          html:\n            '<p>Ocorreu um erro ao enviar a fatura, cheque o número de telefone</p>',\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      } finally {\n        setSelectedDebit(undefined);\n        setIsOpen();\n        stop();\n      }\n    },\n    [\n      selectedDebit,\n      customer,\n      getInvoiceUrl,\n      operatingCompany,\n      start,\n      sendInvoiceDebit,\n      selectedDebitReference,\n      sendInstallmentPayment,\n      stop,\n      setIsOpen,\n    ],\n  );\n\n  const handleClickDebit = useCallback(debit => {\n    setSelectedDebit(debit);\n  }, []);\n\n  useEffect(() => {\n    if (isOpen) {\n      registerServicePerformed({\n        serviceName: 'Consulta de débitos',\n        executionDate: new Date(),\n      });\n    }\n  }, [registerServicePerformed, isOpen]);\n\n  const generateInstallmentRows = useMemo(() => {\n    const installmentRows = debits.installmentDebits.installmentDebitDetails.map(\n      debit => (\n        <tr\n          key={debit.billingDocumentNumber}\n          tabIndex={0}\n          onClick={() => handleClickDebit(debit)}\n        >\n          <td>\n            <span>Parcelamento</span>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td />\n        </tr>\n      ),\n    );\n\n    return installmentRows;\n  }, [debits, handleClickDebit]);\n\n  const generateInvoiceRows = useMemo(() => {\n    const invoiceRows = debits.invoiceDebits.invoiceDebitDetails.map(debit => {\n      let monthReference;\n      let yearReference;\n\n      if (operatingCompany === '98' || operatingCompany === '95') {\n        yearReference = Number(debit.overdueInvoiceNumber.substr(1, 4));\n\n        monthReference = Number(debit.overdueInvoiceNumber.substr(5, 2));\n      } else {\n        yearReference = Number(debit.overdueInvoiceNumber.substr(8, 4));\n\n        monthReference = Number(debit.overdueInvoiceNumber.substr(12, 2));\n      }\n\n      const referenceDate = new Date(yearReference, monthReference - 1);\n\n      return (\n        <tr\n          key={debit.invoiceReference}\n          tabIndex={0}\n          onClick={() => handleClickDebit(debit)}\n        >\n          <td>\n            <span>Referente a</span>\n            <strong>{format(referenceDate, 'MM/yyyy ')}</strong>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td>\n            <span>Vencimento</span>\n            <strong>{format(new Date(debit.dueDate), 'dd/MM/yyyy')}</strong>\n          </td>\n        </tr>\n      );\n    });\n\n    return invoiceRows;\n  }, [debits, handleClickDebit]);\n\n  useEffect(() => {\n    setSelectedDebit(undefined);\n  }, [setIsOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <ModalContent>\n        <h2>Consulta de débitos</h2>\n\n        <div>\n          <table>\n            <tbody>\n              {generateInstallmentRows}\n              {generateInvoiceRows}\n            </tbody>\n          </table>\n        </div>\n\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{\n            phone: customer.contacts.phones?.cellPhone,\n          }}\n        >\n          {selectedDebit ? (\n            <DebitContainer>\n              <p>Débito selecionado</p>\n\n              <strong>{`Referente a: ${selectedDebitReference}`}</strong>\n\n              <strong>\n                {`Valor: ${currencyMask(selectedDebit.invoiceAmount)}`}\n              </strong>\n            </DebitContainer>\n          ) : (\n            <span>Nenhum débito selecionado</span>\n          )}\n\n          <InputMask\n            name=\"phone\"\n            mask=\"(99) 99999-9999\"\n            type=\"text\"\n            placeholder=\"Telefone do cliente\"\n            autoComplete=\"off\"\n          />\n\n          <SendButton type=\"submit\" disabled={!selectedDebit}>\n            Enviar fatura\n          </SendButton>\n        </Form>\n      </ModalContent>\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DebitsConsultationModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],["381","382","383","384","385"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["386"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Swal from 'sweetalert2';\n\nimport { useAuth } from './auth';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\n\nimport {\n  extractResponseData,\n  getInstallationData,\n  getServiceNotes,\n} from '../utils/extractResponseData';\n\nimport ServiceNotes from '../types/ServiceNotes';\nimport eqtlBarApi from '../services/eqtlBarApi';\nimport Address from '../types/Address';\n\ninterface CustomerServiceState {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  protocol?: string;\n  contracts: Contract[];\n}\n\ninterface GetCustomerData {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface StartServiceProps {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface CustomerServiceContextData {\n  operatingCompany: string;\n  protocol: string | undefined;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  contracts: Contract[];\n  serviceStarted: boolean;\n  fetchServiceData(customerData: GetCustomerData): Promise<void>;\n  fetchInstallationData({\n    contractAccount,\n    operatingCompany,\n  }: FetchInstallationDataProps): Promise<void>;\n  startService({\n    stateCode,\n    contractAccount,\n  }: StartServiceProps): Promise<void>;\n  finishService(attendanceTime: string): Promise<void>;\n  registerServicePerformed({\n    serviceName,\n    executionDate,\n  }: ServicePerformed): void;\n  findAllContracts({\n    stateCode,\n    cpf,\n  }: FindAllContractsProps): Promise<Contract[]>;\n}\n\ninterface GenerateProtocolProps {\n  operatingCompany: string;\n  contractAccount: string;\n}\n\ninterface FindAllContractsProps {\n  stateCode: string;\n  cpf: string;\n}\n\ninterface FetchInstallationDataProps {\n  contractAccount: string;\n  operatingCompany: string;\n}\n\ninterface ServicePerformed {\n  serviceName: string;\n  executionDate: Date;\n}\n\ninterface Contract {\n  contractAccount: string;\n  address: Address;\n}\n\nconst CustomerServiceContext = createContext<CustomerServiceContextData>(\n  {} as CustomerServiceContextData,\n);\n\nconst CustomerServiceProvider: React.FC = ({ children }) => {\n  const { user } = useAuth();\n\n  const [serviceStarted, setServiceStarted] = useState(false);\n  const [servicesPerformed, setServicesPerformed] = useState<\n    ServicePerformed[]\n  >([]);\n\n  const [\n    customerServiceData,\n    setCustomerServiceData,\n  ] = useState<CustomerServiceState>(() => {\n    const storagedCustomerServiceData = localStorage.getItem(\n      '@TelaAgil:customerServiceData',\n    );\n\n    const storagedProtocol = localStorage.getItem('@TelaAgil:protocol');\n\n    if (storagedCustomerServiceData) {\n      const {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = JSON.parse(storagedCustomerServiceData);\n\n      const customerServiceState: CustomerServiceState = {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      };\n\n      if (storagedProtocol) {\n        customerServiceState.protocol = storagedProtocol;\n      }\n\n      return customerServiceState;\n    }\n\n    return {} as CustomerServiceState;\n  });\n\n  const findAllContracts = useCallback(\n    async ({ stateCode, cpf }: FindAllContractsProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          cpf,\n          flagDadosCliente: true,\n          empresaOperadora: stateCode,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      const contracts: Contract[] = response.data.data.cliente.map(\n        (contract: any) => ({\n          contractAccount:\n            typeof contract.contaContrato === 'string'\n              ? contract.contaContrato.replace(/^0+/, '')\n              : contract.contaContrato.toString().replace(/^0+/, ''),\n          address: {\n            publicArea: contract.endereco.logradouro,\n            number: contract.endereco.numero,\n            neighborhood: contract.endereco.bairro,\n            city: contract.endereco.cidade,\n            uf: contract.endereco.uf,\n            postalCode: contract.endereco.cep,\n            referencePoint: contract.endereco.pontoReferencia,\n          },\n        }),\n      );\n\n      if (!contracts.length) {\n        throw new Error();\n      } else {\n        setCustomerServiceData({\n          ...customerServiceData,\n          operatingCompany: stateCode,\n          contracts,\n        });\n\n        return contracts;\n      }\n    },\n    [customerServiceData],\n  );\n\n  const fetchServiceData = useCallback(\n    async ({ stateCode, contractAccount }: GetCustomerData) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: formattedContractAccount,\n          empresaOperadora: stateCode,\n          flagDadosCliente: true,\n          flagStatusInstalacao: true,\n          flagPossuiDebitos: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n          flagDetalheDebitoCobranca: true,\n          flagDetalheDebitoFatura: true,\n        },\n      });\n\n      const {\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = extractResponseData(response, stateCode);\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          operatingCompany: stateCode,\n          customer,\n          installation,\n          debits,\n          serviceNotes,\n          contracts: [],\n        }),\n      );\n\n      setCustomerServiceData({\n        operatingCompany: stateCode,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      });\n    },\n    [],\n  );\n\n  const generateProtocol = useCallback(\n    async ({ operatingCompany, contractAccount }: GenerateProtocolProps) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          empresaOperadora: operatingCompany,\n          contrato: formattedContractAccount,\n          flagGerarProtocolo: true,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      localStorage.setItem('@TelaAgil:protocol', response.data.data.protocolo);\n\n      setCustomerServiceData(state => ({\n        ...state,\n        protocol: response.data.data.protocolo,\n      }));\n    },\n    [],\n  );\n\n  const fetchInstallationData = useCallback(\n    async ({\n      contractAccount,\n      operatingCompany,\n    }: FetchInstallationDataProps) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: formattedContractAccount,\n          empresaOperadora: operatingCompany,\n          flagStatusInstalacao: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n        },\n      });\n\n      const responseInstallationData = response.data.data.instalacao;\n\n      const installationData = getInstallationData(\n        responseInstallationData,\n        operatingCompany,\n      );\n\n      const serviceNotesData = getServiceNotes(response);\n\n      setCustomerServiceData({\n        ...customerServiceData,\n        installation: installationData,\n        serviceNotes: serviceNotesData,\n      });\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          ...customerServiceData,\n          installation: installationData,\n          serviceNotes: serviceNotesData,\n        }),\n      );\n    },\n    [customerServiceData],\n  );\n\n  const startService = useCallback(\n    async ({ stateCode, contractAccount }: StartServiceProps) => {\n      try {\n        await fetchServiceData({\n          stateCode,\n          contractAccount,\n        });\n\n        await generateProtocol({\n          contractAccount,\n          operatingCompany: stateCode,\n        });\n\n        setServiceStarted(true);\n      } catch {\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro no atendimento',\n          html:\n            '<p>Ocorreu um erro ao iniciar o atendimento, cheque as informações do cliente</p>',\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      }\n    },\n    [fetchServiceData, generateProtocol],\n  );\n\n  const saveAttendanceLog = useCallback(\n    async (attendanceTime: string) => {\n      await eqtlBarApi.post('/logs', {\n        user_id: user.id,\n        username: user.name,\n        contractAccount: customerServiceData.customer.contractAccount,\n        attendanceTime,\n        services: servicesPerformed,\n      });\n    },\n    [user, customerServiceData.customer, servicesPerformed],\n  );\n\n  const finishService = useCallback(\n    async (attendanceTime: string) => {\n      await saveAttendanceLog(attendanceTime);\n\n      localStorage.removeItem('@TelaAgil:protocol');\n      localStorage.removeItem('@TelaAgil:contracts');\n      localStorage.removeItem('@TelaAgil:customerServiceData');\n\n      setCustomerServiceData({} as CustomerServiceContextData);\n\n      setServicesPerformed([]);\n\n      setServiceStarted(false);\n    },\n    [saveAttendanceLog],\n  );\n\n  const registerServicePerformed = useCallback(\n    ({ serviceName, executionDate }: ServicePerformed) => {\n      setServicesPerformed(oldServices => [\n        ...oldServices,\n        { serviceName, executionDate },\n      ]);\n    },\n    [],\n  );\n\n  return (\n    <CustomerServiceContext.Provider\n      value={{\n        operatingCompany: customerServiceData.operatingCompany,\n        protocol: customerServiceData.protocol,\n        customer: customerServiceData.customer,\n        installation: customerServiceData.installation,\n        debits: customerServiceData.debits,\n        serviceNotes: customerServiceData.serviceNotes,\n        contracts: customerServiceData.contracts,\n        serviceStarted,\n        fetchServiceData,\n        fetchInstallationData,\n        startService,\n        finishService,\n        registerServicePerformed,\n        findAllContracts,\n      }}\n    >\n      {children}\n    </CustomerServiceContext.Provider>\n  );\n};\n\nfunction useCustomerService(): CustomerServiceContextData {\n  const context = useContext(CustomerServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'useCustomerService must be used within a CustomerServiceProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { CustomerServiceProvider, useCustomerService };\n",["387","388","389","390","391"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx",["392"],"import React from 'react';\nimport { useTable, Column } from 'react-table';\n\nimport {\n  Container,\n  TableContainer,\n  TableHeadContainer,\n  TableColumnsTitleContainer,\n  TableColumnTitle,\n  TableRow,\n  TableBody,\n  TableDataCell,\n} from './styles';\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\ninterface ServiceNotesTableProps {\n  columns: Column<Note>[];\n  data: Note[];\n}\n\nconst ServiceNotesTable: React.FC<ServiceNotesTableProps> = ({\n  columns,\n  data,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <Container>\n      <TableContainer {...getTableProps()}>\n        <TableHeadContainer>\n          {headerGroups.map(headerGroup => (\n            <TableColumnsTitleContainer {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <TableColumnTitle {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </TableColumnTitle>\n              ))}\n            </TableColumnsTitleContainer>\n          ))}\n        </TableHeadContainer>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableDataCell {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableDataCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ServiceNotesTable;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx",["393","394"],"import React, { useCallback } from 'react';\nimport { useLoading } from 'react-use-loading';\n\nimport { Container, RCTable } from './styles';\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useAlert } from '../../../hooks/alert';\n\nimport Loading from '../../Loading';\n\ninterface Contract {\n  contractAccount: string;\n  address: string;\n}\n\ninterface TableProps {\n  data: Contract[];\n  closeModal(): void;\n}\n\nconst ContractsTable: React.FC<TableProps> = ({ data, closeModal }) => {\n  const { customAlert } = useAlert();\n  const [\n    { isLoading, message },\n    { start: startLoading, stop: stopLoading },\n  ] = useLoading();\n  const { startService, operatingCompany } = useCustomerService();\n\n  const columns = [\n    {\n      title: 'Conta contrato',\n      dataIndex: 'contractAccount',\n      key: 'contractAccount',\n    },\n    {\n      title: 'Endereço',\n      dataIndex: 'address',\n      key: 'address',\n    },\n  ];\n\n  const onRowClick = useCallback(\n    async (record, index, event) => {\n      try {\n        startLoading('Iniciando atendimento ...');\n\n        if (record.contractAccount) {\n          await startService({\n            stateCode: operatingCompany,\n            contractAccount: record.contractAccount,\n          });\n        }\n      } catch (err) {\n        customAlert({\n          type: 'error',\n          title: 'Erro no atendimento',\n          description: 'Não foi iniciar o atendimento.',\n          confirmationText: 'OK',\n        });\n      } finally {\n        closeModal();\n        stopLoading();\n      }\n    },\n    [\n      closeModal,\n      customAlert,\n      operatingCompany,\n      startService,\n      startLoading,\n      stopLoading,\n    ],\n  );\n\n  return (\n    <Container>\n      <RCTable\n        columns={columns}\n        data={data}\n        tableLayout=\"auto\"\n        rowKey=\"contractAccount\"\n        onRow={(record, index) => ({\n          onClick: onRowClick.bind(null, record, index),\n        })}\n      />\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stopLoading} />\n      )}\n    </Container>\n  );\n};\n\nexport default ContractsTable;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx",["395","396"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["397","398"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts",[],{"ruleId":"399","severity":1,"message":"400","line":2,"column":16,"nodeType":"401","messageId":"402","endLine":2,"endColumn":20},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":87,"column":3,"nodeType":"401","messageId":"415","endLine":87,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":87,"column":25,"nodeType":"418","messageId":"419","endLine":87,"endColumn":28,"suggestions":"420"},{"ruleId":"416","severity":1,"message":"417","line":152,"column":36,"nodeType":"418","messageId":"419","endLine":152,"endColumn":39,"suggestions":"421"},{"ruleId":"416","severity":1,"message":"417","line":156,"column":13,"nodeType":"418","messageId":"419","endLine":156,"endColumn":16,"suggestions":"422"},{"ruleId":"416","severity":1,"message":"417","line":168,"column":13,"nodeType":"418","messageId":"419","endLine":168,"endColumn":16,"suggestions":"423"},{"ruleId":"416","severity":1,"message":"417","line":204,"column":12,"nodeType":"418","messageId":"419","endLine":204,"endColumn":15,"suggestions":"424"},{"ruleId":"416","severity":1,"message":"417","line":223,"column":12,"nodeType":"418","messageId":"419","endLine":223,"endColumn":15,"suggestions":"425"},{"ruleId":"403","replacedBy":"426"},{"ruleId":"405","replacedBy":"427"},{"ruleId":"407","replacedBy":"428"},{"ruleId":"409","replacedBy":"429"},{"ruleId":"411","replacedBy":"430"},{"ruleId":"399","severity":1,"message":"431","line":18,"column":3,"nodeType":"401","messageId":"402","endLine":18,"endColumn":12},{"ruleId":"403","replacedBy":"432"},{"ruleId":"405","replacedBy":"433"},{"ruleId":"407","replacedBy":"434"},{"ruleId":"409","replacedBy":"435"},{"ruleId":"411","replacedBy":"436"},{"ruleId":"399","severity":1,"message":"437","line":8,"column":40,"nodeType":"401","messageId":"402","endLine":8,"endColumn":50},{"ruleId":"399","severity":1,"message":"438","line":8,"column":52,"nodeType":"401","messageId":"402","endLine":8,"endColumn":61},{"ruleId":"416","severity":1,"message":"417","line":7,"column":13,"nodeType":"418","messageId":"419","endLine":7,"endColumn":16,"suggestions":"439"},{"ruleId":"403","replacedBy":"440"},{"ruleId":"405","replacedBy":"441"},{"ruleId":"407","replacedBy":"442"},{"ruleId":"409","replacedBy":"443"},{"ruleId":"411","replacedBy":"444"},{"ruleId":"445","severity":1,"message":"446","line":268,"column":6,"nodeType":"447","endLine":268,"endColumn":32,"suggestions":"448"},{"ruleId":"403","replacedBy":"449"},{"ruleId":"405","replacedBy":"450"},{"ruleId":"407","replacedBy":"451"},{"ruleId":"409","replacedBy":"452"},{"ruleId":"411","replacedBy":"453"},{"ruleId":"416","severity":1,"message":"417","line":157,"column":20,"nodeType":"418","messageId":"419","endLine":157,"endColumn":23,"suggestions":"454"},{"ruleId":"403","replacedBy":"455"},{"ruleId":"405","replacedBy":"456"},{"ruleId":"407","replacedBy":"457"},{"ruleId":"409","replacedBy":"458"},{"ruleId":"411","replacedBy":"459"},{"ruleId":"399","severity":1,"message":"460","line":55,"column":27,"nodeType":"401","messageId":"402","endLine":55,"endColumn":28},{"ruleId":"399","severity":1,"message":"461","line":42,"column":20,"nodeType":"401","messageId":"402","endLine":42,"endColumn":25},{"ruleId":"399","severity":1,"message":"462","line":42,"column":27,"nodeType":"401","messageId":"402","endLine":42,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":37,"column":21,"nodeType":"418","messageId":"419","endLine":37,"endColumn":24,"suggestions":"463"},{"ruleId":"416","severity":1,"message":"417","line":40,"column":23,"nodeType":"418","messageId":"419","endLine":40,"endColumn":26,"suggestions":"464"},{"ruleId":"416","severity":1,"message":"417","line":36,"column":21,"nodeType":"418","messageId":"419","endLine":36,"endColumn":24,"suggestions":"465"},{"ruleId":"416","severity":1,"message":"417","line":39,"column":23,"nodeType":"418","messageId":"419","endLine":39,"endColumn":26,"suggestions":"466"},"@typescript-eslint/no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","lines-around-directive",["467"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Argument 'responseInstallation' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["468","469"],["470","471"],["472","473"],["474","475"],["476","477"],["478","479"],["467"],[],[],[],[],"'setIsOpen' is defined but never used.",["467"],[],[],[],[],"'OwnerLabel' is defined but never used.","'OwnerName' is defined but never used.",["480","481"],["467"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'operatingCompany'. Either include it or remove the dependency array.","ArrayExpression",["482"],["467"],[],[],[],[],["483","484"],["467"],[],[],[],[],"'i' is defined but never used.","'index' is defined but never used.","'event' is defined but never used.",["485","486"],["487","488"],["489","490"],["491","492"],"padding-line-between-statements",{"messageId":"493","fix":"494","desc":"495"},{"messageId":"496","fix":"497","desc":"498"},{"messageId":"493","fix":"499","desc":"495"},{"messageId":"496","fix":"500","desc":"498"},{"messageId":"493","fix":"501","desc":"495"},{"messageId":"496","fix":"502","desc":"498"},{"messageId":"493","fix":"503","desc":"495"},{"messageId":"496","fix":"504","desc":"498"},{"messageId":"493","fix":"505","desc":"495"},{"messageId":"496","fix":"506","desc":"498"},{"messageId":"493","fix":"507","desc":"495"},{"messageId":"496","fix":"508","desc":"498"},{"messageId":"493","fix":"509","desc":"495"},{"messageId":"496","fix":"510","desc":"498"},{"desc":"511","fix":"512"},{"messageId":"493","fix":"513","desc":"495"},{"messageId":"496","fix":"514","desc":"498"},{"messageId":"493","fix":"515","desc":"495"},{"messageId":"496","fix":"516","desc":"498"},{"messageId":"493","fix":"517","desc":"495"},{"messageId":"496","fix":"518","desc":"498"},{"messageId":"493","fix":"519","desc":"495"},{"messageId":"496","fix":"520","desc":"498"},{"messageId":"493","fix":"521","desc":"495"},{"messageId":"496","fix":"522","desc":"498"},"suggestUnknown",{"range":"523","text":"524"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"523","text":"525"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"526","text":"524"},{"range":"526","text":"525"},{"range":"527","text":"524"},{"range":"527","text":"525"},{"range":"528","text":"524"},{"range":"528","text":"525"},{"range":"529","text":"524"},{"range":"529","text":"525"},{"range":"530","text":"524"},{"range":"530","text":"525"},{"range":"531","text":"524"},{"range":"531","text":"525"},"Update the dependencies array to be: [debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",{"range":"532","text":"533"},{"range":"534","text":"524"},{"range":"534","text":"525"},{"range":"535","text":"524"},{"range":"535","text":"525"},{"range":"536","text":"524"},{"range":"536","text":"525"},{"range":"537","text":"524"},{"range":"537","text":"525"},{"range":"538","text":"524"},{"range":"538","text":"525"},[2760,2763],"unknown","never",[4379,4382],[4571,4574],[4980,4983],[6014,6017],[6639,6642],[147,150],[7542,7568],"[debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",[3796,3799],[975,978],[1062,1065],[963,966],[1050,1053]]