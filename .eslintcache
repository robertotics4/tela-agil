[{"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx":"1","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerOutageService.tsx":"2","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts":"3","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts":"4","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getValidationErrors.ts":"5","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\styles.ts":"6","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\styles.ts":"7","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts":"8","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\index.tsx":"9","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\styles.ts":"10","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx":"11","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts":"12","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts":"13","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\styles.tsx":"14","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\index.tsx":"15","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts":"16","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx":"17","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\hasSocialTariff.ts":"18"},{"size":1483,"mtime":1617885892305,"results":"19","hashOfConfig":"20"},{"size":9271,"mtime":1617885892300,"results":"21","hashOfConfig":"20"},{"size":7681,"mtime":1617895473444,"results":"22","hashOfConfig":"20"},{"size":2199,"mtime":1617892003198,"results":"23","hashOfConfig":"20"},{"size":357,"mtime":1617885892325,"results":"24","hashOfConfig":"20"},{"size":1363,"mtime":1617885892240,"results":"25","hashOfConfig":"20"},{"size":162,"mtime":1617885892295,"results":"26","hashOfConfig":"20"},{"size":2177,"mtime":1617885892254,"results":"27","hashOfConfig":"20"},{"size":1671,"mtime":1617885892276,"results":"28","hashOfConfig":"20"},{"size":186,"mtime":1617885892245,"results":"29","hashOfConfig":"20"},{"size":3318,"mtime":1617885892264,"results":"30","hashOfConfig":"20"},{"size":1239,"mtime":1617885892248,"results":"31","hashOfConfig":"20"},{"size":275,"mtime":1617885892292,"results":"32","hashOfConfig":"20"},{"size":751,"mtime":1617885892281,"results":"33","hashOfConfig":"20"},{"size":1803,"mtime":1617885892288,"results":"34","hashOfConfig":"20"},{"size":1138,"mtime":1617885892252,"results":"35","hashOfConfig":"20"},{"size":1656,"mtime":1617894261616,"results":"36","hashOfConfig":"20"},{"size":463,"mtime":1617895759275,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tpyhyp",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerOutageService.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts",["75","76","77","78","79","80"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount: responseCustomer.contaContrato,\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    customer.contractAccount = responseCustomer.contaContrato.toString();\n\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: Number(debitosFatura.valorTotalDebitoFatura),\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits: Number(\n        debitosParcelamento.valorTotalDebitoParcelamento,\n      ),\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport default extractResponseData;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getValidationErrors.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\index.tsx",["81","82"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\styles.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\index.tsx",["83"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\hasSocialTariff.ts",[],{"ruleId":"84","severity":1,"message":"85","line":86,"column":25,"nodeType":"86","messageId":"87","endLine":86,"endColumn":28,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"85","line":151,"column":36,"nodeType":"86","messageId":"87","endLine":151,"endColumn":39,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"85","line":155,"column":13,"nodeType":"86","messageId":"87","endLine":155,"endColumn":16,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"85","line":167,"column":13,"nodeType":"86","messageId":"87","endLine":167,"endColumn":16,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"85","line":203,"column":12,"nodeType":"86","messageId":"87","endLine":203,"endColumn":15,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"85","line":222,"column":12,"nodeType":"86","messageId":"87","endLine":222,"endColumn":15,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"85","line":37,"column":21,"nodeType":"86","messageId":"87","endLine":37,"endColumn":24,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"85","line":40,"column":23,"nodeType":"86","messageId":"87","endLine":40,"endColumn":26,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":55,"column":27,"nodeType":"98","messageId":"99","endLine":55,"endColumn":28},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["100","101"],["102","103"],["104","105"],["106","107"],["108","109"],["110","111"],["112","113"],["114","115"],"@typescript-eslint/no-unused-vars","'i' is defined but never used.","Identifier","unusedVar",{"messageId":"116","fix":"117","desc":"118"},{"messageId":"119","fix":"120","desc":"121"},{"messageId":"116","fix":"122","desc":"118"},{"messageId":"119","fix":"123","desc":"121"},{"messageId":"116","fix":"124","desc":"118"},{"messageId":"119","fix":"125","desc":"121"},{"messageId":"116","fix":"126","desc":"118"},{"messageId":"119","fix":"127","desc":"121"},{"messageId":"116","fix":"128","desc":"118"},{"messageId":"119","fix":"129","desc":"121"},{"messageId":"116","fix":"130","desc":"118"},{"messageId":"119","fix":"131","desc":"121"},{"messageId":"116","fix":"132","desc":"118"},{"messageId":"119","fix":"133","desc":"121"},{"messageId":"116","fix":"134","desc":"118"},{"messageId":"119","fix":"135","desc":"121"},"suggestUnknown",{"range":"136","text":"137"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"136","text":"138"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"139","text":"137"},{"range":"139","text":"138"},{"range":"140","text":"137"},{"range":"140","text":"138"},{"range":"141","text":"137"},{"range":"141","text":"138"},{"range":"142","text":"137"},{"range":"142","text":"138"},{"range":"143","text":"137"},{"range":"143","text":"138"},{"range":"144","text":"137"},{"range":"144","text":"138"},{"range":"145","text":"137"},{"range":"145","text":"138"},[2678,2681],"unknown","never",[4297,4300],[4489,4492],[4898,4901],[5932,5935],[6557,6560],[975,978],[1062,1065]]