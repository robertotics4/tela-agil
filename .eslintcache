[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputRegex/masks.ts":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/changeDueDateService.tsx":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/addZeroesToContract.ts":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputRegex/index.tsx":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"71"},{"size":495,"mtime":1620217969847,"results":"72","hashOfConfig":"73"},{"size":569,"mtime":1620217969847,"results":"74","hashOfConfig":"73"},{"size":2213,"mtime":1620217969843,"results":"75","hashOfConfig":"73"},{"size":7303,"mtime":1620217969847,"results":"76","hashOfConfig":"73"},{"size":24519,"mtime":1620217969847,"results":"77","hashOfConfig":"73"},{"size":643,"mtime":1620217969847,"results":"78","hashOfConfig":"73"},{"size":801,"mtime":1620217969847,"results":"79","hashOfConfig":"73"},{"size":1132,"mtime":1620217969843,"results":"80","hashOfConfig":"73"},{"size":248,"mtime":1620217969843,"results":"81","hashOfConfig":"73"},{"size":1620,"mtime":1620217969843,"results":"82","hashOfConfig":"73"},{"size":313,"mtime":1620217969843,"results":"83","hashOfConfig":"73"},{"size":142,"mtime":1621538646644,"results":"84","hashOfConfig":"73"},{"size":1362,"mtime":1620217969843,"results":"85","hashOfConfig":"73"},{"size":440,"mtime":1621538646640,"results":"86","hashOfConfig":"73"},{"size":388,"mtime":1620217969843,"results":"87","hashOfConfig":"73"},{"size":1357,"mtime":1621542901655,"results":"88","hashOfConfig":"73"},{"size":1021,"mtime":1620217969843,"results":"89","hashOfConfig":"73"},{"size":197,"mtime":1620217969843,"results":"90","hashOfConfig":"73"},{"size":3360,"mtime":1621539340373,"results":"91","hashOfConfig":"73"},{"size":783,"mtime":1620217969843,"results":"92","hashOfConfig":"73"},{"size":941,"mtime":1620217969843,"results":"93","hashOfConfig":"73"},{"size":611,"mtime":1621538646640,"results":"94","hashOfConfig":"73"},{"size":750,"mtime":1620217969843,"results":"95","hashOfConfig":"73"},{"size":1318,"mtime":1620217969843,"results":"96","hashOfConfig":"73"},{"size":1248,"mtime":1620217969843,"results":"97","hashOfConfig":"73"},{"size":4007,"mtime":1620217969843,"results":"98","hashOfConfig":"73"},{"size":3708,"mtime":1620217969843,"results":"99","hashOfConfig":"73"},{"size":3036,"mtime":1620217969843,"results":"100","hashOfConfig":"73"},{"size":3474,"mtime":1620217969843,"results":"101","hashOfConfig":"73"},{"size":1675,"mtime":1621538646640,"results":"102","hashOfConfig":"73"},{"size":369,"mtime":1620217969843,"results":"103","hashOfConfig":"73"},{"size":1217,"mtime":1620217969843,"results":"104","hashOfConfig":"73"},{"size":664,"mtime":1621538646644,"results":"105","hashOfConfig":"73"},{"size":9257,"mtime":1621538646640,"results":"106","hashOfConfig":"73"},{"size":395,"mtime":1621538646648,"results":"107","hashOfConfig":"73"},{"size":1546,"mtime":1620217969847,"results":"108","hashOfConfig":"73"},{"size":4085,"mtime":1620217969843,"results":"109","hashOfConfig":"73"},{"size":1333,"mtime":1621538646644,"results":"110","hashOfConfig":"73"},{"size":313,"mtime":1620217969847,"results":"111","hashOfConfig":"73"},{"size":187,"mtime":1620217969847,"results":"112","hashOfConfig":"73"},{"size":378,"mtime":1620217969847,"results":"113","hashOfConfig":"73"},{"size":3179,"mtime":1620217969847,"results":"114","hashOfConfig":"73"},{"size":819,"mtime":1621538646644,"results":"115","hashOfConfig":"73"},{"size":7796,"mtime":1620217969843,"results":"116","hashOfConfig":"73"},{"size":2123,"mtime":1620217969843,"results":"117","hashOfConfig":"73"},{"size":386,"mtime":1620217969843,"results":"118","hashOfConfig":"73"},{"size":2226,"mtime":1621538646640,"results":"119","hashOfConfig":"73"},{"size":5915,"mtime":1620217969843,"results":"120","hashOfConfig":"73"},{"size":274,"mtime":1620217969847,"results":"121","hashOfConfig":"73"},{"size":2634,"mtime":1620217969843,"results":"122","hashOfConfig":"73"},{"size":799,"mtime":1620217969843,"results":"123","hashOfConfig":"73"},{"size":1273,"mtime":1620217969843,"results":"124","hashOfConfig":"73"},{"size":372,"mtime":1621538646636,"results":"125","hashOfConfig":"73"},{"size":10690,"mtime":1621541310925,"results":"126","hashOfConfig":"73"},{"size":1546,"mtime":1621538646644,"results":"127","hashOfConfig":"73"},{"size":287,"mtime":1621538646648,"results":"128","hashOfConfig":"73"},{"size":8063,"mtime":1621538646648,"results":"129","hashOfConfig":"73"},{"size":374,"mtime":1621538646648,"results":"130","hashOfConfig":"73"},{"size":171,"mtime":1621538646644,"results":"131","hashOfConfig":"73"},{"size":329,"mtime":1621538646640,"results":"132","hashOfConfig":"73"},{"size":1243,"mtime":1621538646644,"results":"133","hashOfConfig":"73"},{"size":1834,"mtime":1621538646640,"results":"134","hashOfConfig":"73"},{"size":461,"mtime":1621538646640,"results":"135","hashOfConfig":"73"},{"size":444,"mtime":1621538646640,"results":"136","hashOfConfig":"73"},{"size":1422,"mtime":1621538646640,"results":"137","hashOfConfig":"73"},{"size":860,"mtime":1621538646640,"results":"138","hashOfConfig":"73"},{"size":9544,"mtime":1621538646644,"results":"139","hashOfConfig":"73"},{"size":1294,"mtime":1621538646644,"results":"140","hashOfConfig":"73"},{"size":903,"mtime":1621538646644,"results":"141","hashOfConfig":"73"},{"size":2240,"mtime":1621543107341,"results":"142","hashOfConfig":"73"},{"size":434,"mtime":1621538646640,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t2qx1c",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx",["289"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",[],["290","291","292","293","294"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["295"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputRegex/masks.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["296"],"import React, { useState, useEffect } from 'react';\r\nimport Rodal from 'rodal';\r\n\r\nimport 'rodal/lib/rodal.css';\r\n\r\ninterface IModalProps {\r\n  children: any;\r\n  isOpen: boolean;\r\n  customStyles?: object;\r\n  setIsOpen: () => void;\r\n}\r\n\r\nconst Modal: React.FC<IModalProps> = ({\r\n  children,\r\n  isOpen,\r\n  setIsOpen,\r\n  customStyles,\r\n}) => {\r\n  const [modalStatus, setModalStatus] = useState(isOpen);\r\n\r\n  useEffect(() => {\r\n    setModalStatus(isOpen);\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Rodal\r\n      visible={modalStatus}\r\n      showCloseButton\r\n      closeOnEsc\r\n      onClose={setIsOpen}\r\n      customStyles={\r\n        customStyles || {\r\n          borderRadius: '8px',\r\n          padding: '48px 64px',\r\n          width: '736px',\r\n          height: 'fit-content',\r\n        }\r\n      }\r\n      customMaskStyles={{\r\n        background: 'rgba(0, 0, 0, 0.6)',\r\n      }}\r\n    >\r\n      {children}\r\n    </Rodal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx",["297"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["298","299"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx",["300"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/changeDueDateService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/addZeroesToContract.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",["301","302"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputRegex/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx",["303","304"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["305"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport Swal from 'sweetalert2';\n\nimport { useAuth } from './auth';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\n\nimport {\n  extractResponseData,\n  getInstallationData,\n  getServiceNotes,\n} from '../utils/extractResponseData';\n\nimport ServiceNotes from '../types/ServiceNotes';\nimport eqtlBarApi from '../services/eqtlBarApi';\nimport Address from '../types/Address';\n\ninterface CustomerServiceState {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  protocol?: string;\n  contracts: Contract[];\n}\n\ninterface GetCustomerData {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface StartServiceProps {\n  stateCode: string;\n  contractAccount: string;\n}\n\ninterface CustomerServiceContextData {\n  operatingCompany: string;\n  protocol: string | undefined;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n  contracts: Contract[];\n  serviceStarted: boolean;\n  fetchServiceData(customerData: GetCustomerData): Promise<void>;\n  fetchInstallationData({\n    contractAccount,\n    operatingCompany,\n  }: FetchInstallationDataProps): Promise<void>;\n  startService({\n    stateCode,\n    contractAccount,\n  }: StartServiceProps): Promise<void>;\n  finishService(attendanceTime: string): Promise<void>;\n  registerServicePerformed({\n    serviceName,\n    executionDate,\n  }: ServicePerformed): void;\n  findAllContracts({\n    stateCode,\n    cpf,\n  }: FindAllContractsProps): Promise<Contract[]>;\n  generateProtocol({\n    operatingCompany,\n    contractAccount,\n  }: GenerateProtocolProps): Promise<void>;\n}\n\ninterface GenerateProtocolProps {\n  operatingCompany: string;\n  contractAccount: string;\n}\n\ninterface FindAllContractsProps {\n  stateCode: string;\n  cpf: string;\n}\n\ninterface FetchInstallationDataProps {\n  contractAccount: string;\n  operatingCompany: string;\n}\n\ninterface ServicePerformed {\n  serviceName: string;\n  executionDate: Date;\n}\n\ninterface Contract {\n  contractAccount: string;\n  address: Address;\n}\n\nconst CustomerServiceContext = createContext<CustomerServiceContextData>(\n  {} as CustomerServiceContextData,\n);\n\nconst CustomerServiceProvider: React.FC = ({ children }) => {\n  const { user } = useAuth();\n\n  const [serviceStarted, setServiceStarted] = useState(false);\n  const [servicesPerformed, setServicesPerformed] = useState<\n    ServicePerformed[]\n  >([]);\n\n  const [\n    customerServiceData,\n    setCustomerServiceData,\n  ] = useState<CustomerServiceState>(() => {\n    const storagedCustomerServiceData = localStorage.getItem(\n      '@TelaAgil:customerServiceData',\n    );\n\n    const storagedProtocol = localStorage.getItem('@TelaAgil:protocol');\n\n    if (storagedCustomerServiceData) {\n      const {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = JSON.parse(storagedCustomerServiceData);\n\n      const customerServiceState: CustomerServiceState = {\n        operatingCompany,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      };\n\n      if (storagedProtocol) {\n        customerServiceState.protocol = storagedProtocol;\n      }\n\n      return customerServiceState;\n    }\n\n    return {} as CustomerServiceState;\n  });\n\n  const findAllContracts = useCallback(\n    async ({ stateCode, cpf }: FindAllContractsProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          cpf,\n          flagDadosCliente: true,\n          empresaOperadora: stateCode,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      const contracts: Contract[] = response.data.data.cliente.map(\n        (contract: any) => ({\n          contractAccount:\n            typeof contract.contaContrato === 'string'\n              ? contract.contaContrato.replace(/^0+/, '')\n              : contract.contaContrato.toString().replace(/^0+/, ''),\n          address: {\n            publicArea: contract.endereco.logradouro,\n            number: contract.endereco.numero,\n            neighborhood: contract.endereco.bairro,\n            city: contract.endereco.cidade,\n            uf: contract.endereco.uf,\n            postalCode: contract.endereco.cep,\n            referencePoint: contract.endereco.pontoReferencia,\n          },\n        }),\n      );\n\n      if (!contracts.length) {\n        throw new Error();\n      } else {\n        setCustomerServiceData({\n          ...customerServiceData,\n          operatingCompany: stateCode,\n          contracts,\n        });\n\n        return contracts;\n      }\n    },\n    [customerServiceData],\n  );\n\n  const fetchServiceData = useCallback(\n    async ({ stateCode, contractAccount }: GetCustomerData) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: contractAccount,\n          empresaOperadora: stateCode,\n          flagDadosCliente: true,\n          flagStatusInstalacao: true,\n          flagPossuiDebitos: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n          flagDetalheDebitoCobranca: true,\n          flagDetalheDebitoFatura: true,\n        },\n      });\n\n      const {\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n      } = extractResponseData(response, stateCode);\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          operatingCompany: stateCode,\n          customer,\n          installation,\n          debits,\n          serviceNotes,\n          contracts: [],\n        }),\n      );\n\n      setCustomerServiceData({\n        operatingCompany: stateCode,\n        customer,\n        installation,\n        debits,\n        serviceNotes,\n        contracts: [],\n      });\n    },\n    [],\n  );\n\n  const generateProtocol = useCallback(\n    async ({ operatingCompany, contractAccount }: GenerateProtocolProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          empresaOperadora: operatingCompany,\n          contrato: contractAccount,\n          flagGerarProtocolo: true,\n          codigoTransacao: uuid(),\n        },\n      });\n\n      localStorage.setItem('@TelaAgil:protocol', response.data.data.protocolo);\n\n      setCustomerServiceData(state => ({\n        ...state,\n        protocol: response.data.data.protocolo,\n      }));\n    },\n    [],\n  );\n\n  const fetchInstallationData = useCallback(\n    async ({\n      contractAccount,\n      operatingCompany,\n    }: FetchInstallationDataProps) => {\n      const response = await eqtlBarApi.get('/atendimento/v1/clientes', {\n        params: {\n          codigoTransacao: uuid(),\n          contrato: contractAccount,\n          empresaOperadora: operatingCompany,\n          flagStatusInstalacao: true,\n          flagDadosTecnicos: true,\n          flagNotasAbertas: true,\n          flagNotasEncerradas: true,\n        },\n      });\n\n      const responseInstallationData = response.data.data.instalacao;\n\n      const installationData = getInstallationData(\n        responseInstallationData,\n        operatingCompany,\n      );\n\n      const serviceNotesData = getServiceNotes(response);\n\n      setCustomerServiceData({\n        ...customerServiceData,\n        installation: installationData,\n        serviceNotes: serviceNotesData,\n      });\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          ...customerServiceData,\n          installation: installationData,\n          serviceNotes: serviceNotesData,\n        }),\n      );\n    },\n    [customerServiceData],\n  );\n\n  const startService = useCallback(\n    async ({ stateCode, contractAccount }: StartServiceProps) => {\n      const formattedContractAccount = contractAccount.replace(/^0+/, '');\n\n      try {\n        await fetchServiceData({\n          stateCode,\n          contractAccount: formattedContractAccount,\n        });\n\n        setServiceStarted(true);\n      } catch {\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro no atendimento',\n          html:\n            '<p>Ocorreu um erro ao iniciar o atendimento, cheque as informações do cliente</p>',\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      }\n    },\n    [fetchServiceData],\n  );\n\n  const saveAttendanceLog = useCallback(\n    async (attendanceTime: string) => {\n      await eqtlBarApi.post('/logs', {\n        user_id: user.id,\n        username: user.name,\n        contractAccount: customerServiceData.customer.contractAccount,\n        attendanceTime,\n        services: servicesPerformed,\n      });\n    },\n    [user, customerServiceData.customer, servicesPerformed],\n  );\n\n  const finishService = useCallback(\n    async (attendanceTime: string) => {\n      await saveAttendanceLog(attendanceTime);\n\n      localStorage.removeItem('@TelaAgil:protocol');\n      localStorage.removeItem('@TelaAgil:contracts');\n      localStorage.removeItem('@TelaAgil:customerServiceData');\n\n      setCustomerServiceData({} as CustomerServiceContextData);\n\n      setServicesPerformed([]);\n\n      setServiceStarted(false);\n    },\n    [saveAttendanceLog],\n  );\n\n  const registerServicePerformed = useCallback(\n    ({ serviceName, executionDate }: ServicePerformed) => {\n      setServicesPerformed(oldServices => [\n        ...oldServices,\n        { serviceName, executionDate },\n      ]);\n    },\n    [],\n  );\n\n  return (\n    <CustomerServiceContext.Provider\n      value={{\n        operatingCompany: customerServiceData.operatingCompany,\n        protocol: customerServiceData.protocol,\n        customer: customerServiceData.customer,\n        installation: customerServiceData.installation,\n        debits: customerServiceData.debits,\n        serviceNotes: customerServiceData.serviceNotes,\n        contracts: customerServiceData.contracts,\n        serviceStarted,\n        fetchServiceData,\n        fetchInstallationData,\n        startService,\n        finishService,\n        registerServicePerformed,\n        findAllContracts,\n        generateProtocol,\n      }}\n    >\n      {children}\n    </CustomerServiceContext.Provider>\n  );\n};\n\nfunction useCustomerService(): CustomerServiceContextData {\n  const context = useContext(CustomerServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'useCustomerService must be used within a CustomerServiceProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { CustomerServiceProvider, useCustomerService };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["306","307","308","309","310","311","312"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",["313"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],{"ruleId":"314","severity":1,"message":"315","line":2,"column":16,"nodeType":"316","messageId":"317","endLine":2,"endColumn":20},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"314","severity":1,"message":"328","line":18,"column":3,"nodeType":"316","messageId":"317","endLine":18,"endColumn":12},{"ruleId":"329","severity":1,"message":"330","line":7,"column":13,"nodeType":"331","messageId":"332","endLine":7,"endColumn":16,"suggestions":"333"},{"ruleId":"314","severity":1,"message":"334","line":16,"column":21,"nodeType":"316","messageId":"317","endLine":16,"endColumn":33},{"ruleId":"329","severity":1,"message":"330","line":36,"column":21,"nodeType":"331","messageId":"332","endLine":36,"endColumn":24,"suggestions":"335"},{"ruleId":"329","severity":1,"message":"330","line":39,"column":23,"nodeType":"331","messageId":"332","endLine":39,"endColumn":26,"suggestions":"336"},{"ruleId":"314","severity":1,"message":"337","line":4,"column":18,"nodeType":"316","messageId":"317","endLine":4,"endColumn":30},{"ruleId":"314","severity":1,"message":"338","line":32,"column":8,"nodeType":"316","messageId":"317","endLine":32,"endColumn":20},{"ruleId":"314","severity":1,"message":"339","line":34,"column":8,"nodeType":"316","messageId":"317","endLine":34,"endColumn":24},{"ruleId":"314","severity":1,"message":"340","line":43,"column":20,"nodeType":"316","messageId":"317","endLine":43,"endColumn":25},{"ruleId":"314","severity":1,"message":"341","line":43,"column":27,"nodeType":"316","messageId":"317","endLine":43,"endColumn":32},{"ruleId":"329","severity":1,"message":"330","line":161,"column":20,"nodeType":"331","messageId":"332","endLine":161,"endColumn":23,"suggestions":"342"},{"ruleId":"343","severity":1,"message":"344","line":87,"column":3,"nodeType":"316","messageId":"345","endLine":87,"endColumn":28},{"ruleId":"329","severity":1,"message":"330","line":87,"column":25,"nodeType":"331","messageId":"332","endLine":87,"endColumn":28,"suggestions":"346"},{"ruleId":"329","severity":1,"message":"330","line":152,"column":36,"nodeType":"331","messageId":"332","endLine":152,"endColumn":39,"suggestions":"347"},{"ruleId":"329","severity":1,"message":"330","line":156,"column":13,"nodeType":"331","messageId":"332","endLine":156,"endColumn":16,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"330","line":168,"column":13,"nodeType":"331","messageId":"332","endLine":168,"endColumn":16,"suggestions":"349"},{"ruleId":"329","severity":1,"message":"330","line":204,"column":12,"nodeType":"331","messageId":"332","endLine":204,"endColumn":15,"suggestions":"350"},{"ruleId":"329","severity":1,"message":"330","line":223,"column":12,"nodeType":"331","messageId":"332","endLine":223,"endColumn":15,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":272,"column":6,"nodeType":"354","endLine":272,"endColumn":32,"suggestions":"355"},"@typescript-eslint/no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","lines-around-directive",["356"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'setIsOpen' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["357","358"],"'setQuestions' is assigned a value but never used.",["359","360"],["361","362"],"'FaDollarSign' is defined but never used.","'OutlineInput' is defined but never used.","'OutlineInputMask' is defined but never used.","'index' is defined but never used.","'event' is defined but never used.",["363","364"],"@typescript-eslint/explicit-module-boundary-types","Argument 'responseInstallation' should be typed with a non-any type.","anyTypedArg",["365","366"],["367","368"],["369","370"],["371","372"],["373","374"],["375","376"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'operatingCompany'. Either include it or remove the dependency array.","ArrayExpression",["377"],"padding-line-between-statements",{"messageId":"378","fix":"379","desc":"380"},{"messageId":"381","fix":"382","desc":"383"},{"messageId":"378","fix":"384","desc":"380"},{"messageId":"381","fix":"385","desc":"383"},{"messageId":"378","fix":"386","desc":"380"},{"messageId":"381","fix":"387","desc":"383"},{"messageId":"378","fix":"388","desc":"380"},{"messageId":"381","fix":"389","desc":"383"},{"messageId":"378","fix":"390","desc":"380"},{"messageId":"381","fix":"391","desc":"383"},{"messageId":"378","fix":"392","desc":"380"},{"messageId":"381","fix":"393","desc":"383"},{"messageId":"378","fix":"394","desc":"380"},{"messageId":"381","fix":"395","desc":"383"},{"messageId":"378","fix":"396","desc":"380"},{"messageId":"381","fix":"397","desc":"383"},{"messageId":"378","fix":"398","desc":"380"},{"messageId":"381","fix":"399","desc":"383"},{"messageId":"378","fix":"400","desc":"380"},{"messageId":"381","fix":"401","desc":"383"},{"desc":"402","fix":"403"},"suggestUnknown",{"range":"404","text":"405"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"404","text":"406"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"407","text":"405"},{"range":"407","text":"406"},{"range":"408","text":"405"},{"range":"408","text":"406"},{"range":"409","text":"405"},{"range":"409","text":"406"},{"range":"410","text":"405"},{"range":"410","text":"406"},{"range":"411","text":"405"},{"range":"411","text":"406"},{"range":"412","text":"405"},{"range":"412","text":"406"},{"range":"413","text":"405"},{"range":"413","text":"406"},{"range":"414","text":"405"},{"range":"414","text":"406"},{"range":"415","text":"405"},{"range":"415","text":"406"},"Update the dependencies array to be: [debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",{"range":"416","text":"417"},[153,156],"unknown","never",[998,1001],[1088,1091],[3904,3907],[2846,2849],[4530,4533],[4726,4729],[5147,5150],[6217,6220],[6861,6864],[7971,7997],"[debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]"]