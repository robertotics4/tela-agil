[{"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx":"1","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\index.tsx":"2","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx":"3","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\styles.ts":"4","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx":"5","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\AlertsContainer\\Alert\\styles.ts":"6","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\index.tsx":"7","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\customerService.tsx":"8","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx":"9","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\styles.ts":"10","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx":"11","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\index.tsx":"12","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx":"13","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts":"14"},{"size":1483,"mtime":1612958756325,"results":"15","hashOfConfig":"16"},{"size":296,"mtime":1612958756318,"results":"17","hashOfConfig":"16"},{"size":639,"mtime":1612958756307,"results":"18","hashOfConfig":"16"},{"size":1170,"mtime":1612958756322,"results":"19","hashOfConfig":"16"},{"size":1734,"mtime":1612958756317,"results":"20","hashOfConfig":"16"},{"size":549,"mtime":1612958756309,"results":"21","hashOfConfig":"16"},{"size":396,"mtime":1612966864880,"results":"22","hashOfConfig":"23"},{"size":2509,"mtime":1612986486431,"results":"24","hashOfConfig":"23"},{"size":2703,"mtime":1612968737238,"results":"25","hashOfConfig":"23"},{"size":1309,"mtime":1612958756320,"results":"26","hashOfConfig":"16"},{"size":1715,"mtime":1612958756301,"results":"27","hashOfConfig":"23"},{"size":1557,"mtime":1612958756319,"results":"28","hashOfConfig":"23"},{"size":2571,"mtime":1612994913499,"results":"29","hashOfConfig":"23"},{"size":1568,"mtime":1612992812171,"results":"30","hashOfConfig":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tiwu52",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o5jrq3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\AlertsContainer\\Alert\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\customerService.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx",["61"],"import React, { useCallback, useRef } from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\n\nimport {\n  Container,\n  UserMenu,\n  Logout,\n  ServiceForm,\n  WhiteButton,\n  Cronometro,\n} from './styles';\n\nimport OutlineInput from '../OutlineInput';\nimport CustomRadioGroup from '../CustomRadioGroup';\nimport RadioOptions from '../CustomRadioGroup/RadioOptions';\n\nimport logoWhiteImg from '../../assets/logo-white.svg';\nimport { useAuth } from '../../hooks/auth';\nimport { useCustomerService } from '../../hooks/customerService';\n\ninterface StartServiceFormData {\n  state: string;\n  contract: string;\n  cpf: string;\n}\n\nconst LeftBar: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const { getCustomer } = useCustomerService();\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: StartServiceFormData) => {\n      try {\n        await getCustomer({\n          stateCode: data.state[0],\n          contract: data.contract,\n          cpf: data.cpf,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [getCustomer],\n  );\n\n  return (\n    <Container>\n      <UserMenu>\n        <img src={logoWhiteImg} alt=\"Equatorial Energia\" />\n\n        <span>\n          Bem vindo,\n          <strong>{user.name}</strong>\n        </span>\n\n        <Logout onClick={signOut}>\n          <FiPower />\n          <span>Sair</span>\n        </Logout>\n      </UserMenu>\n\n      <ServiceForm>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{ state: '82' }}\n        >\n          <CustomRadioGroup fieldLabel=\"Estado\">\n            <RadioOptions\n              name=\"state\"\n              options={[\n                { id: 'radio1', value: '82', label: 'Alagoas' },\n                { id: 'radio2', value: '98', label: 'Maranhão' },\n                { id: 'radio3', value: '95', label: 'Pará' },\n                { id: 'radio4', value: '86', label: 'Piauí' },\n              ]}\n            />\n          </CustomRadioGroup>\n\n          <OutlineInput\n            name=\"contract\"\n            type=\"text\"\n            placeholder=\"Código único ou conta contrato\"\n            autoComplete=\"off\"\n          />\n\n          <OutlineInput\n            name=\"cpf\"\n            type=\"text\"\n            placeholder=\"CPF ou CNPJ\"\n            autoComplete=\"off\"\n          />\n\n          <WhiteButton type=\"submit\">Iniciar atendimento</WhiteButton>\n\n          <Cronometro>\n            <span>Tempo de atendimento:</span>\n            <h1>00:01</h1>\n          </Cronometro>\n        </Form>\n      </ServiceForm>\n    </Container>\n  );\n};\n\nexport default LeftBar;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx",["62"],"import React, { useMemo } from 'react';\nimport { format } from 'date-fns';\nimport { useCustomerService } from '../../../../hooks/customerService';\n\nimport { Container, Content } from './styles';\n\nconst ClientData: React.FC = () => {\n  const { customer } = useCustomerService();\n\n  console.log(customer.contacts);\n\n  const formattedDayOfBirth = useMemo(() => {\n    return format(new Date(customer.dayOfBirth), 'dd/MM/yyyy');\n  }, [customer.dayOfBirth]);\n\n  const formattedAddress = useMemo(() => {\n    const { address } = customer;\n    return `${address.publicArea}, ${address.number} ${address.complement}, ${address.neighborhood}, ${address.city} - ${address.uf}, CEP: ${address.postalCode}. ${address.referencePoint}`;\n  }, [customer]);\n\n  // const formattedPhones = useMemo(() => {\n  //   const formattedPhone = customer.contacts.phones.map((item, index) => {\n\n  //   });\n  // }, [customer.contacts.phones]);\n\n  return (\n    <Container>\n      <h3>Dados do cliente</h3>\n\n      <Content>\n        <div>\n          <label>\n            NOME COMPLETO\n            <p>{customer.name}</p>\n          </label>\n\n          <label>\n            FATURA POR E-MAIL\n            <p>{customer.emailInvoice ? 'Sim' : 'Não'}</p>\n          </label>\n\n          <label>\n            CPF\n            <p>{customer.cpf}</p>\n          </label>\n\n          <label>\n            RG\n            <p>{customer.rg}</p>\n          </label>\n\n          <label>\n            DATA DE NASCIMENTO\n            <p>{formattedDayOfBirth}</p>\n          </label>\n\n          <label>\n            PN\n            <p>{customer.pn}</p>\n          </label>\n\n          <label>\n            ENDEREÇO DO CLIENTE\n            <p>{formattedAddress}</p>\n          </label>\n        </div>\n\n        <div>\n          <label>\n            PERFIL DO CLIENTE\n            <p>{customer.profile}</p>\n          </label>\n\n          <label>\n            TIPO DO PN\n            <p>{customer.pnType}</p>\n          </label>\n\n          <label>\n            CONTRATO(S) ATIVO(S)\n            <p>{customer.numberOfActiveContracts}</p>\n          </label>\n\n          <label>\n            APTO A NEGOCIAR\n            <p>{customer.ableToNegotiate ? 'Sim' : 'Não'}</p>\n          </label>\n\n          {/* <label>\n            CELULAR\n            <p>{customer.cellPhone}</p>\n          </label>\n\n           <label>\n            FIXO\n            <p>{customer.phone}</p>\n          </label>\n\n          <label>\n            E-MAIL\n            <p>{customer.email}</p>\n          </label> */}\n        </div>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ClientData;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts",[],{"ruleId":"63","severity":1,"message":"64","line":43,"column":9,"nodeType":"65","messageId":"66","endLine":43,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":10,"column":3,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},"no-console","Unexpected console statement.","MemberExpression","unexpected"]