[{"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx":"1","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerOutageService.tsx":"2","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\yaloApi.ts":"3","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts":"4","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\index.tsx":"5","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\styles.ts":"6","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx":"7","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\styles.ts":"8","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx":"9","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts":"10","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getUnformattedPhone.ts":"11","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\styles.tsx":"12","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\index.tsx":"13","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\styles.ts":"14","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\index.tsx":"15","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx":"16","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DebitsConsultationModal\\index.tsx":"17","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\index.tsx":"18","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\index.tsx":"19","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts":"20","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\routes\\index.tsx":"21","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\styles.ts":"22","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\index.tsx":"23","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\timer.tsx":"24","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx":"25","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\customerService.tsx":"26","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\index.tsx":"27","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\styles.ts":"28","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\styles.ts":"29","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\index.tsx":"30","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx":"31","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\styles.ts":"32","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx":"33","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\styles.ts":"34","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx":"35","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\styles.ts":"36","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\index.tsx":"37","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\styles\\global.ts":"38","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\whatsappSending.tsx":"39","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\styles.ts":"40","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\index.tsx":"41","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts":"42","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\index.tsx":"43","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\styles.ts":"44","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\index.tsx":"45","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\auth.tsx":"46","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\authenticationApi.ts":"47","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\Dashboard\\index.tsx":"48","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts":"49","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\Dashboard\\styles.ts":"50","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\styles.ts":"51","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Loading\\index.tsx":"52","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Loading\\styles.ts":"53","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\styles.ts":"54","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\styles.ts":"55","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\index.tsx":"56","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\questions\\PowerOutageQuestions.ts":"57","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx":"58","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\eqtlBarApi.ts":"59","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\index.tsx":"60","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\inputMasks.ts":"61","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\index.tsx":"62","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Button\\index.tsx":"63","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\index.tsx":"64","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\index.tsx":"65","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts":"66","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx":"67","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\index.tsx":"68","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\styles.ts":"69"},{"size":1483,"mtime":1614598464129,"results":"70","hashOfConfig":"71"},{"size":2291,"mtime":1614598464128,"results":"72","hashOfConfig":"71"},{"size":255,"mtime":1614771252317,"results":"73","hashOfConfig":"71"},{"size":7656,"mtime":1614800133372,"results":"74","hashOfConfig":"71"},{"size":1557,"mtime":1614598464089,"results":"75","hashOfConfig":"71"},{"size":135,"mtime":1614598464105,"results":"76","hashOfConfig":"71"},{"size":1447,"mtime":1614771252285,"results":"77","hashOfConfig":"71"},{"size":980,"mtime":1614598464096,"results":"78","hashOfConfig":"71"},{"size":1460,"mtime":1614771252289,"results":"79","hashOfConfig":"71"},{"size":572,"mtime":1614598464095,"results":"80","hashOfConfig":"71"},{"size":262,"mtime":1614598464145,"results":"81","hashOfConfig":"71"},{"size":751,"mtime":1614598464115,"results":"82","hashOfConfig":"71"},{"size":4430,"mtime":1614598464118,"results":"83","hashOfConfig":"71"},{"size":1125,"mtime":1614598911435,"results":"84","hashOfConfig":"71"},{"size":5684,"mtime":1614771252299,"results":"85","hashOfConfig":"71"},{"size":4054,"mtime":1614771252290,"results":"86","hashOfConfig":"71"},{"size":8234,"mtime":1614771252296,"results":"87","hashOfConfig":"71"},{"size":5255,"mtime":1614628774694,"results":"88","hashOfConfig":"71"},{"size":3154,"mtime":1614800892177,"results":"89","hashOfConfig":"71"},{"size":997,"mtime":1614771252304,"results":"90","hashOfConfig":"71"},{"size":379,"mtime":1614598464136,"results":"91","hashOfConfig":"71"},{"size":852,"mtime":1614771252302,"results":"92","hashOfConfig":"71"},{"size":1020,"mtime":1614621256295,"results":"93","hashOfConfig":"71"},{"size":1265,"mtime":1614771252310,"results":"94","hashOfConfig":"71"},{"size":4874,"mtime":1614771252281,"results":"95","hashOfConfig":"71"},{"size":6632,"mtime":1614632001179,"results":"96","hashOfConfig":"71"},{"size":1671,"mtime":1614771252294,"results":"97","hashOfConfig":"71"},{"size":807,"mtime":1614630714268,"results":"98","hashOfConfig":"71"},{"size":422,"mtime":1614771252291,"results":"99","hashOfConfig":"71"},{"size":479,"mtime":1614598464130,"results":"100","hashOfConfig":"71"},{"size":1578,"mtime":1614598464084,"results":"101","hashOfConfig":"71"},{"size":1273,"mtime":1614598464090,"results":"102","hashOfConfig":"71"},{"size":1765,"mtime":1614598464087,"results":"103","hashOfConfig":"71"},{"size":1271,"mtime":1614771252295,"results":"104","hashOfConfig":"71"},{"size":3318,"mtime":1614598464100,"results":"105","hashOfConfig":"71"},{"size":2490,"mtime":1614598464116,"results":"106","hashOfConfig":"71"},{"size":1609,"mtime":1614598464090,"results":"107","hashOfConfig":"71"},{"size":534,"mtime":1614771252318,"results":"108","hashOfConfig":"71"},{"size":7004,"mtime":1614771252311,"results":"109","hashOfConfig":"71"},{"size":758,"mtime":1614771252314,"results":"110","hashOfConfig":"71"},{"size":296,"mtime":1614771252292,"results":"111","hashOfConfig":"71"},{"size":2177,"mtime":1614771252281,"results":"112","hashOfConfig":"71"},{"size":414,"mtime":1614771252284,"results":"113","hashOfConfig":"71"},{"size":817,"mtime":1614800314652,"results":"114","hashOfConfig":"71"},{"size":1839,"mtime":1614801484998,"results":"115","hashOfConfig":"71"},{"size":2120,"mtime":1614771252308,"results":"116","hashOfConfig":"71"},{"size":292,"mtime":1614771252317,"results":"117","hashOfConfig":"71"},{"size":615,"mtime":1614771252313,"results":"118","hashOfConfig":"71"},{"size":2199,"mtime":1614771252322,"results":"119","hashOfConfig":"71"},{"size":266,"mtime":1614771252313,"results":"120","hashOfConfig":"71"},{"size":162,"mtime":1614771252306,"results":"121","hashOfConfig":"71"},{"size":1081,"mtime":1614771252282,"results":"122","hashOfConfig":"71"},{"size":234,"mtime":1614771252283,"results":"123","hashOfConfig":"71"},{"size":186,"mtime":1614771252278,"results":"124","hashOfConfig":"71"},{"size":705,"mtime":1614771252290,"results":"125","hashOfConfig":"71"},{"size":3601,"mtime":1614771252298,"results":"126","hashOfConfig":"71"},{"size":3327,"mtime":1614771252303,"results":"127","hashOfConfig":"71"},{"size":1527,"mtime":1614771252309,"results":"128","hashOfConfig":"71"},{"size":266,"mtime":1614771252317,"results":"129","hashOfConfig":"71"},{"size":3082,"mtime":1614771252314,"results":"130","hashOfConfig":"71"},{"size":1732,"mtime":1614771252323,"results":"131","hashOfConfig":"71"},{"size":785,"mtime":1614771252306,"results":"132","hashOfConfig":"71"},{"size":316,"mtime":1614771252276,"results":"133","hashOfConfig":"71"},{"size":1180,"mtime":1614771252305,"results":"134","hashOfConfig":"71"},{"size":1655,"mtime":1614771252293,"results":"135","hashOfConfig":"71"},{"size":1138,"mtime":1614771252280,"results":"136","hashOfConfig":"71"},{"size":893,"mtime":1614795038051,"results":"137","hashOfConfig":"71"},{"size":353,"mtime":1614798777558,"results":"138","hashOfConfig":"71"},{"size":629,"mtime":1614799787873,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tpyhyp",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"188"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\toast.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerOutageService.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\yaloApi.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts",["286","287","288","289","290","291"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount: responseCustomer.contaContrato,\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    customer.contractAccount = responseCustomer.contaContrato.toString();\n\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: debitosFatura.valorTotalDebitoFatura,\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits:\n        debitosParcelamento.valorTotalDebitoParcelamento,\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport default extractResponseData;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts",[],["292","293","294","295","296"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getUnformattedPhone.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\styles.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\index.tsx",["297"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DebitsConsultationModal\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\index.tsx",["298"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { useLoading } from 'react-use-loading';\n\nimport eqtlBarApi from '../../../services/eqtlBarApi';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\n\nimport {\n  ModalContent,\n  SelectDate,\n  ConfirmButton,\n  SelectContainer,\n} from './styles';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useAlert } from '../../../hooks/alert';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface ValidDate {\n  description: string;\n  code: string;\n}\n\ninterface ResponseValidDate {\n  descricaoDt: string;\n  codigoDt: string;\n}\n\ninterface GetDueDateListProps {\n  contract: string;\n  stateCode: string;\n}\n\ninterface SetDueDateProps {\n  contract: string;\n  stateCode: string;\n  requestedDate: string;\n}\n\ninterface OptionProps {\n  value: string;\n  label: string;\n}\n\nconst DueDateChange: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const { customer, operatingCompany } = useCustomerService();\n  const { customAlert } = useAlert();\n\n  const [validDates, setValidDates] = useState<ValidDate[]>([]);\n  const [selectOptions, setSelectOptions] = useState<OptionProps[]>([]);\n  const [selectedDate, setSelectedDate] = useState<OptionProps | undefined>(\n    undefined,\n  );\n\n  const getDueDateList = useCallback(\n    async ({ contract, stateCode }: GetDueDateListProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagConsultar: true,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      return response.data.data.listaDataCerta;\n    },\n    [],\n  );\n\n  const setDueDate = useCallback(\n    async ({ contract, stateCode, requestedDate }: SetDueDateProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagAlterar: true,\n          dataSolicitada: requestedDate,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      if (response.data.data.mensagem !== 'Data Certa Incluida com Sucesso!') {\n        throw new Error(response.data.data.mensagem);\n      }\n    },\n    [],\n  );\n\n  const handleChangeSelect = useCallback((value: OptionProps) => {\n    setSelectedDate(value);\n  }, []);\n\n  const handleClickSetDueDate = useCallback(async () => {\n    try {\n      start('Ativando serviço ...');\n\n      if (selectedDate) {\n        await setDueDate({\n          contract: customer.contractAccount,\n          stateCode: operatingCompany,\n          requestedDate: selectedDate.value,\n        });\n\n        customAlert({\n          type: 'success',\n          title: 'Sucesso na alteração',\n          description: 'Data certa alterada com sucesso.',\n          confirmationText: 'OK',\n        });\n      }\n    } catch (err) {\n      customAlert({\n        type: 'error',\n        title: 'Erro na alteração',\n        description: err.message,\n        confirmationText: 'OK',\n      });\n    } finally {\n      setIsOpen();\n      stop();\n    }\n  }, [\n    customAlert,\n    selectedDate,\n    setDueDate,\n    setIsOpen,\n    start,\n    stop,\n    customer,\n    operatingCompany,\n  ]);\n\n  useEffect(() => {\n    getDueDateList({\n      contract: customer.contractAccount,\n      stateCode: operatingCompany,\n    }).then(data => {\n      setValidDates(\n        data.map((date: ResponseValidDate) => {\n          const validDate: ValidDate = {\n            description: date.descricaoDt,\n            code: date.codigoDt,\n          };\n\n          return validDate;\n        }),\n      );\n    });\n  }, [customer, getDueDateList, operatingCompany]);\n\n  useEffect(() => {\n    setSelectOptions(\n      validDates.map(date => {\n        const option: OptionProps = {\n          value: date.description,\n          label: date.code,\n        };\n\n        return option;\n      }),\n    );\n  }, [validDates]);\n\n  useEffect(() => {\n    setSelectedDate(undefined);\n  }, [setIsOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      {validDates.length ? (\n        <ModalContent>\n          <h2>Data certa</h2>\n\n          <h1>\n            Escolha a melhor data para você receber suas próximas faturas:\n          </h1>\n\n          <SelectContainer>\n            <SelectDate\n              name=\"dueDate\"\n              options={[...selectOptions]}\n              maxMenuHeight={144}\n              placeholder=\"Selecione\"\n              onChange={(value: OptionProps) => handleChangeSelect(value)}\n            />\n\n            <ConfirmButton\n              type=\"button\"\n              onClick={handleClickSetDueDate}\n              disabled={!selectedDate}\n            >\n              Cadastrar\n            </ConfirmButton>\n          </SelectContainer>\n        </ModalContent>\n      ) : (\n        <p>Data certa não habilitada para o cliente</p>\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DueDateChange;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\index.tsx",["299","300"],"import React, { useMemo } from 'react';\nimport { useLoading } from 'react-use-loading';\nimport { format } from 'date-fns';\nimport { Column } from 'react-table';\nimport { useCustomerService } from '../../../hooks/customerService';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\nimport Table from './ServiceNotesTable';\n\nimport { ClosedNote, OpenNote } from '../../../types/ServiceNotes';\n\nimport { ModalContent, OpeningDate, Title } from './styles';\nimport StatusIndicator from './StatusIndicator';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\nconst RequestList: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n  const { serviceNotes } = useCustomerService();\n\n  const columns: Column<Note>[] = useMemo(\n    () =>\n      [\n        {\n          Header: 'Nº do protocolo',\n          accessor: 'protocol',\n        },\n        {\n          Header: 'Serviço',\n          accessor: 'service',\n          minWidth: 500,\n        },\n        {\n          Header: 'Solicitado em',\n          accessor: 'openingDate',\n        },\n        {\n          Header: 'Atendido em',\n          accessor: 'conclusionDate',\n        },\n        {\n          Header: 'Status',\n          accessor: 'status',\n          Cell: ({ value }) => {\n            if (!value || value === 'FINL') {\n              return <StatusIndicator type=\"concluded\" title=\"Concluído\" />;\n            }\n\n            if (value === 'ABER' || value === 'RECE' || value === 'ATIV') {\n              return <StatusIndicator type=\"open\" title=\"Aberto\" />;\n            }\n\n            return <StatusIndicator type=\"canceled\" title=\"Cancelada\" />;\n          },\n        },\n      ] as Column<Note>[],\n    [],\n  );\n\n  const data = useMemo(() => {\n    const mappedOpenNotes = serviceNotes.openServiceNotes.map(\n      (note: OpenNote) =>\n        ({\n          protocol: '',\n          service: note.typeDescription,\n          openingDate: format(note.openingDate, 'dd/MM/yyyy'),\n          status: note.status,\n        } as Note),\n    );\n\n    const mappedClosedNotes = serviceNotes.closedServiceNotes.map(\n      (note: ClosedNote) =>\n        ({\n          protocol: '',\n          service: note.typeDescription,\n          openingDate: format(note.openingDate, 'dd/MM/yyyy'),\n          conclusionDate: format(note.conclusionDate, 'dd/MM/yyyy'),\n        } as Note),\n    );\n\n    return [...mappedOpenNotes, ...mappedClosedNotes];\n  }, [serviceNotes]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      customStyles={{\n        borderRadius: '8px',\n        padding: '48px 8px',\n        width: 'fit-content',\n        height: 'fit-content',\n      }}\n    >\n      <ModalContent>\n        <Title>Acompanhamento de protocolos</Title>\n\n        <Table columns={columns} data={data} />\n      </ModalContent>\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default RequestList;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\routes\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\styles.ts",[],["301","302","303","304","305"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\timer.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\customerService.tsx",["306"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\index.tsx",["307","308"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  disabled,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error} isDisabled={disabled}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputMask\\styles.ts",[],["309","310","311","312","313"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\index.tsx",["314","315"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\styles\\global.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\whatsappSending.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\index.tsx",["316"],"import React from 'react';\nimport { useTable, Column, useResizeColumns } from 'react-table';\n\nimport {\n  Container,\n  TableContainer,\n  TableHeadContainer,\n  TableColumnsTitleContainer,\n  TableColumnTitle,\n  TableRow,\n  TableBody,\n  TableDataCell,\n} from './styles';\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\ninterface ServiceNotesTableProps {\n  columns: Column<Note>[];\n  data: Note[];\n}\n\nconst ServiceNotesTable: React.FC<ServiceNotesTableProps> = ({\n  columns,\n  data,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useResizeColumns);\n\n  return (\n    <Container>\n      <TableContainer {...getTableProps()}>\n        <TableHeadContainer>\n          {headerGroups.map(headerGroup => (\n            <TableColumnsTitleContainer {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <TableColumnTitle {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </TableColumnTitle>\n              ))}\n            </TableColumnsTitleContainer>\n          ))}\n        </TableHeadContainer>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableDataCell {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableDataCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ServiceNotesTable;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\auth.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\authenticationApi.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\Dashboard\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Loading\\index.tsx",["317"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Loading\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ContractData\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\EmailInvoice\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\questions\\PowerOutageQuestions.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\eqtlBarApi.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\inputMasks.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Button\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInput\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx",["318"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\styles.ts",[],{"ruleId":"319","severity":1,"message":"320","line":86,"column":25,"nodeType":"321","messageId":"322","endLine":86,"endColumn":28,"suggestions":"323"},{"ruleId":"319","severity":1,"message":"320","line":151,"column":36,"nodeType":"321","messageId":"322","endLine":151,"endColumn":39,"suggestions":"324"},{"ruleId":"319","severity":1,"message":"320","line":155,"column":13,"nodeType":"321","messageId":"322","endLine":155,"endColumn":16,"suggestions":"325"},{"ruleId":"319","severity":1,"message":"320","line":167,"column":13,"nodeType":"321","messageId":"322","endLine":167,"endColumn":16,"suggestions":"326"},{"ruleId":"319","severity":1,"message":"320","line":202,"column":12,"nodeType":"321","messageId":"322","endLine":202,"endColumn":15,"suggestions":"327"},{"ruleId":"319","severity":1,"message":"320","line":221,"column":12,"nodeType":"321","messageId":"322","endLine":221,"endColumn":15,"suggestions":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","severity":1,"message":"340","line":17,"column":10,"nodeType":"341","messageId":"342","endLine":17,"endColumn":18},{"ruleId":"339","severity":1,"message":"343","line":1,"column":41,"nodeType":"341","messageId":"342","endLine":1,"endColumn":47},{"ruleId":"339","severity":1,"message":"344","line":13,"column":24,"nodeType":"341","messageId":"342","endLine":13,"endColumn":35},{"ruleId":"339","severity":1,"message":"345","line":30,"column":36,"nodeType":"341","messageId":"342","endLine":30,"endColumn":41},{"ruleId":"329","replacedBy":"346"},{"ruleId":"331","replacedBy":"347"},{"ruleId":"333","replacedBy":"348"},{"ruleId":"335","replacedBy":"349"},{"ruleId":"337","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":200,"column":5,"nodeType":"353","endLine":200,"endColumn":61,"suggestions":"354"},{"ruleId":"319","severity":1,"message":"320","line":37,"column":21,"nodeType":"321","messageId":"322","endLine":37,"endColumn":24,"suggestions":"355"},{"ruleId":"319","severity":1,"message":"320","line":40,"column":23,"nodeType":"321","messageId":"322","endLine":40,"endColumn":26,"suggestions":"356"},{"ruleId":"329","replacedBy":"357"},{"ruleId":"331","replacedBy":"358"},{"ruleId":"333","replacedBy":"359"},{"ruleId":"335","replacedBy":"360"},{"ruleId":"337","replacedBy":"361"},{"ruleId":"319","severity":1,"message":"320","line":36,"column":21,"nodeType":"321","messageId":"322","endLine":36,"endColumn":24,"suggestions":"362"},{"ruleId":"319","severity":1,"message":"320","line":39,"column":23,"nodeType":"321","messageId":"322","endLine":39,"endColumn":26,"suggestions":"363"},{"ruleId":"339","severity":1,"message":"364","line":55,"column":27,"nodeType":"341","messageId":"342","endLine":55,"endColumn":28},{"ruleId":"339","severity":1,"message":"365","line":18,"column":3,"nodeType":"341","messageId":"342","endLine":18,"endColumn":12},{"ruleId":"319","severity":1,"message":"320","line":7,"column":13,"nodeType":"321","messageId":"322","endLine":7,"endColumn":16,"suggestions":"366"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["367","368"],["369","370"],["371","372"],["373","374"],["375","376"],["377","378"],"lines-around-directive",["379"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useToast' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'OpeningDate' is defined but never used.","'start' is assigned a value but never used.",["379"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'startTimer'. Either exclude it or remove the dependency array.","ArrayExpression",["380"],["381","382"],["383","384"],["379"],[],[],[],[],["385","386"],["387","388"],"'i' is defined but never used.","'setIsOpen' is defined but never used.",["389","390"],{"messageId":"391","fix":"392","desc":"393"},{"messageId":"394","fix":"395","desc":"396"},{"messageId":"391","fix":"397","desc":"393"},{"messageId":"394","fix":"398","desc":"396"},{"messageId":"391","fix":"399","desc":"393"},{"messageId":"394","fix":"400","desc":"396"},{"messageId":"391","fix":"401","desc":"393"},{"messageId":"394","fix":"402","desc":"396"},{"messageId":"391","fix":"403","desc":"393"},{"messageId":"394","fix":"404","desc":"396"},{"messageId":"391","fix":"405","desc":"393"},{"messageId":"394","fix":"406","desc":"396"},"padding-line-between-statements",{"desc":"407","fix":"408"},{"messageId":"391","fix":"409","desc":"393"},{"messageId":"394","fix":"410","desc":"396"},{"messageId":"391","fix":"411","desc":"393"},{"messageId":"394","fix":"412","desc":"396"},{"messageId":"391","fix":"413","desc":"393"},{"messageId":"394","fix":"414","desc":"396"},{"messageId":"391","fix":"415","desc":"393"},{"messageId":"394","fix":"416","desc":"396"},{"messageId":"391","fix":"417","desc":"393"},{"messageId":"394","fix":"418","desc":"396"},"suggestUnknown",{"range":"419","text":"420"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"419","text":"421"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"422","text":"420"},{"range":"422","text":"421"},{"range":"423","text":"420"},{"range":"423","text":"421"},{"range":"424","text":"420"},{"range":"424","text":"421"},{"range":"425","text":"420"},{"range":"425","text":"421"},{"range":"426","text":"420"},{"range":"426","text":"421"},"Update the dependencies array to be: [getCustomer, generateProtocol, customAlert]",{"range":"427","text":"428"},{"range":"429","text":"420"},{"range":"429","text":"421"},{"range":"430","text":"420"},{"range":"430","text":"421"},{"range":"431","text":"420"},{"range":"431","text":"421"},{"range":"432","text":"420"},{"range":"432","text":"421"},{"range":"433","text":"420"},{"range":"433","text":"421"},[2678,2681],"unknown","never",[4297,4300],[4489,4492],[4898,4901],[5907,5910],[6532,6535],[5408,5464],"[getCustomer, generateProtocol, customAlert]",[975,978],[1062,1065],[963,966],[1050,1053],[147,150]]