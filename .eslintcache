[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/index.tsx":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/styles.ts":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts":"71","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx":"72","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"73","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"74","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx":"75","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx":"76","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"77","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"78","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts":"79","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx":"80","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"81","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"82","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"83","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"84","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx":"85","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"86","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx":"87"},{"size":4584,"mtime":1616103283292,"results":"88","hashOfConfig":"89"},{"size":9244,"mtime":1616183160364,"results":"90","hashOfConfig":"89"},{"size":7104,"mtime":1616509860615,"results":"91","hashOfConfig":"89"},{"size":8207,"mtime":1615822109965,"results":"92","hashOfConfig":"89"},{"size":1609,"mtime":1614860182228,"results":"93","hashOfConfig":"89"},{"size":353,"mtime":1614860182228,"results":"94","hashOfConfig":"89"},{"size":1138,"mtime":1614860182228,"results":"95","hashOfConfig":"89"},{"size":1183,"mtime":1614898393797,"results":"96","hashOfConfig":"89"},{"size":10105,"mtime":1616531436369,"results":"97","hashOfConfig":"89"},{"size":255,"mtime":1614860182232,"results":"98","hashOfConfig":"89"},{"size":615,"mtime":1614860182232,"results":"99","hashOfConfig":"89"},{"size":1732,"mtime":1614860182232,"results":"100","hashOfConfig":"89"},{"size":357,"mtime":1614860182232,"results":"101","hashOfConfig":"89"},{"size":758,"mtime":1614860182232,"results":"102","hashOfConfig":"89"},{"size":1081,"mtime":1614860182228,"results":"103","hashOfConfig":"89"},{"size":234,"mtime":1614860182228,"results":"104","hashOfConfig":"89"},{"size":316,"mtime":1614860182228,"results":"105","hashOfConfig":"89"},{"size":296,"mtime":1614860182228,"results":"106","hashOfConfig":"89"},{"size":135,"mtime":1614860182228,"results":"107","hashOfConfig":"89"},{"size":2177,"mtime":1614860182228,"results":"108","hashOfConfig":"89"},{"size":1170,"mtime":1614860182232,"results":"109","hashOfConfig":"89"},{"size":366,"mtime":1614860182228,"results":"110","hashOfConfig":"89"},{"size":1671,"mtime":1614860182228,"results":"111","hashOfConfig":"89"},{"size":980,"mtime":1614860182228,"results":"112","hashOfConfig":"89"},{"size":363,"mtime":1614860182228,"results":"113","hashOfConfig":"89"},{"size":1448,"mtime":1614860182228,"results":"114","hashOfConfig":"89"},{"size":414,"mtime":1614860182228,"results":"115","hashOfConfig":"89"},{"size":893,"mtime":1614860182228,"results":"116","hashOfConfig":"89"},{"size":705,"mtime":1614860182228,"results":"117","hashOfConfig":"89"},{"size":572,"mtime":1614860182228,"results":"118","hashOfConfig":"89"},{"size":2786,"mtime":1615245186342,"results":"119","hashOfConfig":"89"},{"size":5511,"mtime":1615244847891,"results":"120","hashOfConfig":"89"},{"size":262,"mtime":1614860182232,"results":"121","hashOfConfig":"89"},{"size":1222,"mtime":1614860182228,"results":"122","hashOfConfig":"89"},{"size":3327,"mtime":1614860182228,"results":"123","hashOfConfig":"89"},{"size":1200,"mtime":1614886650378,"results":"124","hashOfConfig":"89"},{"size":379,"mtime":1614860182232,"results":"125","hashOfConfig":"89"},{"size":802,"mtime":1614860182232,"results":"126","hashOfConfig":"89"},{"size":3082,"mtime":1614860182232,"results":"127","hashOfConfig":"89"},{"size":266,"mtime":1614860182232,"results":"128","hashOfConfig":"89"},{"size":162,"mtime":1614860182232,"results":"129","hashOfConfig":"89"},{"size":844,"mtime":1614883272890,"results":"130","hashOfConfig":"89"},{"size":1180,"mtime":1614860182232,"results":"131","hashOfConfig":"89"},{"size":1273,"mtime":1614860182228,"results":"132","hashOfConfig":"89"},{"size":1399,"mtime":1615856071854,"results":"133","hashOfConfig":"89"},{"size":422,"mtime":1614860182228,"results":"134","hashOfConfig":"89"},{"size":436,"mtime":1615331953569,"results":"135","hashOfConfig":"89"},{"size":3318,"mtime":1614860182228,"results":"136","hashOfConfig":"89"},{"size":1239,"mtime":1615849315958,"results":"137","hashOfConfig":"89"},{"size":1281,"mtime":1615245128594,"results":"138","hashOfConfig":"89"},{"size":3388,"mtime":1615245232987,"results":"139","hashOfConfig":"89"},{"size":2871,"mtime":1615209771089,"results":"140","hashOfConfig":"89"},{"size":4892,"mtime":1616103165501,"results":"141","hashOfConfig":"89"},{"size":629,"mtime":1614860182228,"results":"142","hashOfConfig":"89"},{"size":5694,"mtime":1615244969754,"results":"143","hashOfConfig":"89"},{"size":852,"mtime":1614889628241,"results":"144","hashOfConfig":"89"},{"size":852,"mtime":1614860182228,"results":"145","hashOfConfig":"89"},{"size":479,"mtime":1614860182232,"results":"146","hashOfConfig":"89"},{"size":1483,"mtime":1614860182232,"results":"147","hashOfConfig":"89"},{"size":1527,"mtime":1614860182232,"results":"148","hashOfConfig":"89"},{"size":8854,"mtime":1615854011817,"results":"149","hashOfConfig":"89"},{"size":266,"mtime":1614860182232,"results":"150","hashOfConfig":"89"},{"size":785,"mtime":1614860182232,"results":"151","hashOfConfig":"89"},{"size":1557,"mtime":1614860182228,"results":"152","hashOfConfig":"89"},{"size":419,"mtime":1614860182228,"results":"153","hashOfConfig":"89"},{"size":1447,"mtime":1614860182228,"results":"154","hashOfConfig":"89"},{"size":1765,"mtime":1614860182228,"results":"155","hashOfConfig":"89"},{"size":343,"mtime":1614860182232,"results":"156","hashOfConfig":"89"},{"size":743,"mtime":1614860182232,"results":"157","hashOfConfig":"89"},{"size":1125,"mtime":1614860182228,"results":"158","hashOfConfig":"89"},{"size":275,"mtime":1614886631698,"results":"159","hashOfConfig":"89"},{"size":1803,"mtime":1614886338316,"results":"160","hashOfConfig":"89"},{"size":534,"mtime":1614860182232,"results":"161","hashOfConfig":"89"},{"size":1393,"mtime":1614899292880,"results":"162","hashOfConfig":"89"},{"size":1265,"mtime":1614860182232,"results":"163","hashOfConfig":"89"},{"size":1668,"mtime":1614899414604,"results":"164","hashOfConfig":"89"},{"size":7368,"mtime":1615835405289,"results":"165","hashOfConfig":"89"},{"size":1655,"mtime":1614860182228,"results":"166","hashOfConfig":"89"},{"size":1271,"mtime":1614860182228,"results":"167","hashOfConfig":"89"},{"size":1460,"mtime":1614860182228,"results":"168","hashOfConfig":"89"},{"size":2120,"mtime":1614860182232,"results":"169","hashOfConfig":"89"},{"size":751,"mtime":1614860182228,"results":"170","hashOfConfig":"89"},{"size":292,"mtime":1614860182232,"results":"171","hashOfConfig":"89"},{"size":377,"mtime":1614860182228,"results":"172","hashOfConfig":"89"},{"size":2124,"mtime":1615856358304,"results":"173","hashOfConfig":"89"},{"size":2490,"mtime":1614860182228,"results":"174","hashOfConfig":"89"},{"size":3731,"mtime":1615244938578,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"11dd9mg",{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"186"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":1,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"181"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"195"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"186"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"181"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"181"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"208"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"208"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/index.tsx",[],["368","369","370","371","372"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx",[],["373","374","375","376","377"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",[],["378","379","380","381","382"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["383","384"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],["385","386","387","388","389"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],["390","391","392","393","394"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",["395","396","397","398","399","400","401","402","403","404","405","406"],"import React, { createContext, useCallback, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport eqtlBarApi from '../services/eqtlBarApi';\n\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\nimport ServiceNotes from '../types/ServiceNotes';\n\ninterface PowerReconnectionContextData {\n  ableToReconnection({\n    contractAccount,\n    installation,\n    serviceNotes,\n  }: AbleToReconnectionProps): AbleToReconnectionResponse;\n  suitableForEmergencyReconnection(): boolean;\n}\n\ninterface AbleToReconnectionResponse {\n  ok: boolean;\n  error?: string;\n}\n\ninterface AbleForEmergencyReconnectionProps {\n  operatingCompany: string;\n  installationNumber: string;\n}\n\ninterface AbleToReconnectionProps {\n  contractAccount: string;\n  installation: Installation;\n  serviceNotes: ServiceNotes;\n}\n\nconst PowerReconnectionServiceContext = createContext<PowerReconnectionContextData>(\n  {} as PowerReconnectionContextData,\n);\n\nconst PowerReconnectionProvider: React.FC = ({ children }) => {\n  const ableForEmergencyReconnection = useCallback(\n    async ({\n      operatingCompany,\n      installationNumber,\n    }: AbleForEmergencyReconnectionProps) => {\n      const response = await eqtlBarApi.get(\n        '/servico/v1/religa/validaHorario',\n        {\n          params: {\n            empresaOperadora: operatingCompany,\n            numeroInstalacao: installationNumber,\n            codigoTransacao: uuid(),\n          },\n        },\n      );\n\n      if (response.data.data.regraSaida === 'U') {\n        return true;\n      }\n\n      return false;\n    },\n    [],\n  );\n\n  const checkReconnectionValue = useCallback(() => {}, []);\n\n  const ableToReconnection = useCallback(\n    ({\n      contractAccount,\n      installation,\n      serviceNotes,\n    }: AbleToReconnectionProps) => {\n      // Buscar notas de desligamento\n      const shutdownNote = serviceNotes.openServiceNotes.find(\n        note => note.type === 'DS',\n      );\n\n      // Buscar notas de suspensão\n      const suspensionNote = serviceNotes.openServiceNotes.find(\n        note => note.type === 'SF',\n      );\n\n      // Buscar notas de fiscalização\n      const oversightNote = serviceNotes.openServiceNotes.find(\n        note => note.type === 'FS',\n      );\n\n      // Buscar notas de ligação nova\n      const newEnergyConnectionNote = serviceNotes.openServiceNotes.find(\n        note => note.type === 'LN',\n      );\n\n      // Buscar notas de religação\n      const reconnectionNote = serviceNotes.openServiceNotes.find(\n        note => note.type === 'RL',\n      );\n\n      console.log(reconnectionNote);\n      console.log(shutdownNote);\n      console.log(oversightNote);\n      console.log(suspensionNote);\n      console.log(newEnergyConnectionNote);\n\n      if (installation.status === 'Potencial') {\n        return {\n          ok: false,\n          error: `A conta contrato ${contractAccount} ainda não está ligada.`,\n        };\n      }\n\n      if (\n        installation.status === 'Desligada' ||\n        installation.status === 'Desliga em andamento'\n      ) {\n        return {\n          ok: false,\n          error:\n            'Esta conta contrato está desligada. Para restabelecer seu fornecimento de energia você precisa solicitar uma reativação.',\n        };\n      }\n\n      if (\n        installation.cutInProgress ||\n        installation.status === 'Corte executado' ||\n        installation.status === 'Corte em andamento'\n      ) {\n        console.log('corteExecutado');\n\n        if (reconnectionNote) {\n          if (\n            reconnectionNote.status === 'REJE' ||\n            reconnectionNote.status === 'ATIV' ||\n            reconnectionNote.status === 'DEVO'\n          ) {\n            return {\n              // VERIFICAR TEXTO\n              ok: false,\n              error: 'Infelizmente não é possível atender este caso por aqui.',\n            };\n          }\n\n          if (reconnectionNote.status === 'RECE') {\n            if (reconnectionNote.code === 'RELU') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação de urgência em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n\n            if (reconnectionNote.code === 'RELA') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação automática em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n\n            if (reconnectionNote.code === 'RELC') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n          }\n        }\n\n        if (shutdownNote) {\n          return {\n            ok: false,\n            error:\n              'Esta conta contrato está desligada. Para restabelecer seu fornecimento de energia você precisa solicitar uma reativação.',\n          };\n        }\n\n        if (oversightNote) {\n          // VERIFICAR ESSA CONDIÇÃO\n          return {\n            ok: false,\n            error:\n              'Infelizmente não é possível atender este caso por aqui. Você pode solicitar este serviço ligando para o 116 ou indo em uma de nossas agências de atendimento',\n          };\n        }\n\n        if (suspensionNote) {\n          // VERIFICAR ESSA CONDIÇÃO\n          if (\n            suspensionNote.status !== 'RECE' &&\n            suspensionNote.status !== 'FINL'\n          ) {\n            if (oversightNote) {\n              return {\n                ok: false,\n                error:\n                  'Infelizmente não é possível atender este caso por aqui. Você pode solicitar este serviço ligando para o 116 ou indo em uma de nossas agências de atendimento',\n              };\n            }\n          }\n        }\n      }\n\n      if (newEnergyConnectionNote) {\n        return {\n          ok: false,\n          error: `Já existe um serviço de reativação em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n        };\n      }\n\n      if (\n        installation.status === 'Reativa em Andamento' ||\n        installation.status === 'Religa em Andamento'\n      ) {\n        console.log('religa andamento');\n\n        if (newEnergyConnectionNote) {\n          return {\n            ok: false,\n            error: `Já existe um serviço de reativação em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n          };\n        }\n\n        if (reconnectionNote) {\n          if (\n            reconnectionNote.status === 'REJE' ||\n            reconnectionNote.status === 'ATIV' ||\n            reconnectionNote.status === 'DEVO'\n          ) {\n            // VERIFICAR ESSE TEXTO\n            return {\n              ok: false,\n              error: 'Infelizmente não é possível atender este caso por aqui.',\n            };\n          }\n\n          if (\n            reconnectionNote.status === 'RECE' ||\n            reconnectionNote.status === 'ERRO'\n          ) {\n            if (reconnectionNote.code === 'RELU') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação de urgência em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n\n            if (reconnectionNote.code === 'RELA') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação automática em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n\n            if (reconnectionNote.code === 'RELC') {\n              return {\n                ok: false,\n                error: `Já existe um serviço de religação em aberto para ${contractAccount}. Por favor, aguarde e logo logo seu fornecimento de energia será restabelecido.`,\n              };\n            }\n          }\n        }\n\n        if (reconnectionNote) {\n          if (\n            reconnectionNote.status === 'REJE' ||\n            reconnectionNote.status === 'ATIV' ||\n            reconnectionNote.status === 'DEVO'\n          ) {\n            // VERIFICAR ESSE TEXTO\n            return {\n              ok: false,\n              error: 'Infelizmente não é possível atender este caso por aqui.',\n            };\n          }\n\n          return {\n            ok: false,\n            error: 'Você já possui uma religação em andamento',\n          };\n        }\n      }\n\n      if (installation.status === 'Ligada') {\n        if (oversightNote) {\n          // VERIFICAR ESSE\n          return {\n            ok: false,\n            error: 'Infelizmente não é possível atender este caso por aqui.',\n          };\n        }\n\n        if (suspensionNote) {\n          return { ok: true };\n        }\n\n        return {\n          ok: false,\n          error: `A conta contrato ${contractAccount} não está com o fornecimento suspenso, mas pode ser que você esteja com uma falta de energia.`,\n        };\n      }\n\n      // AVALIAR ESTE CASO\n      return { ok: true };\n    },\n    [],\n  );\n\n  const suitableForEmergencyReconnection = useCallback(() => {\n    return false; // HARD CODDED\n  }, []);\n\n  return (\n    <PowerReconnectionServiceContext.Provider\n      value={{ ableToReconnection, suitableForEmergencyReconnection }}\n    >\n      {children}\n    </PowerReconnectionServiceContext.Provider>\n  );\n};\n\nfunction usePowerReconnectionService(): PowerReconnectionContextData {\n  const context = useContext(PowerReconnectionServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'usePowerReconnectionService must be used within a PowerReconnectionProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { PowerReconnectionProvider, usePowerReconnectionService };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],["407","408","409","410","411"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts",[],["412","413","414","415","416"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["417"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],["418","419","420","421","422"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx",["423","424"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  disabled,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error} isDisabled={disabled}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["425"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/index.tsx",["426"],"import React, { useCallback, useState } from 'react';\n\nimport DebitsValidationModal, { Question } from './DebitsValidationModal';\n\nimport { currencyMask } from '../../../utils/inputMasks';\n\nimport { useCustomerService } from '../../../hooks/customerService';\n\ninterface FlowComponentProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst PowerReconnectionFlow: React.FC<FlowComponentProps> = ({\n  modalOpen,\n  toggleModal,\n}) => {\n  const { debits } = useCustomerService();\n\n  const powerReconnectionQuestions: Question[] = [\n    {\n      id: 'f1-q1',\n      title: `Você possui ${\n        debits.invoiceDebits.invoiceDebitDetails.length\n      } faturas com um débito de ${currencyMask(\n        debits.invoiceDebits.totalAmountInvoiceDebits,\n      )}. Estão pagas?`,\n      options: [\n        {\n          answer: 'Sim',\n          action: 'valida-religa-urgencia',\n        },\n        {\n          answer: 'Não',\n          nextQuestionId: 'resposta-efetue-pagamento',\n        },\n      ],\n    },\n    {\n      id: 'f1-q2',\n      title: `Você possui débitos de parcelamento com entrada de ${currencyMask(\n        debits.installmentDebits.totalAmountInstallmentDebits,\n      )}. Estão pagos?`,\n      options: [\n        {\n          answer: 'Sim',\n          action: 'valida-religa-urgencia',\n        },\n        {\n          answer: 'Não',\n          nextQuestionId: 'resposta-efetue-pagamento',\n        },\n      ],\n    },\n    {\n      id: 'resposta-efetue-pagamento',\n      title: 'Efetue o pagamento e retorne para solicitar a religação.',\n      options: [\n        {\n          answer: 'Sair',\n        },\n      ],\n    },\n  ];\n\n  const [questions, setQuestions] = useState<Question[]>(\n    powerReconnectionQuestions,\n  );\n  const [currentQuestion, setCurrentQuestion] = useState(\n    debits.invoiceDebits.totalAmountInvoiceDebits > 0\n      ? questions[0]\n      : questions[1],\n  );\n\n  const handleSetCurrentQuestion = useCallback(\n    (nextQuestionId: string) => {\n      const nextQuestion: Question | undefined = questions.find(\n        question => question.id === nextQuestionId,\n      );\n\n      if (nextQuestion) {\n        setCurrentQuestion(nextQuestion);\n      }\n    },\n    [questions],\n  );\n\n  const handleClearFlow = useCallback(() => {\n    setCurrentQuestion(questions[0]);\n  }, [questions]);\n\n  return (\n    <>\n      {debits.invoiceDebits.totalAmountInvoiceDebits > 0 ||\n      debits.installmentDebits.totalAmountInstallmentDebits > 0 ? (\n        <DebitsValidationModal\n          isOpen={modalOpen}\n          setIsOpen={toggleModal}\n          title=\"Religação\"\n          question={currentQuestion}\n          setCurrentQuestion={handleSetCurrentQuestion}\n          clearFlow={handleClearFlow}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default PowerReconnectionFlow;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",["427"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { useLoading } from 'react-use-loading';\n\nimport eqtlBarApi from '../../../services/eqtlBarApi';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\n\nimport {\n  ModalContent,\n  SelectDate,\n  ConfirmButton,\n  SelectContainer,\n} from './styles';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useAlert } from '../../../hooks/alert';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface ValidDate {\n  description: string;\n  code: string;\n}\n\ninterface ResponseValidDate {\n  descricaoDt: string;\n  codigoDt: string;\n}\n\ninterface GetDueDateListProps {\n  contract: string;\n  stateCode: string;\n}\n\ninterface SetDueDateProps {\n  contract: string;\n  stateCode: string;\n  requestedDate: string;\n}\n\ninterface OptionProps {\n  value: string;\n  label: string;\n}\n\nconst DueDateChange: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    customer,\n    operatingCompany,\n    registerServicePerformed,\n  } = useCustomerService();\n  const { customAlert } = useAlert();\n\n  const [validDates, setValidDates] = useState<ValidDate[]>([]);\n  const [selectOptions, setSelectOptions] = useState<OptionProps[]>([]);\n  const [selectedDate, setSelectedDate] = useState<OptionProps | undefined>(\n    undefined,\n  );\n\n  const getDueDateList = useCallback(\n    async ({ contract, stateCode }: GetDueDateListProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagConsultar: true,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      return response.data.data.listaDataCerta;\n    },\n    [],\n  );\n\n  const setDueDate = useCallback(\n    async ({ contract, stateCode, requestedDate }: SetDueDateProps) => {\n      const response = await eqtlBarApi.get('/servico/v1/dataCerta', {\n        params: {\n          contaContrato: contract,\n          empresaOperadora: stateCode,\n          flagAlterar: true,\n          dataSolicitada: requestedDate,\n          codigoTransacao: uuid(),\n          canalAtendimento: 'S',\n        },\n      });\n\n      if (response.data.data.mensagem !== 'Data Certa Incluida com Sucesso!') {\n        throw new Error(response.data.data.mensagem);\n      }\n    },\n    [],\n  );\n\n  const handleChangeSelect = useCallback((value: OptionProps) => {\n    setSelectedDate(value);\n  }, []);\n\n  const handleClickSetDueDate = useCallback(async () => {\n    try {\n      start('Ativando serviço ...');\n\n      if (selectedDate) {\n        await setDueDate({\n          contract: customer.contractAccount,\n          stateCode: operatingCompany,\n          requestedDate: selectedDate.value,\n        });\n\n        customAlert({\n          type: 'success',\n          title: 'Sucesso na alteração',\n          description: 'Data certa alterada com sucesso.',\n          confirmationText: 'OK',\n        });\n      }\n    } catch (err) {\n      customAlert({\n        type: 'error',\n        title: 'Erro na alteração',\n        description: err.message,\n        confirmationText: 'OK',\n      });\n    } finally {\n      setIsOpen();\n      stop();\n    }\n  }, [\n    customAlert,\n    selectedDate,\n    setDueDate,\n    setIsOpen,\n    start,\n    stop,\n    customer,\n    operatingCompany,\n  ]);\n\n  useEffect(() => {\n    getDueDateList({\n      contract: customer.contractAccount,\n      stateCode: operatingCompany,\n    }).then(data => {\n      setValidDates(\n        data.map((date: ResponseValidDate) => {\n          const validDate: ValidDate = {\n            description: date.descricaoDt,\n            code: date.codigoDt,\n          };\n\n          return validDate;\n        }),\n      );\n    });\n  }, [customer, getDueDateList, operatingCompany]);\n\n  useEffect(() => {\n    setSelectOptions(\n      validDates.map(date => {\n        const option: OptionProps = {\n          value: date.description,\n          label: date.code,\n        };\n\n        return option;\n      }),\n    );\n  }, [validDates]);\n\n  useEffect(() => {\n    setSelectedDate(undefined);\n  }, [setIsOpen]);\n\n  useEffect(() => {\n    if (isOpen) {\n      registerServicePerformed({\n        serviceName: 'Alteração de Data Certa',\n        executionDate: new Date(),\n      });\n    }\n  }, [registerServicePerformed, isOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      {validDates.length ? (\n        <ModalContent>\n          <h2>Data certa</h2>\n\n          <h1>\n            Escolha a melhor data para você receber suas próximas faturas:\n          </h1>\n\n          <SelectContainer>\n            <SelectDate\n              name=\"dueDate\"\n              options={[...selectOptions]}\n              maxMenuHeight={144}\n              placeholder=\"Selecione\"\n              onChange={(value: OptionProps) => handleChangeSelect(value)}\n            />\n\n            <ConfirmButton\n              type=\"button\"\n              onClick={handleClickSetDueDate}\n              disabled={!selectedDate}\n            >\n              Cadastrar\n            </ConfirmButton>\n          </SelectContainer>\n        </ModalContent>\n      ) : (\n        <p>Data certa não habilitada para o cliente</p>\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DueDateChange;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx",["428","429"],"import React from 'react';\n\nimport { useCustomerService } from '../../hooks/customerService';\n\nimport Modal from '../Modal';\nimport ContractsTable from './ContractsTable';\n\nimport { ModalContent, OwnerContainer, OwnerLabel, OwnerName } from './styles';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface Contract {\n  contractAccount: string;\n  address: string;\n}\n\nconst FindContractModal: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const { contracts } = useCustomerService();\n\n  const data: Contract[] = contracts.map(contract => ({\n    contractAccount: contract.contractAccount,\n    address: `${contract.address.publicArea}, ${contract.address.number}, ${contract.address.neighborhood}, ${contract.address.city} - ${contract.address.uf}, CEP ${contract.address.postalCode}`,\n  }));\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      setIsOpen={setIsOpen}\n      customStyles={{\n        borderRadius: '8px',\n        padding: '48px 0',\n        width: 'fit-content',\n        height: 'fit-content',\n      }}\n    >\n      <ModalContent>\n        <OwnerContainer>\n          {/* <OwnerLabel>Nome do titular:</OwnerLabel> */}\n          {/* <OwnerName>{contracts && contracts[0].owner}</OwnerName> */}\n        </OwnerContainer>\n\n        <ContractsTable data={data} closeModal={setIsOpen} />\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default FindContractModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx",["430","431","432"],"import React, { useCallback, useEffect, useState } from 'react';\n\nimport StepModal, { Question } from './StepModal';\n\nimport { useCustomerService } from '../../../hooks/customerService';\n\nimport powerOutageQuestions from './questions/PowerOutageQuestions';\n\ninterface FlowComponentProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst PowerOutageFlow: React.FC<FlowComponentProps> = ({\n  modalOpen,\n  toggleModal,\n}) => {\n  const [questions, setQuestions] = useState<Question[]>(powerOutageQuestions);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n\n  const handleSetCurrentQuestion = useCallback(\n    (nextQuestionId: string) => {\n      const nextQuestion: Question | undefined = questions.find(\n        question => question.id === nextQuestionId,\n      );\n\n      if (nextQuestion) {\n        setCurrentQuestion(nextQuestion);\n      }\n    },\n    [questions],\n  );\n\n  const handleClearFlow = useCallback(() => {\n    setCurrentQuestion(questions[0]);\n  }, [questions]);\n\n  return (\n    <StepModal\n      isOpen={modalOpen}\n      setIsOpen={toggleModal}\n      title=\"Falta de energia\"\n      question={currentQuestion}\n      setCurrentQuestion={handleSetCurrentQuestion}\n      clearFlow={handleClearFlow}\n    />\n  );\n};\n\nexport default PowerOutageFlow;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx",[],["433","434","435","436","437"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerReconnectionFlow/DebitsValidationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["438"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx",["439"],"import React from 'react';\nimport { useTable, Column } from 'react-table';\n\nimport {\n  Container,\n  TableContainer,\n  TableHeadContainer,\n  TableColumnsTitleContainer,\n  TableColumnTitle,\n  TableRow,\n  TableBody,\n  TableDataCell,\n} from './styles';\n\ninterface Note {\n  protocol: string;\n  service: string;\n  openingDate: string;\n  conclusionDate: string | undefined;\n  status: string;\n}\n\ninterface ServiceNotesTableProps {\n  columns: Column<Note>[];\n  data: Note[];\n}\n\nconst ServiceNotesTable: React.FC<ServiceNotesTableProps> = ({\n  columns,\n  data,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <Container>\n      <TableContainer {...getTableProps()}>\n        <TableHeadContainer>\n          {headerGroups.map(headerGroup => (\n            <TableColumnsTitleContainer {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <TableColumnTitle {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </TableColumnTitle>\n              ))}\n            </TableColumnsTitleContainer>\n          ))}\n        </TableHeadContainer>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <TableDataCell {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </TableDataCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ServiceNotesTable;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",["440"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { useLoading } from 'react-use-loading';\nimport { format } from 'date-fns';\nimport { useStopwatch } from 'react-timer-hook';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport {\n  Container,\n  Logo,\n  WelcomeText,\n  Username,\n  UserMenu,\n  LogoutButton,\n  LogoutButtonText,\n  ServiceForm,\n  StartServiceButton,\n  FinishServiceButton,\n  Cronometro,\n} from './styles';\n\nimport OutlineInput from '../OutlineInput';\nimport OutlineInputMask from '../OutlineInputMask';\nimport CustomRadioGroup from '../CustomRadioGroup';\nimport RadioOptions from '../CustomRadioGroup/RadioOptions';\nimport Loading from '../Loading';\nimport FindContractModal from '../FindContractModal';\n\nimport logoWhiteImg from '../../assets/logo-white.svg';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useCustomerService } from '../../hooks/customerService';\nimport { useToast } from '../../hooks/toast';\nimport { useAlert } from '../../hooks/alert';\n\nimport Address from '../../types/Address';\n\ninterface StartServiceFormData {\n  state: string;\n  contract: string;\n  cpf: string;\n}\n\nconst LeftBar: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const { addToast } = useToast();\n  const { customAlert } = useAlert();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    start: startTimer,\n    reset: resetTimer,\n    isRunning,\n    hours,\n    seconds,\n    minutes,\n  } = useStopwatch({\n    autoStart: false,\n  });\n\n  const {\n    startService,\n    customer,\n    finishService,\n    serviceStarted,\n    findAllContracts,\n    contracts,\n  } = useCustomerService();\n\n  const [openModalFindContract, setOpenModalFindContract] = useState(false);\n\n  const formRef = useRef<FormHandles>(null);\n\n  const toggleModalFindContract = useCallback(() => {\n    setOpenModalFindContract(!openModalFindContract);\n  }, [openModalFindContract]);\n\n  const handleSubmit = useCallback(\n    async (data: StartServiceFormData) => {\n      try {\n        start('Localizando cliente ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          contract: Yup.string().when('cpf', {\n            is: (val: string) => !val.length,\n            then: Yup.string().required('Conta contrato obrigatória'),\n            otherwise: Yup.string(),\n          }),\n          cpf: Yup.string(),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (data.contract && data.cpf) {\n          customAlert({\n            type: 'error',\n            title: 'Erro no formulário',\n            description:\n              'Utilize apenas um dos campos (Conta contrato ou CPF / CNPJ)',\n            confirmationText: 'OK',\n          });\n\n          return;\n        }\n\n        if (!data.contract && data.cpf) {\n          const unformattedCpf = data.cpf.replace(/\\D/gim, '');\n\n          const responseContracts = await findAllContracts({\n            stateCode: data.state[0],\n            cpf: unformattedCpf,\n          });\n\n          if (responseContracts.length > 1) {\n            toggleModalFindContract();\n            return;\n          }\n\n          await startService({\n            stateCode: data.state[0],\n            contract: responseContracts[0].contractAccount,\n          });\n\n          return;\n        }\n\n        await startService({\n          stateCode: data.state[0],\n          contract: data.contract,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        customAlert({\n          type: 'error',\n          title: 'Erro no atendimento',\n          description:\n            'Não foi possível localizar o cliente, cheque as informações',\n          confirmationText: 'OK',\n        });\n      } finally {\n        stop();\n      }\n    },\n    [\n      startService,\n      start,\n      stop,\n      customAlert,\n      findAllContracts,\n      toggleModalFindContract,\n    ],\n  );\n\n  const formattedTime = useMemo(() => {\n    return format(new Date(0, 0, 0, hours, minutes, seconds), 'mm:ss');\n  }, [hours, minutes, seconds]);\n\n  const handleFinishService = useCallback(async () => {\n    try {\n      start('Finalizando atendimento ...');\n\n      await finishService(formattedTime);\n    } catch {\n      addToast({\n        type: 'error',\n        title: 'Registro de logs',\n        description: 'Ocorreu um erro ao salvar o log do atendimento.',\n      });\n    } finally {\n      stop();\n    }\n  }, [finishService, formattedTime, addToast, start, stop]);\n\n  useEffect(() => {\n    if (serviceStarted && !isRunning) {\n      startTimer();\n    }\n\n    if (!serviceStarted) {\n      resetTimer();\n    }\n  }, [serviceStarted, startTimer, isRunning, resetTimer]);\n\n  return (\n    <Container>\n      <UserMenu>\n        <Logo src={logoWhiteImg} alt=\"Equatorial Energia\" />\n\n        <WelcomeText>\n          Bem vindo,\n          <Username>{user.name}</Username>\n        </WelcomeText>\n\n        <LogoutButton onClick={signOut}>\n          <FiPower />\n          <LogoutButtonText>Sair</LogoutButtonText>\n        </LogoutButton>\n      </UserMenu>\n\n      <ServiceForm>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{ state: '82' }}\n        >\n          <CustomRadioGroup fieldLabel=\"Estado\">\n            <RadioOptions\n              name=\"state\"\n              options={[\n                { id: 'radio1', value: '82', label: 'Alagoas' },\n                { id: 'radio2', value: '98', label: 'Maranhão' },\n                { id: 'radio3', value: '95', label: 'Pará' },\n                { id: 'radio4', value: '86', label: 'Piauí' },\n              ]}\n              disabled={serviceStarted}\n            />\n          </CustomRadioGroup>\n\n          <OutlineInput\n            name=\"contract\"\n            type=\"text\"\n            placeholder=\"Código único ou conta contrato\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          <OutlineInputMask\n            name=\"cpf\"\n            mask=\"999.999.999-99\"\n            type=\"text\"\n            placeholder=\"CPF ou CNPJ\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          {serviceStarted && customer ? (\n            <FinishServiceButton type=\"button\" onClick={handleFinishService}>\n              Encerrar atendimento\n            </FinishServiceButton>\n          ) : (\n            <StartServiceButton type=\"submit\">\n              Iniciar atendimento\n            </StartServiceButton>\n          )}\n\n          {serviceStarted && customer && (\n            <Cronometro>\n              <span>Tempo de atendimento:</span>\n              <h1>{formattedTime}</h1>\n            </Cronometro>\n          )}\n        </Form>\n      </ServiceForm>\n\n      {contracts && (\n        <FindContractModal\n          isOpen={openModalFindContract}\n          setIsOpen={toggleModalFindContract}\n        />\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Container>\n  );\n};\n\nexport default LeftBar;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx",["441","442"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx",[],{"ruleId":"443","replacedBy":"444"},{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","replacedBy":"450"},{"ruleId":"451","replacedBy":"452"},{"ruleId":"443","replacedBy":"453"},{"ruleId":"445","replacedBy":"454"},{"ruleId":"447","replacedBy":"455"},{"ruleId":"449","replacedBy":"456"},{"ruleId":"451","replacedBy":"457"},{"ruleId":"443","replacedBy":"458"},{"ruleId":"445","replacedBy":"459"},{"ruleId":"447","replacedBy":"460"},{"ruleId":"449","replacedBy":"461"},{"ruleId":"451","replacedBy":"462"},{"ruleId":"463","severity":1,"message":"464","line":36,"column":21,"nodeType":"465","messageId":"466","endLine":36,"endColumn":24,"suggestions":"467"},{"ruleId":"463","severity":1,"message":"464","line":39,"column":23,"nodeType":"465","messageId":"466","endLine":39,"endColumn":26,"suggestions":"468"},{"ruleId":"443","replacedBy":"469"},{"ruleId":"445","replacedBy":"470"},{"ruleId":"447","replacedBy":"471"},{"ruleId":"449","replacedBy":"472"},{"ruleId":"451","replacedBy":"473"},{"ruleId":"443","replacedBy":"474"},{"ruleId":"445","replacedBy":"475"},{"ruleId":"447","replacedBy":"476"},{"ruleId":"449","replacedBy":"477"},{"ruleId":"451","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":7,"column":8,"nodeType":"481","messageId":"482","endLine":7,"endColumn":14},{"ruleId":"479","severity":1,"message":"483","line":40,"column":9,"nodeType":"481","messageId":"482","endLine":40,"endColumn":37},{"ruleId":"479","severity":1,"message":"484","line":65,"column":9,"nodeType":"481","messageId":"482","endLine":65,"endColumn":31},{"ruleId":"485","severity":1,"message":"486","line":65,"column":34,"nodeType":"481","endLine":65,"endColumn":45},{"ruleId":"487","severity":2,"message":"488","line":65,"column":52,"nodeType":"489","messageId":"490","endLine":65,"endColumn":54},{"ruleId":"491","severity":1,"message":"492","line":98,"column":7,"nodeType":"493","messageId":"490","endLine":98,"endColumn":18},{"ruleId":"491","severity":1,"message":"492","line":99,"column":7,"nodeType":"493","messageId":"490","endLine":99,"endColumn":18},{"ruleId":"491","severity":1,"message":"492","line":100,"column":7,"nodeType":"493","messageId":"490","endLine":100,"endColumn":18},{"ruleId":"491","severity":1,"message":"492","line":101,"column":7,"nodeType":"493","messageId":"490","endLine":101,"endColumn":18},{"ruleId":"491","severity":1,"message":"492","line":102,"column":7,"nodeType":"493","messageId":"490","endLine":102,"endColumn":18},{"ruleId":"491","severity":1,"message":"492","line":127,"column":9,"nodeType":"493","messageId":"490","endLine":127,"endColumn":20},{"ruleId":"491","severity":1,"message":"492","line":211,"column":9,"nodeType":"493","messageId":"490","endLine":211,"endColumn":20},{"ruleId":"443","replacedBy":"494"},{"ruleId":"445","replacedBy":"495"},{"ruleId":"447","replacedBy":"496"},{"ruleId":"449","replacedBy":"497"},{"ruleId":"451","replacedBy":"498"},{"ruleId":"443","replacedBy":"499"},{"ruleId":"445","replacedBy":"500"},{"ruleId":"447","replacedBy":"501"},{"ruleId":"449","replacedBy":"502"},{"ruleId":"451","replacedBy":"503"},{"ruleId":"479","severity":1,"message":"504","line":18,"column":3,"nodeType":"481","messageId":"482","endLine":18,"endColumn":12},{"ruleId":"443","replacedBy":"505"},{"ruleId":"445","replacedBy":"506"},{"ruleId":"447","replacedBy":"507"},{"ruleId":"449","replacedBy":"508"},{"ruleId":"451","replacedBy":"509"},{"ruleId":"463","severity":1,"message":"464","line":37,"column":21,"nodeType":"465","messageId":"466","endLine":37,"endColumn":24,"suggestions":"510"},{"ruleId":"463","severity":1,"message":"464","line":40,"column":23,"nodeType":"465","messageId":"466","endLine":40,"endColumn":26,"suggestions":"511"},{"ruleId":"463","severity":1,"message":"464","line":7,"column":13,"nodeType":"465","messageId":"466","endLine":7,"endColumn":16,"suggestions":"512"},{"ruleId":"479","severity":1,"message":"513","line":66,"column":21,"nodeType":"481","messageId":"482","endLine":66,"endColumn":33},{"ruleId":"479","severity":1,"message":"514","line":1,"column":41,"nodeType":"481","messageId":"482","endLine":1,"endColumn":47},{"ruleId":"479","severity":1,"message":"515","line":8,"column":40,"nodeType":"481","messageId":"482","endLine":8,"endColumn":50},{"ruleId":"479","severity":1,"message":"516","line":8,"column":52,"nodeType":"481","messageId":"482","endLine":8,"endColumn":61},{"ruleId":"479","severity":1,"message":"517","line":1,"column":30,"nodeType":"481","messageId":"482","endLine":1,"endColumn":39},{"ruleId":"479","severity":1,"message":"518","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":28},{"ruleId":"479","severity":1,"message":"513","line":18,"column":21,"nodeType":"481","messageId":"482","endLine":18,"endColumn":33},{"ruleId":"443","replacedBy":"519"},{"ruleId":"445","replacedBy":"520"},{"ruleId":"447","replacedBy":"521"},{"ruleId":"449","replacedBy":"522"},{"ruleId":"451","replacedBy":"523"},{"ruleId":"463","severity":1,"message":"464","line":141,"column":20,"nodeType":"465","messageId":"466","endLine":141,"endColumn":23,"suggestions":"524"},{"ruleId":"479","severity":1,"message":"525","line":55,"column":27,"nodeType":"481","messageId":"482","endLine":55,"endColumn":28},{"ruleId":"479","severity":1,"message":"526","line":46,"column":8,"nodeType":"481","messageId":"482","endLine":46,"endColumn":15},{"ruleId":"479","severity":1,"message":"527","line":42,"column":20,"nodeType":"481","messageId":"482","endLine":42,"endColumn":25},{"ruleId":"479","severity":1,"message":"528","line":42,"column":27,"nodeType":"481","messageId":"482","endLine":42,"endColumn":32},"lines-around-directive",["529"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["529"],[],[],[],[],["529"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["530","531"],["532","533"],["529"],[],[],[],[],["529"],[],[],[],[],"@typescript-eslint/no-unused-vars","'Debits' is defined but never used.","Identifier","unusedVar","'ableForEmergencyReconnection' is assigned a value but never used.","'checkReconnectionValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","@typescript-eslint/no-empty-function","Unexpected empty arrow function.","ArrowFunctionExpression","unexpected","no-console","Unexpected console statement.","MemberExpression",["529"],[],[],[],[],["529"],[],[],[],[],"'setIsOpen' is defined but never used.",["529"],[],[],[],[],["534","535"],["536","537"],["538","539"],"'setQuestions' is assigned a value but never used.","'useRef' is defined but never used.","'OwnerLabel' is defined but never used.","'OwnerName' is defined but never used.","'useEffect' is defined but never used.","'useCustomerService' is defined but never used.",["529"],[],[],[],[],["540","541"],"'i' is defined but never used.","'Address' is defined but never used.","'index' is defined but never used.","'event' is defined but never used.","padding-line-between-statements",{"messageId":"542","fix":"543","desc":"544"},{"messageId":"545","fix":"546","desc":"547"},{"messageId":"542","fix":"548","desc":"544"},{"messageId":"545","fix":"549","desc":"547"},{"messageId":"542","fix":"550","desc":"544"},{"messageId":"545","fix":"551","desc":"547"},{"messageId":"542","fix":"552","desc":"544"},{"messageId":"545","fix":"553","desc":"547"},{"messageId":"542","fix":"554","desc":"544"},{"messageId":"545","fix":"555","desc":"547"},{"messageId":"542","fix":"556","desc":"544"},{"messageId":"545","fix":"557","desc":"547"},"suggestUnknown",{"range":"558","text":"559"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"558","text":"560"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"561","text":"559"},{"range":"561","text":"560"},{"range":"562","text":"559"},{"range":"562","text":"560"},{"range":"563","text":"559"},{"range":"563","text":"560"},{"range":"564","text":"559"},{"range":"564","text":"560"},{"range":"565","text":"559"},{"range":"565","text":"560"},[963,966],"unknown","never",[1050,1053],[975,978],[1062,1065],[147,150],[3532,3535]]