[{"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\auth.tsx":"1","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerReconnectionService.tsx":"2","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts":"3","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\index.tsx":"4","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\index.tsx":"5","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Button\\styles.ts":"6","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\index.tsx":"7","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Tooltip\\index.tsx":"8","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx":"9","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\index.tsx":"10","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\styles.ts":"11","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\styles.ts":"12","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\index.tsx":"13","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\masks.ts":"14","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx":"15","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\yaloApi.ts":"16","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\styles.ts":"17","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx":"18","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx":"19","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\styles.ts":"20","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getUnformattedPhone.ts":"21","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts":"22","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\index.tsx":"23","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\styles.ts":"24","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx":"25","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\index.tsx":"26","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\styles.ts":"27","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx":"28","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\styles.ts":"29","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx":"30","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\hasSocialTariff.ts":"31","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\styles.ts":"32","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\index.tsx":"33","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts":"34","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx":"35","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\index.tsx":"36","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\styles.ts":"37","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\index.tsx":"38","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts":"39","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts":"40","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\index.tsx":"41","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\index.tsx":"42","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\index.tsx":"43","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\routes\\index.tsx":"44","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\styles.ts":"45","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\styles.ts":"46","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts":"47"},{"size":2120,"mtime":1619965453895,"results":"48","hashOfConfig":"49"},{"size":23738,"mtime":1620164158806,"results":"50","hashOfConfig":"49"},{"size":7797,"mtime":1620149455515,"results":"51","hashOfConfig":"49"},{"size":3057,"mtime":1619965453903,"results":"52","hashOfConfig":"49"},{"size":1557,"mtime":1619965453855,"results":"53","hashOfConfig":"49"},{"size":377,"mtime":1619965453848,"results":"54","hashOfConfig":"49"},{"size":419,"mtime":1620149455479,"results":"55","hashOfConfig":"49"},{"size":343,"mtime":1620149455497,"results":"56","hashOfConfig":"49"},{"size":8865,"mtime":1619965453871,"results":"57","hashOfConfig":"49"},{"size":3558,"mtime":1620149455486,"results":"58","hashOfConfig":"49"},{"size":1222,"mtime":1620149455487,"results":"59","hashOfConfig":"49"},{"size":1200,"mtime":1620149455493,"results":"60","hashOfConfig":"49"},{"size":2030,"mtime":1619968116822,"results":"61","hashOfConfig":"49"},{"size":979,"mtime":1619968192608,"results":"62","hashOfConfig":"49"},{"size":7505,"mtime":1619968584845,"results":"63","hashOfConfig":"49"},{"size":176,"mtime":1619965453908,"results":"64","hashOfConfig":"49"},{"size":135,"mtime":1619965453874,"results":"65","hashOfConfig":"49"},{"size":1765,"mtime":1619965453849,"results":"66","hashOfConfig":"49"},{"size":893,"mtime":1619965453874,"results":"67","hashOfConfig":"49"},{"size":1336,"mtime":1619965453871,"results":"68","hashOfConfig":"49"},{"size":262,"mtime":1620149455516,"results":"69","hashOfConfig":"49"},{"size":275,"mtime":1620149455495,"results":"70","hashOfConfig":"49"},{"size":353,"mtime":1620149455493,"results":"71","hashOfConfig":"49"},{"size":629,"mtime":1620149455494,"results":"72","hashOfConfig":"49"},{"size":1527,"mtime":1620149455501,"results":"73","hashOfConfig":"49"},{"size":785,"mtime":1620149455496,"results":"74","hashOfConfig":"49"},{"size":1273,"mtime":1620149455465,"results":"75","hashOfConfig":"49"},{"size":1447,"mtime":1620149455471,"results":"76","hashOfConfig":"49"},{"size":422,"mtime":1620149455479,"results":"77","hashOfConfig":"49"},{"size":3318,"mtime":1620149455475,"results":"78","hashOfConfig":"49"},{"size":463,"mtime":1620149455517,"results":"79","hashOfConfig":"49"},{"size":852,"mtime":1620149455490,"results":"80","hashOfConfig":"49"},{"size":479,"mtime":1620149455504,"results":"81","hashOfConfig":"49"},{"size":2199,"mtime":1620149455516,"results":"82","hashOfConfig":"49"},{"size":2390,"mtime":1620149455459,"results":"83","hashOfConfig":"49"},{"size":1180,"mtime":1620149455495,"results":"84","hashOfConfig":"49"},{"size":1170,"mtime":1620149455496,"results":"85","hashOfConfig":"49"},{"size":414,"mtime":1620149455470,"results":"86","hashOfConfig":"49"},{"size":572,"mtime":1620149455471,"results":"87","hashOfConfig":"49"},{"size":1239,"mtime":1620149455463,"results":"88","hashOfConfig":"49"},{"size":1609,"mtime":1620149455466,"results":"89","hashOfConfig":"49"},{"size":2132,"mtime":1620149455463,"results":"90","hashOfConfig":"49"},{"size":3662,"mtime":1620162923796,"results":"91","hashOfConfig":"49"},{"size":379,"mtime":1620149455508,"results":"92","hashOfConfig":"49"},{"size":1448,"mtime":1620149455484,"results":"93","hashOfConfig":"49"},{"size":2490,"mtime":1620149455489,"results":"94","hashOfConfig":"49"},{"size":1138,"mtime":1620149455466,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"114pnsy",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\auth.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\powerReconnectionService.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\extractResponseData.ts",["195","196","197","198","199","200","201"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\pages\\SignIn\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Button\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Tooltip\\index.tsx",[],["202","203","204","205","206"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\index.tsx",["207"],"import React, { useState } from 'react';\n\nimport { BsLightningFill } from 'react-icons/bs';\nimport { FaPlug, FaDollarSign, FaDivide, FaCalendarAlt } from 'react-icons/fa';\nimport { IoDocumentText } from 'react-icons/io5';\nimport { IoMdMail } from 'react-icons/io';\nimport { MdReceipt } from 'react-icons/md';\nimport { useLoading } from 'react-use-loading';\nimport Swal from 'sweetalert2';\n\nimport {\n  Container,\n  Content,\n  MenuItem,\n  MenuItemButton,\n  MenuItemText,\n} from './styles';\n\nimport PowerOutageFlow from '../../../Services/PowerOutageFlow';\nimport DebitsConsultationModal from '../../../Services/DebitsConsultationModal';\nimport InstallmentPaymentModal from '../../../Services/InstallmentPaymentModal';\nimport EmailInvoice from '../../../Services/EmailInvoice';\nimport ExpirationChange from '../../../Services/DueDateChange';\nimport RequestList from '../../../Services/RequestList';\n\nimport Loading from '../../../Loading';\n\nimport { useCustomerService } from '../../../../hooks/customerService';\nimport { usePowerReconnectionService } from '../../../../hooks/powerReconnectionService';\nimport { usePowerOutageService } from '../../../../hooks/powerOutageService';\nimport { useChangeDueDateService } from '../../../../hooks/changeDueDateService';\n\nconst QuickMenu: React.FC = () => {\n  const [outagePowerOpen, setOutagePowerOpen] = useState(false);\n  const [debitsConsultationOpen, setDebitsConsultationOpen] = useState(false);\n  const [installmentPaymentOpen, setInstallmentPaymentOpen] = useState(false);\n  const [emailInvoiceOpen, setEmailInvoiceOpen] = useState(false);\n  const [changeDueDateOpen, setChangeDueDateOpen] = useState(false);\n  const [requestListOpen, setRequestListOpen] = useState(false);\n\n  const {\n    serviceNotes,\n    debits,\n    customer,\n    installation,\n    operatingCompany,\n    protocol,\n  } = useCustomerService();\n  const { ableToPowerOutage } = usePowerOutageService();\n  const {\n    ableToReconnection,\n    prepareForPowerReconnection,\n  } = usePowerReconnectionService();\n\n  const { ableToChangeDueDate } = useChangeDueDateService();\n\n  const [\n    { isLoading, message },\n    { start: startLoading, stop: stopLoading },\n  ] = useLoading();\n\n  async function toggleOutagePower(): Promise<void> {\n    if (\n      await ableToPowerOutage({\n        contractAccount: customer.contractAccount,\n        installation,\n        operatingCompany,\n        protocol: protocol || '00',\n        reference: customer.address.referencePoint\n          ? customer.address.referencePoint\n          : '',\n        serviceNotes,\n      })\n    ) {\n      setOutagePowerOpen(!outagePowerOpen);\n    }\n  }\n\n  async function togglePowerReconnection(): Promise<void> {\n    const responseAbleToReconnection = ableToReconnection({\n      contractAccount: customer.contractAccount,\n      serviceNotes,\n      installation,\n    });\n\n    if (!responseAbleToReconnection.ok) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Religação',\n        html: `<p>${\n          responseAbleToReconnection.error ||\n          'O cliente não está habilitado para gerar uma religação'\n        }</p>`,\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } else {\n      await prepareForPowerReconnection({\n        attendanceData: customer,\n        installation,\n        debits,\n        operatingCompany,\n        protocol: protocol || '00',\n      });\n    }\n  }\n\n  function toggleDebitsConsultation(): void {\n    if (\n      debits.installmentDebits.totalAmountInstallmentDebits === 0 &&\n      debits.invoiceDebits.totalAmountInvoiceDebits === 0\n    ) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Consulta de débitos',\n        html: '<p>O cliente não possui débitos</p>',\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } else {\n      setDebitsConsultationOpen(!debitsConsultationOpen);\n    }\n  }\n\n  function toggleInstallmentPayment(): void {\n    if (!debits.installmentDebits.installmentDebitDetails.length) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Parcelamento',\n        html: '<p>O cliente não possui negociações de parcelamento</p>',\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } else {\n      setInstallmentPaymentOpen(!installmentPaymentOpen);\n    }\n  }\n\n  function toggleEmailInvoice(): void {\n    if (!customer.contacts.email) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Fatura por e-mail',\n        html: '<p>O cliente não possui um e-mail cadastrado</p>',\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } else {\n      setEmailInvoiceOpen(!emailInvoiceOpen);\n    }\n  }\n\n  async function toggleChangeDueDate(): Promise<void> {\n    if (!changeDueDateOpen) {\n      startLoading('Verificando datas disponíveis ...');\n\n      const responseAbleToChangeDueDate = await ableToChangeDueDate({\n        contractAccount: customer.contractAccount,\n        stateCode: operatingCompany,\n      });\n\n      stopLoading();\n\n      if (!responseAbleToChangeDueDate.ok) {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Alteração de Data Certa',\n          html: `<p>${\n            responseAbleToChangeDueDate.error ||\n            'O cliente não está habilitado para alteração de Data Certa'\n          }</p>`,\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      } else {\n        setChangeDueDateOpen(!changeDueDateOpen);\n      }\n    } else {\n      setChangeDueDateOpen(!changeDueDateOpen);\n    }\n  }\n\n  function toggleRequestList(): void {\n    if (\n      !serviceNotes.openServiceNotes.length &&\n      !serviceNotes.closedServiceNotes.length\n    ) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Acompanhamento de protocolos',\n        html: '<p>O cliente não possui notas para serem exibidas.</p>',\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } else {\n      setRequestListOpen(!requestListOpen);\n    }\n  }\n\n  return (\n    <Container>\n      <h3>Menu rápido</h3>\n\n      <Content>\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={toggleOutagePower}>\n            <BsLightningFill size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Falta de energia</MenuItemText>\n        </MenuItem>\n\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={togglePowerReconnection}>\n            <FaPlug size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Religação</MenuItemText>\n        </MenuItem>\n\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={toggleDebitsConsultation}>\n            <IoDocumentText size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Consulta de débitos</MenuItemText>\n        </MenuItem>\n\n        {/* <MenuItem>\n          <MenuItemButton type=\"button\">\n            <FaDollarSign size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Baixa Renda</MenuItemText>\n        </MenuItem> */}\n\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={toggleInstallmentPayment}>\n            <FaDivide size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Entrada de parcelamento</MenuItemText>\n        </MenuItem>\n\n        <MenuItem\n          disabled={!(operatingCompany === '98' || operatingCompany === '95')}\n        >\n          <MenuItemButton type=\"button\" onClick={toggleEmailInvoice}>\n            <IoMdMail size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Fatura por e-mail</MenuItemText>\n        </MenuItem>\n\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={toggleChangeDueDate}>\n            <FaCalendarAlt size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Data certa</MenuItemText>\n        </MenuItem>\n\n        <MenuItem>\n          <MenuItemButton type=\"button\" onClick={toggleRequestList}>\n            <MdReceipt size={20} />\n          </MenuItemButton>\n\n          <MenuItemText>Acompanhamento de protocolos</MenuItemText>\n        </MenuItem>\n      </Content>\n\n      <PowerOutageFlow\n        modalOpen={outagePowerOpen}\n        toggleModal={toggleOutagePower}\n      />\n\n      <DebitsConsultationModal\n        isOpen={debitsConsultationOpen}\n        setIsOpen={toggleDebitsConsultation}\n      />\n      <InstallmentPaymentModal\n        isOpen={installmentPaymentOpen}\n        setIsOpen={toggleInstallmentPayment}\n      />\n\n      <EmailInvoice isOpen={emailInvoiceOpen} setIsOpen={toggleEmailInvoice} />\n\n      <ExpirationChange\n        isOpen={changeDueDateOpen}\n        setIsOpen={toggleChangeDueDate}\n      />\n\n      <RequestList isOpen={requestListOpen} setIsOpen={toggleRequestList} />\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stopLoading} />\n      )}\n    </Container>\n  );\n};\n\nexport default QuickMenu;\n",["208","209","210","211","212"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\DueDateChange\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\ServiceNotesTable\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\masks.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\LeftBar\\index.tsx",["213","214"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FiPower } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { format } from 'date-fns';\nimport * as Yup from 'yup';\nimport { useLoading } from 'react-use-loading';\nimport { useStopwatch } from 'react-timer-hook';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport {\n  Container,\n  Logo,\n  WelcomeText,\n  Username,\n  UserMenu,\n  LogoutButton,\n  LogoutButtonText,\n  ServiceForm,\n  StartServiceButton,\n  FinishServiceButton,\n  Cronometro,\n} from './styles';\n\nimport OutlineInput from '../OutlineInput';\nimport OutlineInputRegex from '../OutlineInputRegex';\nimport OutlineInputMask from '../OutlineInputMask';\nimport CustomRadioGroup from '../CustomRadioGroup';\nimport RadioOptions from '../CustomRadioGroup/RadioOptions';\nimport Loading from '../Loading';\nimport FindContractModal from '../FindContractModal';\n\nimport logoWhiteImg from '../../assets/logo-white.svg';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useCustomerService } from '../../hooks/customerService';\nimport { useToast } from '../../hooks/toast';\nimport { useAlert } from '../../hooks/alert';\n\ninterface StartServiceFormData {\n  state: string;\n  contract: string;\n  cpf: string;\n}\n\nconst LeftBar: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const { addToast } = useToast();\n  const { customAlert } = useAlert();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    start: startTimer,\n    reset: resetTimer,\n    isRunning,\n    hours,\n    seconds,\n    minutes,\n  } = useStopwatch({\n    autoStart: false,\n  });\n\n  const {\n    startService,\n    customer,\n    finishService,\n    serviceStarted,\n    findAllContracts,\n    contracts,\n  } = useCustomerService();\n\n  const [openModalFindContract, setOpenModalFindContract] = useState(false);\n\n  const formRef = useRef<FormHandles>(null);\n\n  const toggleModalFindContract = useCallback(() => {\n    setOpenModalFindContract(!openModalFindContract);\n  }, [openModalFindContract]);\n\n  const handleSubmit = useCallback(\n    async (data: StartServiceFormData) => {\n      try {\n        start('Localizando cliente ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          contract: Yup.string().when('cpf', {\n            is: (val: string) => !val.length,\n            then: Yup.string().required('Conta contrato obrigatória'),\n            otherwise: Yup.string(),\n          }),\n          cpf: Yup.string(),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (data.contract && data.cpf) {\n          customAlert({\n            type: 'error',\n            title: 'Erro no formulário',\n            description:\n              'Utilize apenas um dos campos (Conta contrato ou CPF / CNPJ)',\n            confirmationText: 'OK',\n          });\n\n          return;\n        }\n\n        if (!data.contract && data.cpf) {\n          const unformattedCpf = data.cpf.replace(/\\D/gim, '');\n\n          const responseContracts = await findAllContracts({\n            stateCode: data.state[0],\n            cpf: unformattedCpf,\n          });\n\n          if (responseContracts.length > 1) {\n            toggleModalFindContract();\n            return;\n          }\n\n          await startService({\n            stateCode: data.state[0],\n            contractAccount: responseContracts[0].contractAccount,\n          });\n\n          return;\n        }\n\n        const unformattedContract = data.contract.replace(/\\D/gim, '');\n\n        await startService({\n          stateCode: data.state[0],\n          contractAccount: unformattedContract,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        customAlert({\n          type: 'error',\n          title: 'Erro no atendimento',\n          description:\n            'Não foi possível localizar o cliente, cheque as informações',\n          confirmationText: 'OK',\n        });\n      } finally {\n        stop();\n      }\n    },\n    [\n      startService,\n      start,\n      stop,\n      customAlert,\n      findAllContracts,\n      toggleModalFindContract,\n    ],\n  );\n\n  const formattedTime = useMemo(() => {\n    return format(new Date(0, 0, 0, hours, minutes, seconds), 'mm:ss');\n  }, [hours, minutes, seconds]);\n\n  const handleFinishService = useCallback(async () => {\n    try {\n      start('Finalizando atendimento ...');\n\n      await finishService(formattedTime);\n    } catch {\n      addToast({\n        type: 'error',\n        title: 'Registro de logs',\n        description: 'Ocorreu um erro ao salvar o log do atendimento.',\n      });\n    } finally {\n      stop();\n    }\n  }, [finishService, formattedTime, addToast, start, stop]);\n\n  useEffect(() => {\n    if (serviceStarted && !isRunning) {\n      startTimer();\n    }\n\n    if (!serviceStarted) {\n      resetTimer();\n    }\n  }, [serviceStarted, startTimer, isRunning, resetTimer]);\n\n  return (\n    <Container>\n      <UserMenu>\n        <Logo src={logoWhiteImg} alt=\"Equatorial Energia\" />\n\n        <WelcomeText>\n          Bem vindo,\n          <Username>{user.name}</Username>\n        </WelcomeText>\n\n        <LogoutButton onClick={signOut}>\n          <FiPower />\n          <LogoutButtonText>Sair</LogoutButtonText>\n        </LogoutButton>\n      </UserMenu>\n\n      <ServiceForm>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{ state: '82' }}\n        >\n          <CustomRadioGroup fieldLabel=\"Estado\">\n            <RadioOptions\n              name=\"state\"\n              options={[\n                { id: 'radio1', value: '82', label: 'Alagoas' },\n                { id: 'radio2', value: '98', label: 'Maranhão' },\n                { id: 'radio3', value: '95', label: 'Pará' },\n                { id: 'radio4', value: '86', label: 'Piauí' },\n              ]}\n              disabled={serviceStarted}\n            />\n          </CustomRadioGroup>\n\n          <OutlineInputRegex\n            name=\"contract\"\n            type=\"text\"\n            mask=\"contractAccount\"\n            placeholder=\"Código único ou conta contrato\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          <OutlineInputRegex\n            name=\"cpf\"\n            type=\"text\"\n            mask=\"cpfCnpj\"\n            placeholder=\"CPF ou CNPJ\"\n            autoComplete=\"off\"\n            disabled={serviceStarted}\n          />\n\n          {serviceStarted && customer ? (\n            <FinishServiceButton type=\"button\" onClick={handleFinishService}>\n              Encerrar atendimento\n            </FinishServiceButton>\n          ) : (\n            <StartServiceButton type=\"submit\">\n              Iniciar atendimento\n            </StartServiceButton>\n          )}\n\n          {serviceStarted && customer && (\n            <Cronometro>\n              <span>Tempo de atendimento:</span>\n              <h1>{formattedTime}</h1>\n            </Cronometro>\n          )}\n        </Form>\n      </ServiceForm>\n\n      {contracts && (\n        <FindContractModal\n          isOpen={openModalFindContract}\n          setIsOpen={toggleModalFindContract}\n        />\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Container>\n  );\n};\n\nexport default LeftBar;\n","C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\services\\yaloApi.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\CustomRadioGroup\\RadioOptions\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Modal\\index.tsx",["215"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\QuickMenu\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getUnformattedPhone.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\index.tsx",[],["216","217","218","219","220"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\StatusIndicator\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\hooks\\debitsConsultation.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Input\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\ServicesContent\\ClientData\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\hasSocialTariff.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\PowerOutageFlow\\StepModal\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\utils\\getInstallationSubclassName.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\AlertModal\\index.tsx",["221"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\ToastContainer\\Toast\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Main\\Header\\TagInfo\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\index.tsx",["222","223"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\FindContractModal\\ContractsTable\\index.tsx",["224","225"],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\RequestList\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\routes\\index.tsx",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\OutlineInputRegex\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\Services\\InstallmentPaymentModal\\styles.ts",[],"C:\\Users\\tnep00114\\Desktop\\eqtl-tela-agil\\src\\components\\InputMask\\styles.ts",[],{"ruleId":"226","severity":1,"message":"227","line":87,"column":3,"nodeType":"228","messageId":"229","endLine":87,"endColumn":28},{"ruleId":"230","severity":1,"message":"231","line":87,"column":25,"nodeType":"232","messageId":"233","endLine":87,"endColumn":28,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"231","line":152,"column":36,"nodeType":"232","messageId":"233","endLine":152,"endColumn":39,"suggestions":"235"},{"ruleId":"230","severity":1,"message":"231","line":156,"column":13,"nodeType":"232","messageId":"233","endLine":156,"endColumn":16,"suggestions":"236"},{"ruleId":"230","severity":1,"message":"231","line":168,"column":13,"nodeType":"232","messageId":"233","endLine":168,"endColumn":16,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"231","line":204,"column":12,"nodeType":"232","messageId":"233","endLine":204,"endColumn":15,"suggestions":"238"},{"ruleId":"230","severity":1,"message":"231","line":223,"column":12,"nodeType":"232","messageId":"233","endLine":223,"endColumn":15,"suggestions":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":4,"column":18,"nodeType":"228","messageId":"252","endLine":4,"endColumn":30},{"ruleId":"240","replacedBy":"253"},{"ruleId":"242","replacedBy":"254"},{"ruleId":"244","replacedBy":"255"},{"ruleId":"246","replacedBy":"256"},{"ruleId":"248","replacedBy":"257"},{"ruleId":"250","severity":1,"message":"258","line":32,"column":8,"nodeType":"228","messageId":"252","endLine":32,"endColumn":20},{"ruleId":"250","severity":1,"message":"259","line":34,"column":8,"nodeType":"228","messageId":"252","endLine":34,"endColumn":24},{"ruleId":"230","severity":1,"message":"231","line":7,"column":13,"nodeType":"232","messageId":"233","endLine":7,"endColumn":16,"suggestions":"260"},{"ruleId":"240","replacedBy":"261"},{"ruleId":"242","replacedBy":"262"},{"ruleId":"244","replacedBy":"263"},{"ruleId":"246","replacedBy":"264"},{"ruleId":"248","replacedBy":"265"},{"ruleId":"250","severity":1,"message":"266","line":1,"column":41,"nodeType":"228","messageId":"252","endLine":1,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":36,"column":21,"nodeType":"232","messageId":"233","endLine":36,"endColumn":24,"suggestions":"267"},{"ruleId":"230","severity":1,"message":"231","line":39,"column":23,"nodeType":"232","messageId":"233","endLine":39,"endColumn":26,"suggestions":"268"},{"ruleId":"250","severity":1,"message":"269","line":43,"column":20,"nodeType":"228","messageId":"252","endLine":43,"endColumn":25},{"ruleId":"250","severity":1,"message":"270","line":43,"column":27,"nodeType":"228","messageId":"252","endLine":43,"endColumn":32},"@typescript-eslint/explicit-module-boundary-types","Argument 'responseInstallation' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["271","272"],["273","274"],["275","276"],["277","278"],["279","280"],["281","282"],"lines-around-directive",["283"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'FaDollarSign' is defined but never used.","unusedVar",["283"],[],[],[],[],"'OutlineInput' is defined but never used.","'OutlineInputMask' is defined but never used.",["284","285"],["283"],[],[],[],[],"'useRef' is defined but never used.",["286","287"],["288","289"],"'index' is defined but never used.","'event' is defined but never used.",{"messageId":"290","fix":"291","desc":"292"},{"messageId":"293","fix":"294","desc":"295"},{"messageId":"290","fix":"296","desc":"292"},{"messageId":"293","fix":"297","desc":"295"},{"messageId":"290","fix":"298","desc":"292"},{"messageId":"293","fix":"299","desc":"295"},{"messageId":"290","fix":"300","desc":"292"},{"messageId":"293","fix":"301","desc":"295"},{"messageId":"290","fix":"302","desc":"292"},{"messageId":"293","fix":"303","desc":"295"},{"messageId":"290","fix":"304","desc":"292"},{"messageId":"293","fix":"305","desc":"295"},"padding-line-between-statements",{"messageId":"290","fix":"306","desc":"292"},{"messageId":"293","fix":"307","desc":"295"},{"messageId":"290","fix":"308","desc":"292"},{"messageId":"293","fix":"309","desc":"295"},{"messageId":"290","fix":"310","desc":"292"},{"messageId":"293","fix":"311","desc":"295"},"suggestUnknown",{"range":"312","text":"313"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"312","text":"314"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"315","text":"313"},{"range":"315","text":"314"},{"range":"316","text":"313"},{"range":"316","text":"314"},{"range":"317","text":"313"},{"range":"317","text":"314"},{"range":"318","text":"313"},{"range":"318","text":"314"},{"range":"319","text":"313"},{"range":"319","text":"314"},{"range":"320","text":"313"},{"range":"320","text":"314"},{"range":"321","text":"313"},{"range":"321","text":"314"},{"range":"322","text":"313"},{"range":"322","text":"314"},[2760,2763],"unknown","never",[4379,4382],[4571,4574],[4980,4983],[6014,6017],[6639,6642],[147,150],[963,966],[1050,1053]]