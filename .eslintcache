[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/index.tsx":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/Alert/styles.ts":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/types/Debits.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/Alert/index.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/styles.ts":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/StepModal/styles.ts":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/StepModal/index.tsx":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"71","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/useWhatsappSending.tsx":"72","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"73","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"74","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx":"75","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"76"},{"size":352,"mtime":1613613794841,"results":"77","hashOfConfig":"78"},{"size":379,"mtime":1613613794849,"results":"79","hashOfConfig":"78"},{"size":1483,"mtime":1613613794845,"results":"80","hashOfConfig":"78"},{"size":802,"mtime":1613613794849,"results":"81","hashOfConfig":"78"},{"size":678,"mtime":1613613794849,"results":"82","hashOfConfig":"78"},{"size":350,"mtime":1613613794849,"results":"83","hashOfConfig":"78"},{"size":267,"mtime":1613613794849,"results":"84","hashOfConfig":"78"},{"size":785,"mtime":1613613794845,"results":"85","hashOfConfig":"78"},{"size":316,"mtime":1613613794845,"results":"86","hashOfConfig":"78"},{"size":4346,"mtime":1613613794845,"results":"87","hashOfConfig":"78"},{"size":2033,"mtime":1613618838139,"results":"88","hashOfConfig":"78"},{"size":234,"mtime":1613613794845,"results":"89","hashOfConfig":"78"},{"size":1350,"mtime":1613619035418,"results":"90","hashOfConfig":"78"},{"size":1609,"mtime":1613613794845,"results":"91","hashOfConfig":"78"},{"size":80,"mtime":1613613794845,"results":"92","hashOfConfig":"78"},{"size":1170,"mtime":1613655344461,"results":"93","hashOfConfig":"78"},{"size":414,"mtime":1613613794845,"results":"94","hashOfConfig":"78"},{"size":326,"mtime":1613613794845,"results":"95","hashOfConfig":"78"},{"size":3318,"mtime":1613613794845,"results":"96","hashOfConfig":"78"},{"size":572,"mtime":1613613794845,"results":"97","hashOfConfig":"78"},{"size":549,"mtime":1613613794845,"results":"98","hashOfConfig":"78"},{"size":5984,"mtime":1613613794849,"results":"99","hashOfConfig":"78"},{"size":524,"mtime":1613421219253,"results":"100","hashOfConfig":"78"},{"size":4808,"mtime":1613660593404,"results":"101","hashOfConfig":"78"},{"size":3039,"mtime":1613613794849,"results":"102","hashOfConfig":"78"},{"size":1557,"mtime":1613613794845,"results":"103","hashOfConfig":"78"},{"size":296,"mtime":1613613794845,"results":"104","hashOfConfig":"78"},{"size":1349,"mtime":1613655425609,"results":"105","hashOfConfig":"78"},{"size":3351,"mtime":1614006137591,"results":"106","hashOfConfig":"78"},{"size":771,"mtime":1613617751355,"results":"107","hashOfConfig":"78"},{"size":1200,"mtime":1613618920879,"results":"108","hashOfConfig":"78"},{"size":534,"mtime":1613613794849,"results":"109","hashOfConfig":"78"},{"size":2120,"mtime":1613613794845,"results":"110","hashOfConfig":"78"},{"size":1732,"mtime":1613613794849,"results":"111","hashOfConfig":"78"},{"size":377,"mtime":1613613794845,"results":"112","hashOfConfig":"78"},{"size":1180,"mtime":1613613794845,"results":"113","hashOfConfig":"78"},{"size":424,"mtime":1613613794845,"results":"114","hashOfConfig":"78"},{"size":482,"mtime":1613613794845,"results":"115","hashOfConfig":"78"},{"size":1115,"mtime":1613613794845,"results":"116","hashOfConfig":"78"},{"size":1273,"mtime":1613613794845,"results":"117","hashOfConfig":"78"},{"size":366,"mtime":1613613794845,"results":"118","hashOfConfig":"78"},{"size":1170,"mtime":1613613794845,"results":"119","hashOfConfig":"78"},{"size":343,"mtime":1613613794845,"results":"120","hashOfConfig":"78"},{"size":266,"mtime":1613617931318,"results":"121","hashOfConfig":"78"},{"size":267,"mtime":1613613794845,"results":"122","hashOfConfig":"78"},{"size":671,"mtime":1613677943019,"results":"123","hashOfConfig":"78"},{"size":758,"mtime":1613613794849,"results":"124","hashOfConfig":"78"},{"size":292,"mtime":1613613794849,"results":"125","hashOfConfig":"78"},{"size":1558,"mtime":1613613794845,"results":"126","hashOfConfig":"78"},{"size":135,"mtime":1613613794845,"results":"127","hashOfConfig":"78"},{"size":520,"mtime":1613617589120,"results":"128","hashOfConfig":"78"},{"size":2199,"mtime":1613613794849,"results":"129","hashOfConfig":"78"},{"size":1460,"mtime":1613613794845,"results":"130","hashOfConfig":"78"},{"size":668,"mtime":1613613794845,"results":"131","hashOfConfig":"78"},{"size":561,"mtime":1613613794845,"results":"132","hashOfConfig":"78"},{"size":1715,"mtime":1613613794845,"results":"133","hashOfConfig":"78"},{"size":2093,"mtime":1613678275915,"results":"134","hashOfConfig":"78"},{"size":162,"mtime":1613613794845,"results":"135","hashOfConfig":"78"},{"size":743,"mtime":1613613794845,"results":"136","hashOfConfig":"78"},{"size":960,"mtime":1613613794845,"results":"137","hashOfConfig":"78"},{"size":479,"mtime":1613613794845,"results":"138","hashOfConfig":"78"},{"size":1986,"mtime":1613613794845,"results":"139","hashOfConfig":"78"},{"size":1204,"mtime":1613613794845,"results":"140","hashOfConfig":"78"},{"size":1080,"mtime":1613613794845,"results":"141","hashOfConfig":"78"},{"size":6841,"mtime":1614001494703,"results":"142","hashOfConfig":"78"},{"size":1818,"mtime":1613678410307,"results":"143","hashOfConfig":"78"},{"size":1609,"mtime":1613613794845,"results":"144","hashOfConfig":"78"},{"size":1138,"mtime":1614003006538,"results":"145","hashOfConfig":"78"},{"size":266,"mtime":1613657654516,"results":"146","hashOfConfig":"78"},{"size":1584,"mtime":1613664160529,"results":"147","hashOfConfig":"78"},{"size":262,"mtime":1613677469794,"results":"148","hashOfConfig":"78"},{"size":7004,"mtime":1613747224228,"results":"149","hashOfConfig":"78"},{"size":5070,"mtime":1614019409703,"results":"150","hashOfConfig":"78"},{"size":2083,"mtime":1614004175543,"results":"151","hashOfConfig":"78"},{"size":1671,"mtime":1614020779621,"results":"152","hashOfConfig":"78"},{"size":751,"mtime":1614007647837,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"pcgzdq",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"162"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"162"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"156"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"162"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"216"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"159"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/App.tsx",[],["327","328","329","330","331"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],["332","333","334","335","336"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],["337","338","339","340","341"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],["342","343","344","345","346"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",["347","348"],"import React, { useEffect } from 'react';\n\nimport { useLoading } from 'react-use-loading';\nimport { Container, WaitingForService } from './styles';\n\nimport { useCustomerService } from '../../hooks/customerService';\n\nimport LeftBar from '../../components/LeftBar';\nimport Main from '../../components/Main';\n\nconst Dashboard: React.FC = () => {\n  const { customer, serviceStarted } = useCustomerService();\n\n  return (\n    <Container>\n      <LeftBar />\n\n      {serviceStarted && customer ? (\n        <Main />\n      ) : (\n        <WaitingForService>\n          <h2>Aguardando atendimento</h2>\n        </WaitingForService>\n      )}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx",["349","350"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactInputMask, { Props } from 'react-input-mask';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends Props {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst OutlineInputMask: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value);\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isFocused={isFocused} isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n\n      <ReactInputMask\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#ff5353\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default OutlineInputMask;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],["351","352","353","354","355"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/Alert/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["356","357","358","359"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount: responseCustomer.contaContrato,\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    customer.contractAccount = responseCustomer.contaContrato.toString();\n\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: debit.valorFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: debitosFatura.valorTotalDebitoFatura,\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits:\n        debitosParcelamento.valorTotalDebitoParcelamento,\n    },\n  };\n\n  return debits;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n\n  return {\n    customer,\n    installation,\n    debits,\n  };\n}\n\nexport default extractResponseData;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/types/Debits.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["360"],"import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { string } from 'yup/lib/locale';\nimport customerDataApi from '../services/eqtlBarApi';\n\nimport { useToast } from './toast';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits from '../types/Debits';\n\nimport extractResponseData from '../utils/extractResponseData';\n\ninterface CustomerServiceState {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n}\n\ninterface GetCustomerData {\n  stateCode: string;\n  contract?: string;\n  cpf?: string;\n}\n\ninterface CustomerServiceContextData {\n  operatingCompany: string;\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceStarted: boolean;\n  getCustomer(customerData: GetCustomerData): Promise<void>;\n  startService({ stateCode, contract, cpf }: GetCustomerData): Promise<void>;\n  finishService(): void;\n}\n\nconst CustomerServiceContext = createContext<CustomerServiceContextData>(\n  {} as CustomerServiceContextData,\n);\n\nconst CustomerServiceProvider: React.FC = ({ children }) => {\n  const { addToast } = useToast();\n\n  const [serviceStarted, setServiceStarted] = useState(false);\n\n  const [\n    customerServiceData,\n    setCustomerServiceData,\n  ] = useState<CustomerServiceState>(() => {\n    const storagedCustomerServiceData = localStorage.getItem(\n      '@TelaAgil:customerServiceData',\n    );\n\n    if (storagedCustomerServiceData) {\n      const { operatingCompany, customer, installation, debits } = JSON.parse(\n        storagedCustomerServiceData,\n      );\n      return { operatingCompany, customer, installation, debits };\n    }\n\n    return {} as CustomerServiceState;\n  });\n\n  const getCustomer = useCallback(\n    async ({ stateCode, contract, cpf }: GetCustomerData) => {\n      let url;\n\n      if (cpf && contract) {\n        addToast({\n          type: 'error',\n          title: 'Erro no formulário',\n          description:\n            'Utilize apenas um dos campos (Conta contrato ou CPF / CNPJ)',\n        });\n\n        return;\n      }\n\n      if (cpf) {\n        url = `/atendimento/v1/clientes?cpf=${cpf}&flagDadosCliente=true&flagStatusInstalacao=true&flagPossuiDebitos=true&flagDadosTecnicos=false&empresaOperadora=${stateCode}&flagNotasAbertas=true&flagNotasEncerradas=true&flagDetalheDebitoCobranca=true&flagDetalheDebitoFatura=true&codigoTransacao=123`;\n      } else {\n        url = `/atendimento/v1/clientes?contrato=${contract}&flagDadosCliente=true&flagStatusInstalacao=true&flagPossuiDebitos=true&flagDadosTecnicos=true&empresaOperadora=${stateCode}&flagNotasAbertas=true&flagNotasEncerradas=true&flagDetalheDebitoCobranca=true&flagDetalheDebitoFatura=true&codigoTransacao=123`;\n      }\n\n      const response = await customerDataApi.get(url);\n\n      const { customer, installation, debits } = extractResponseData(\n        response,\n        stateCode,\n      );\n\n      localStorage.setItem(\n        '@TelaAgil:customerServiceData',\n        JSON.stringify({\n          operatingCompany: stateCode,\n          customer,\n          installation,\n          debits,\n        }),\n      );\n\n      setCustomerServiceData({\n        operatingCompany: stateCode,\n        customer,\n        installation,\n        debits,\n      });\n    },\n    [addToast],\n  );\n\n  const startService = useCallback(\n    async ({ stateCode, contract, cpf }: GetCustomerData) => {\n      try {\n        await getCustomer({\n          stateCode,\n          contract,\n          cpf,\n        });\n\n        setServiceStarted(true);\n      } catch {\n        addToast({\n          type: 'error',\n          title: 'Erro no atendimento',\n          description:\n            'Ocorreu um erro ao iniciar o atendimento, cheque as informações do cliente',\n        });\n      }\n    },\n    [getCustomer, addToast],\n  );\n\n  const finishService = useCallback(() => {\n    localStorage.removeItem('@TelaAgil:customerServiceData');\n\n    setCustomerServiceData({} as CustomerServiceContextData);\n\n    setServiceStarted(false);\n  }, []);\n\n  return (\n    <CustomerServiceContext.Provider\n      value={{\n        operatingCompany: customerServiceData.operatingCompany,\n        customer: customerServiceData.customer,\n        installation: customerServiceData.installation,\n        debits: customerServiceData.debits,\n        serviceStarted,\n        getCustomer,\n        startService,\n        finishService,\n      }}\n    >\n      {children}\n    </CustomerServiceContext.Provider>\n  );\n};\n\nfunction useCustomerService(): CustomerServiceContextData {\n  const context = useContext(CustomerServiceContext);\n\n  if (!context) {\n    throw new Error(\n      'useCustomerService must be used within a CustomerServiceProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { CustomerServiceProvider, useCustomerService };\n",["361","362","363","364","365"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],["366","367","368","369","370"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],["371","372","373","374","375"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],["376","377","378","379","380"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/Alert/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],["381","382","383","384","385"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/AlertsContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/StepModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],["386","387","388","389","390"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",["391"],"import PowerOutageFlow from '..';\nimport { Question } from '../../../StepModal';\n\nconst powerOutageQuestions: Question[] = [\n  {\n    id: 'f1-q1',\n    title:\n      'Você está totalmente sem energia ou sua luz está oscilando (ou fraca) ?',\n    options: [\n      {\n        answer: 'Sem energia',\n        nextQuestionId: 'f1-q2',\n      },\n      {\n        answer: 'Oscilando ou fraca',\n      },\n    ],\n  },\n  {\n    id: 'f1-q2',\n    title: 'Faltou luz em todo o seu imóvel ou apenas em algumas partes dele?',\n    options: [\n      {\n        answer: 'Todo o imóvel',\n        nextQuestionId: 'f1-q3',\n      },\n      {\n        answer: 'Algumas partes',\n      },\n    ],\n  },\n  {\n    id: 'f1-q3',\n    title: 'Faltou energia na rua toda ou só na sua casa?',\n    options: [\n      {\n        answer: 'Rua toda',\n      },\n      {\n        answer: 'Minha casa',\n        nextQuestionId: 'f1-q4',\n      },\n    ],\n  },\n  {\n    id: 'f1-q4',\n    title:\n      'Você fez o teste do disjuntor? Ele ficou no mesmo lugar ou desligou de novo?',\n    options: [\n      {\n        answer: 'Mesmo lugar',\n        nextQuestionId: 'f1-q5',\n      },\n      {\n        answer: 'Desligou de novo',\n        nextQuestionId: 'f1-r1',\n      },\n    ],\n  },\n  {\n    id: 'f1-q5',\n    title: 'Posso confirmar sua solicitação?',\n    options: [\n      {\n        answer: 'Sim',\n        nextQuestionId: 'f1-r2',\n      },\n      {\n        answer: 'Não',\n      },\n    ],\n  },\n  {\n    id: 'f1-r1',\n    title:\n      'Pelas informações que você passou, parece que você está com um defeito interno.',\n    options: [\n      {\n        answer: 'Voltar',\n      },\n    ],\n  },\n  {\n    id: 'f1-r2',\n    title: 'Solicitação gerada com sucesso',\n    options: [\n      {\n        answer: 'Finalizar serviço',\n      },\n    ],\n  },\n  {\n    id: 'f2-q1',\n    title: 'Oscilando há mais de 7 dias?',\n    options: [\n      {\n        answer: 'Sim',\n      },\n      {\n        answer: 'Não',\n      },\n    ],\n  },\n];\n\nexport default powerOutageQuestions;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx",["392"],"import React, { useCallback, useState } from 'react';\n\nimport StepModal, { Question } from '../../StepModal';\n\nimport powerOutageQuestions from './questions/PowerOutageQuestions';\n\ninterface FlowComponentProps {\n  modalOpen: boolean;\n  toggleModal(): void;\n}\n\nconst PowerOutageFlow: React.FC<FlowComponentProps> = ({\n  modalOpen,\n  toggleModal,\n}) => {\n  const [questions, setQuestions] = useState<Question[]>(powerOutageQuestions);\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n\n  const handleSetCurrentQuestion = useCallback(\n    (nextQuestionId: string) => {\n      const nextQuestion: Question | undefined = questions.find(\n        question => question.id === nextQuestionId,\n      );\n\n      if (nextQuestion) {\n        setCurrentQuestion(nextQuestion);\n      }\n    },\n    [questions],\n  );\n\n  const handleClearFlow = useCallback(() => {\n    setCurrentQuestion(questions[0]);\n  }, [questions]);\n\n  return (\n    <StepModal\n      isOpen={modalOpen}\n      setIsOpen={toggleModal}\n      title=\"Falta de energia\"\n      question={currentQuestion}\n      setCurrentQuestion={handleSetCurrentQuestion}\n      clearFlow={handleClearFlow}\n    />\n  );\n};\n\nexport default PowerOutageFlow;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["393"],"import React, { useState, useEffect } from 'react';\n\nimport ReactModal from 'react-modal';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <ReactModal\n      shouldCloseOnOverlayClick={!false}\n      onRequestClose={setIsOpen}\n      isOpen={modalStatus}\n      ariaHideApp={false}\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          background: '#F0F0F5',\n          color: '#000000',\n          borderRadius: '8px',\n          width: '736px',\n          padding: '48px',\n          border: 'none',\n        },\n        overlay: {\n          backgroundColor: 'rgba(0,0,0,0.7)',\n        },\n      }}\n    >\n      {children}\n    </ReactModal>\n  );\n};\n\nexport default Modal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",["394"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { format } from 'date-fns';\nimport { useLoading } from 'react-use-loading';\nimport * as Yup from 'yup';\n\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport getUnformattedPhone from '../../../utils/getUnformattedPhone';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useToast } from '../../../hooks/toast';\nimport { useDebitsConsultation } from '../../../hooks/debitsConsultation';\nimport { useWhatsappSending } from '../../../hooks/useWhatsappSending';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\nimport InputMask from '../../InputMask';\n\nimport { currencyMask } from '../../../utils/inputMasks';\n\nimport { ModalContent, SendButton } from './styles';\nimport { InstallmentDebit, InvoiceDebit } from '../../../types/Debits';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface SendDebitFormData {\n  phone: string;\n}\n\nconst DebitsConsultationModal: React.FC<ModalProps> = ({\n  isOpen,\n  setIsOpen,\n}) => {\n  const [selectedInvoiceDebit, setSelectedInvoiceDebit] = useState<\n    InvoiceDebit | undefined\n  >(undefined);\n  const [selectedInstallmentDebit, setSelectedInstallmentDebit] = useState<\n    InstallmentDebit | undefined\n  >(undefined);\n\n  const { debits, customer, operatingCompany } = useCustomerService();\n  const { addToast } = useToast();\n  const { getInvoiceUrl } = useDebitsConsultation();\n  const { sendInvoiceDebit, sendInstallmentPayment } = useWhatsappSending();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(\n    async (data: SendDebitFormData) => {\n      try {\n        start('Enviando fatura ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          phone: Yup.string().required('Telefone obrigatório'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (selectedInvoiceDebit) {\n          const invoiceUrl = await getInvoiceUrl({\n            invoiceReference: selectedInvoiceDebit.invoiceReference,\n            operatingCompany,\n          });\n          await sendInvoiceDebit({\n            invoiceUrl,\n            operatingCompany,\n            phoneNumber: getUnformattedPhone(data.phone),\n          });\n\n          setIsOpen();\n\n          addToast({\n            type: 'success',\n            title: 'Fatura enviada',\n            description: 'Fatura foi enviada com sucesso.',\n          });\n\n          return;\n        }\n\n        if (selectedInstallmentDebit) {\n          await sendInstallmentPayment({\n            operatingCompany,\n            phoneNumber: getUnformattedPhone(data.phone),\n            name: customer.name,\n            amount: selectedInstallmentDebit.invoiceAmount,\n            barCode: selectedInstallmentDebit.paymentCode,\n            contract: customer.contractAccount,\n          });\n\n          setIsOpen();\n\n          addToast({\n            type: 'success',\n            title: 'Código enviado',\n            description: 'O código para pagamento foi enviado com sucesso.',\n          });\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        setIsOpen();\n\n        addToast({\n          type: 'error',\n          title: 'Erro no envio',\n          description:\n            'Ocorreu um erro ao enviar a fatura, cheque o número de telefone',\n        });\n      } finally {\n        stop();\n      }\n    },\n    [\n      addToast,\n      selectedInvoiceDebit,\n      selectedInstallmentDebit,\n      customer,\n      getInvoiceUrl,\n      operatingCompany,\n      start,\n      sendInvoiceDebit,\n      sendInstallmentPayment,\n      stop,\n      setIsOpen,\n    ],\n  );\n\n  const handleClickInstallmentDebit = useCallback(debit => {\n    setSelectedInstallmentDebit(debit);\n    setSelectedInvoiceDebit(undefined);\n  }, []);\n\n  const handleClickInvoiceDebit = useCallback(debit => {\n    setSelectedInvoiceDebit(debit);\n    setSelectedInstallmentDebit(undefined);\n  }, []);\n\n  const generateInstallmentRows = useMemo(() => {\n    const installmentRows = debits.installmentDebits.installmentDebitDetails.map(\n      debit => (\n        <tr\n          key={debit.billingDocumentNumber}\n          tabIndex={0}\n          onClick={() => handleClickInstallmentDebit(debit)}\n        >\n          <td>\n            <span>Parcelamento</span>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td />\n        </tr>\n      ),\n    );\n\n    return installmentRows;\n  }, [debits, handleClickInstallmentDebit]);\n\n  const generateInvoiceRows = useMemo(() => {\n    const invoiceRows = debits.invoiceDebits.invoiceDebitDetails.map(debit => {\n      const monthReference = Number(debit.overdueInvoiceNumber.substr(5, 2));\n      const yearReference = Number(debit.overdueInvoiceNumber.substr(1, 4));\n\n      const referenceDate = new Date(yearReference, monthReference);\n\n      return (\n        <tr\n          key={debit.invoiceReference}\n          tabIndex={0}\n          onClick={() => handleClickInvoiceDebit(debit)}\n        >\n          <td>\n            <span>Referente a</span>\n            <strong>{format(referenceDate, 'MM/yyyy ')}</strong>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td>\n            <span>Vencimento</span>\n            <strong>{format(new Date(debit.dueDate), 'dd/MM/yyyy')}</strong>\n          </td>\n        </tr>\n      );\n    });\n\n    return invoiceRows;\n  }, [debits, handleClickInvoiceDebit]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <ModalContent>\n        <h2>Consulta de débitos</h2>\n\n        <div>\n          <table>\n            <tbody>\n              {generateInstallmentRows}\n              {generateInvoiceRows}\n            </tbody>\n          </table>\n        </div>\n\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{\n            phone: customer.contacts.phones?.cellPhone,\n          }}\n        >\n          <InputMask\n            name=\"phone\"\n            mask=\"(99) 99999-9999\"\n            type=\"text\"\n            placeholder=\"Telefone do cliente\"\n            autoComplete=\"off\"\n          />\n\n          <SendButton type=\"submit\">Enviar fatura</SendButton>\n        </Form>\n      </ModalContent>\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DebitsConsultationModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["395","396"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx",["397"],"import React, { createContext, useCallback, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport eqtlBarApi from '../services/eqtlBarApi';\n\nimport { useCustomerService } from './customerService';\n\ninterface DebitsConsultationContextData {\n  getInvoiceUrl({\n    invoiceReference,\n    operatingCompany,\n  }: DuplicateInvoiceProps): Promise<string>;\n}\n\ninterface DuplicateInvoiceProps {\n  invoiceReference: string;\n  operatingCompany: string;\n}\n\nconst DebitsConsultationContext = createContext<DebitsConsultationContextData>(\n  {} as DebitsConsultationContextData,\n);\n\nconst DebitsConsultationProvider: React.FC = ({ children }) => {\n  const getInvoiceUrl = useCallback(\n    async ({ invoiceReference, operatingCompany }: DuplicateInvoiceProps) => {\n      const response = await eqtlBarApi.get(\n        `/fatura/v1/segundaVia/${invoiceReference}`,\n        {\n          params: {\n            empresaOperadora: operatingCompany,\n            codigoTransacao: uuid(),\n          },\n        },\n      );\n      return response.data.data.urlFatura;\n    },\n    [],\n  );\n\n  return (\n    <DebitsConsultationContext.Provider\n      value={{\n        getInvoiceUrl,\n      }}\n    >\n      {children}\n    </DebitsConsultationContext.Provider>\n  );\n};\n\nfunction useDebitsConsultation(): DebitsConsultationContextData {\n  const context = useContext(DebitsConsultationContext);\n\n  if (!context) {\n    throw new Error(\n      'useDebitsConsultation must be used within a DebitsConsultationProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { DebitsConsultationProvider, useDebitsConsultation };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/useWhatsappSending.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx",["398","399","400"],"import React from 'react';\nimport { useLoading } from 'react-use-loading';\n\nimport { useToast } from '../../../hooks/toast';\nimport { useCustomerService } from '../../../hooks/customerService';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\nimport { OutlineButton } from '../../StepModal/styles';\n\nimport { ModalContent, OptionsContainer, OptionButton } from './styles';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\nconst EmailInvoiceModal: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const { customer } = useCustomerService();\n  const { addToast } = useToast();\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      {customer.contacts.email ? (\n        <ModalContent>\n          <h2>Fatura por e-mail</h2>\n          <p>\n            {`Autorizo o envio mensal das faturas de energia elétrica e de eventuais\n          notificações referentes à conta contrato especificada, ao e-mail do\n          meu cadastro: ${customer.contacts.email}, dispensando a necessidade de envio\n          impresso em papel.`}\n          </p>\n\n          <OptionsContainer>\n            <OptionButton type=\"button\" onClick={() => setIsOpen()}>\n              Não\n            </OptionButton>\n\n            <OptionButton type=\"button\">Sim, autorizo</OptionButton>\n          </OptionsContainer>\n        </ModalContent>\n      ) : (\n        <p>O usuário não possui e-mail cadastrado.</p>\n      )}\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default EmailInvoiceModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"401","replacedBy":"411"},{"ruleId":"403","replacedBy":"412"},{"ruleId":"405","replacedBy":"413"},{"ruleId":"407","replacedBy":"414"},{"ruleId":"409","replacedBy":"415"},{"ruleId":"401","replacedBy":"416"},{"ruleId":"403","replacedBy":"417"},{"ruleId":"405","replacedBy":"418"},{"ruleId":"407","replacedBy":"419"},{"ruleId":"409","replacedBy":"420"},{"ruleId":"401","replacedBy":"421"},{"ruleId":"403","replacedBy":"422"},{"ruleId":"405","replacedBy":"423"},{"ruleId":"407","replacedBy":"424"},{"ruleId":"409","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":26},{"ruleId":"426","severity":1,"message":"430","line":3,"column":10,"nodeType":"428","messageId":"429","endLine":3,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":36,"column":21,"nodeType":"433","messageId":"434","endLine":36,"endColumn":24,"suggestions":"435"},{"ruleId":"431","severity":1,"message":"432","line":39,"column":23,"nodeType":"433","messageId":"434","endLine":39,"endColumn":26,"suggestions":"436"},{"ruleId":"401","replacedBy":"437"},{"ruleId":"403","replacedBy":"438"},{"ruleId":"405","replacedBy":"439"},{"ruleId":"407","replacedBy":"440"},{"ruleId":"409","replacedBy":"441"},{"ruleId":"431","severity":1,"message":"432","line":84,"column":25,"nodeType":"433","messageId":"434","endLine":84,"endColumn":28,"suggestions":"442"},{"ruleId":"431","severity":1,"message":"432","line":149,"column":36,"nodeType":"433","messageId":"434","endLine":149,"endColumn":39,"suggestions":"443"},{"ruleId":"431","severity":1,"message":"432","line":153,"column":13,"nodeType":"433","messageId":"434","endLine":153,"endColumn":16,"suggestions":"444"},{"ruleId":"431","severity":1,"message":"432","line":165,"column":13,"nodeType":"433","messageId":"434","endLine":165,"endColumn":16,"suggestions":"445"},{"ruleId":"426","severity":1,"message":"446","line":2,"column":10,"nodeType":"428","messageId":"429","endLine":2,"endColumn":16},{"ruleId":"401","replacedBy":"447"},{"ruleId":"403","replacedBy":"448"},{"ruleId":"405","replacedBy":"449"},{"ruleId":"407","replacedBy":"450"},{"ruleId":"409","replacedBy":"451"},{"ruleId":"401","replacedBy":"452"},{"ruleId":"403","replacedBy":"453"},{"ruleId":"405","replacedBy":"454"},{"ruleId":"407","replacedBy":"455"},{"ruleId":"409","replacedBy":"456"},{"ruleId":"401","replacedBy":"457"},{"ruleId":"403","replacedBy":"458"},{"ruleId":"405","replacedBy":"459"},{"ruleId":"407","replacedBy":"460"},{"ruleId":"409","replacedBy":"461"},{"ruleId":"401","replacedBy":"462"},{"ruleId":"403","replacedBy":"463"},{"ruleId":"405","replacedBy":"464"},{"ruleId":"407","replacedBy":"465"},{"ruleId":"409","replacedBy":"466"},{"ruleId":"401","replacedBy":"467"},{"ruleId":"403","replacedBy":"468"},{"ruleId":"405","replacedBy":"469"},{"ruleId":"407","replacedBy":"470"},{"ruleId":"409","replacedBy":"471"},{"ruleId":"401","replacedBy":"472"},{"ruleId":"403","replacedBy":"473"},{"ruleId":"405","replacedBy":"474"},{"ruleId":"407","replacedBy":"475"},{"ruleId":"409","replacedBy":"476"},{"ruleId":"426","severity":1,"message":"477","line":1,"column":8,"nodeType":"428","messageId":"429","endLine":1,"endColumn":23},{"ruleId":"426","severity":1,"message":"478","line":16,"column":21,"nodeType":"428","messageId":"429","endLine":16,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":6,"column":13,"nodeType":"433","messageId":"434","endLine":6,"endColumn":16,"suggestions":"479"},{"ruleId":"426","severity":1,"message":"427","line":3,"column":3,"nodeType":"428","messageId":"429","endLine":3,"endColumn":12},{"ruleId":"431","severity":1,"message":"432","line":36,"column":21,"nodeType":"433","messageId":"434","endLine":36,"endColumn":24,"suggestions":"480"},{"ruleId":"431","severity":1,"message":"432","line":39,"column":23,"nodeType":"433","messageId":"434","endLine":39,"endColumn":26,"suggestions":"481"},{"ruleId":"426","severity":1,"message":"482","line":6,"column":10,"nodeType":"428","messageId":"429","endLine":6,"endColumn":28},{"ruleId":"426","severity":1,"message":"483","line":9,"column":10,"nodeType":"428","messageId":"429","endLine":9,"endColumn":23},{"ruleId":"426","severity":1,"message":"484","line":19,"column":36,"nodeType":"428","messageId":"429","endLine":19,"endColumn":41},{"ruleId":"426","severity":1,"message":"485","line":22,"column":11,"nodeType":"428","messageId":"429","endLine":22,"endColumn":19},"lines-around-directive",["486"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["486"],[],[],[],[],["486"],[],[],[],[],["486"],[],[],[],[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLoading' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["487","488"],["489","490"],["486"],[],[],[],[],["491","492"],["493","494"],["495","496"],["497","498"],"'string' is defined but never used.",["486"],[],[],[],[],["486"],[],[],[],[],["486"],[],[],[],[],["486"],[],[],[],[],["486"],[],[],[],[],["486"],[],[],[],[],"'PowerOutageFlow' is defined but never used.","'setQuestions' is assigned a value but never used.",["499","500"],["501","502"],["503","504"],"'useCustomerService' is defined but never used.","'OutlineButton' is defined but never used.","'start' is assigned a value but never used.","'addToast' is assigned a value but never used.","padding-line-between-statements",{"messageId":"505","fix":"506","desc":"507"},{"messageId":"508","fix":"509","desc":"510"},{"messageId":"505","fix":"511","desc":"507"},{"messageId":"508","fix":"512","desc":"510"},{"messageId":"505","fix":"513","desc":"507"},{"messageId":"508","fix":"514","desc":"510"},{"messageId":"505","fix":"515","desc":"507"},{"messageId":"508","fix":"516","desc":"510"},{"messageId":"505","fix":"517","desc":"507"},{"messageId":"508","fix":"518","desc":"510"},{"messageId":"505","fix":"519","desc":"507"},{"messageId":"508","fix":"520","desc":"510"},{"messageId":"505","fix":"521","desc":"507"},{"messageId":"508","fix":"522","desc":"510"},{"messageId":"505","fix":"523","desc":"507"},{"messageId":"508","fix":"524","desc":"510"},{"messageId":"505","fix":"525","desc":"507"},{"messageId":"508","fix":"526","desc":"510"},"suggestUnknown",{"range":"527","text":"528"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"527","text":"529"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"530","text":"528"},{"range":"530","text":"529"},{"range":"531","text":"528"},{"range":"531","text":"529"},{"range":"532","text":"528"},{"range":"532","text":"529"},{"range":"533","text":"528"},{"range":"533","text":"529"},{"range":"534","text":"528"},{"range":"534","text":"529"},{"range":"535","text":"528"},{"range":"535","text":"529"},{"range":"536","text":"528"},{"range":"536","text":"529"},{"range":"537","text":"528"},{"range":"537","text":"529"},[963,966],"unknown","never",[1050,1053],[2572,2575],[4191,4194],[4383,4386],[4792,4795],[128,131],[963,966],[1050,1053]]