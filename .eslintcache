[{"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx":"1","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx":"2","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx":"3","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx":"4","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx":"5","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts":"6","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts":"7","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts":"8","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts":"9","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx":"10","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts":"11","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx":"12","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx":"13","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts":"14","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts":"15","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx":"16","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx":"17","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts":"18","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts":"19","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts":"20","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx":"21","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx":"22","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts":"23","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts":"24","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx":"25","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts":"26","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts":"27","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx":"28","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx":"29","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts":"30","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts":"31","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx":"32","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx":"33","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts":"34","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx":"35","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx":"36","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx":"37","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx":"38","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts":"39","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts":"40","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx":"41","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts":"42","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts":"43","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx":"44","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx":"45","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts":"46","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx":"47","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts":"48","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts":"49","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx":"50","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx":"51","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts":"52","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts":"53","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx":"54","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts":"55","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts":"56","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts":"57","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx":"58","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx":"59","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts":"60","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx":"61","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx":"62","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts":"63","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx":"64","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx":"65","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx":"66","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts":"67","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx":"68","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts":"69","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx":"70","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx":"71","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts":"72","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts":"73","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts":"74","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts":"75","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx":"76","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx":"77","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx":"78","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx":"79","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts":"80","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts":"81","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx":"82","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts":"83","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx":"84","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx":"85","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx":"86","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx":"87"},{"size":495,"mtime":1619629479482,"results":"88","hashOfConfig":"89"},{"size":2213,"mtime":1619629479482,"results":"90","hashOfConfig":"89"},{"size":7072,"mtime":1619035218154,"results":"91","hashOfConfig":"89"},{"size":1482,"mtime":1618857799129,"results":"92","hashOfConfig":"89"},{"size":802,"mtime":1619035218154,"results":"93","hashOfConfig":"89"},{"size":272,"mtime":1619122485148,"results":"94","hashOfConfig":"89"},{"size":7797,"mtime":1619040873078,"results":"95","hashOfConfig":"89"},{"size":374,"mtime":1619629479482,"results":"96","hashOfConfig":"89"},{"size":280,"mtime":1619629479482,"results":"97","hashOfConfig":"89"},{"size":1081,"mtime":1619035218150,"results":"98","hashOfConfig":"89"},{"size":171,"mtime":1619629479482,"results":"99","hashOfConfig":"89"},{"size":1620,"mtime":1619629479478,"results":"100","hashOfConfig":"89"},{"size":313,"mtime":1619629479478,"results":"101","hashOfConfig":"89"},{"size":2319,"mtime":1619629479478,"results":"102","hashOfConfig":"89"},{"size":1243,"mtime":1619629479482,"results":"103","hashOfConfig":"89"},{"size":1450,"mtime":1619629479478,"results":"104","hashOfConfig":"89"},{"size":1655,"mtime":1619035218150,"results":"105","hashOfConfig":"89"},{"size":1037,"mtime":1619629479478,"results":"106","hashOfConfig":"89"},{"size":386,"mtime":1619629479478,"results":"107","hashOfConfig":"89"},{"size":186,"mtime":1619035218150,"results":"108","hashOfConfig":"89"},{"size":3469,"mtime":1619629479478,"results":"109","hashOfConfig":"89"},{"size":893,"mtime":1619035218150,"results":"110","hashOfConfig":"89"},{"size":705,"mtime":1619035218150,"results":"111","hashOfConfig":"89"},{"size":572,"mtime":1619035218150,"results":"112","hashOfConfig":"89"},{"size":9210,"mtime":1619641038166,"results":"113","hashOfConfig":"89"},{"size":2871,"mtime":1619035218150,"results":"114","hashOfConfig":"89"},{"size":3327,"mtime":1619035218150,"results":"115","hashOfConfig":"89"},{"size":5112,"mtime":1619629479478,"results":"116","hashOfConfig":"89"},{"size":353,"mtime":1619035218150,"results":"117","hashOfConfig":"89"},{"size":1217,"mtime":1619629479478,"results":"118","hashOfConfig":"89"},{"size":664,"mtime":1619629479482,"results":"119","hashOfConfig":"89"},{"size":10201,"mtime":1619035218150,"results":"120","hashOfConfig":"89"},{"size":11252,"mtime":1619629479482,"results":"121","hashOfConfig":"89"},{"size":534,"mtime":1619035218154,"results":"122","hashOfConfig":"89"},{"size":1183,"mtime":1619035218150,"results":"123","hashOfConfig":"89"},{"size":1483,"mtime":1619035218154,"results":"124","hashOfConfig":"89"},{"size":23875,"mtime":1619629479482,"results":"125","hashOfConfig":"89"},{"size":3057,"mtime":1619035218154,"results":"126","hashOfConfig":"89"},{"size":758,"mtime":1619035218154,"results":"127","hashOfConfig":"89"},{"size":1363,"mtime":1619035218146,"results":"128","hashOfConfig":"89"},{"size":316,"mtime":1619035218146,"results":"129","hashOfConfig":"89"},{"size":135,"mtime":1619035218150,"results":"130","hashOfConfig":"89"},{"size":377,"mtime":1619035218146,"results":"131","hashOfConfig":"89"},{"size":419,"mtime":1619035218150,"results":"132","hashOfConfig":"89"},{"size":1765,"mtime":1619035218146,"results":"133","hashOfConfig":"89"},{"size":436,"mtime":1619035218150,"results":"134","hashOfConfig":"89"},{"size":414,"mtime":1619035218150,"results":"135","hashOfConfig":"89"},{"size":484,"mtime":1619629479482,"results":"136","hashOfConfig":"89"},{"size":1239,"mtime":1619035218150,"results":"137","hashOfConfig":"89"},{"size":5915,"mtime":1619629479478,"results":"138","hashOfConfig":"89"},{"size":5725,"mtime":1619629479478,"results":"139","hashOfConfig":"89"},{"size":262,"mtime":1619035218154,"results":"140","hashOfConfig":"89"},{"size":1222,"mtime":1619035218150,"results":"141","hashOfConfig":"89"},{"size":799,"mtime":1619629479478,"results":"142","hashOfConfig":"89"},{"size":903,"mtime":1619629479478,"results":"143","hashOfConfig":"89"},{"size":298,"mtime":1619119785970,"results":"144","hashOfConfig":"89"},{"size":176,"mtime":1619119920867,"results":"145","hashOfConfig":"89"},{"size":3761,"mtime":1619629479482,"results":"146","hashOfConfig":"89"},{"size":1878,"mtime":1619629479482,"results":"147","hashOfConfig":"89"},{"size":1273,"mtime":1619629479482,"results":"148","hashOfConfig":"89"},{"size":2224,"mtime":1619629479478,"results":"149","hashOfConfig":"89"},{"size":7338,"mtime":1619041540321,"results":"150","hashOfConfig":"89"},{"size":1732,"mtime":1619035218154,"results":"151","hashOfConfig":"89"},{"size":785,"mtime":1619035218150,"results":"152","hashOfConfig":"89"},{"size":1180,"mtime":1619035218150,"results":"153","hashOfConfig":"89"},{"size":1739,"mtime":1619629479478,"results":"154","hashOfConfig":"89"},{"size":1548,"mtime":1619629479478,"results":"155","hashOfConfig":"89"},{"size":1656,"mtime":1619035218150,"results":"156","hashOfConfig":"89"},{"size":290,"mtime":1619629479482,"results":"157","hashOfConfig":"89"},{"size":379,"mtime":1619035218154,"results":"158","hashOfConfig":"89"},{"size":643,"mtime":1619629479482,"results":"159","hashOfConfig":"89"},{"size":234,"mtime":1619035218150,"results":"160","hashOfConfig":"89"},{"size":1271,"mtime":1619035218150,"results":"161","hashOfConfig":"89"},{"size":1336,"mtime":1619642649308,"results":"162","hashOfConfig":"89"},{"size":2634,"mtime":1619629479478,"results":"163","hashOfConfig":"89"},{"size":1675,"mtime":1619629479478,"results":"164","hashOfConfig":"89"},{"size":1527,"mtime":1619035218150,"results":"165","hashOfConfig":"89"},{"size":1265,"mtime":1619035218150,"results":"166","hashOfConfig":"89"},{"size":366,"mtime":1619035218150,"results":"167","hashOfConfig":"89"},{"size":743,"mtime":1619035218150,"results":"168","hashOfConfig":"89"},{"size":860,"mtime":1619629479478,"results":"169","hashOfConfig":"89"},{"size":364,"mtime":1619629479482,"results":"170","hashOfConfig":"89"},{"size":2199,"mtime":1619035218154,"results":"171","hashOfConfig":"89"},{"size":2485,"mtime":1619629479478,"results":"172","hashOfConfig":"89"},{"size":3892,"mtime":1619645414249,"results":"173","hashOfConfig":"89"},{"size":7654,"mtime":1619642044080,"results":"174","hashOfConfig":"89"},{"size":1248,"mtime":1619629479482,"results":"175","hashOfConfig":"89"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cwa88",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"183"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"183"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"234"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/auth.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/whatsappSending.tsx",["363"],"import React, { createContext, useCallback, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport yaloApi from '../services/yaloApi';\n\ninterface UrlVariationsProps {\n  [operatingCompany: string]: {\n    id: string;\n    token: {\n      activeSession: string;\n      noSession: string;\n    };\n  };\n}\n\nconst urlVariations: UrlVariationsProps = {\n  '98': {\n    id: 'equatorial-cemar',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiZXhwIjoxNTUzNzM1NjIwLCJpYXQiOjE1NTEzMTY0MjAsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiJlNjM2MmVmYS01ZDRlLTQ0Y2EtODE0OS0xMmQ0ZGY3MmViNWIiLCJuYmYiOjE1NTEzMTY0MTksInN1YiI6IjVjNzczNWMxMzdhZGE5MDAwODg1OWIwMSIsInR5cCI6ImFjY2VzcyJ9.ExSTxYepjNNi1NWV_MtC_g87NEmZz7tAPpeGHLfre9IkiI3oC2np945L9nCTTzleqgjJ9kWUNscdJaaEIy6SPg',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '95': {\n    id: 'equatorial-celpa',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiZXhwIjoxNTU1MDM2OTM1LCJpYXQiOjE1NTI2MTc3MzUsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiI2Y2JjN2I0OC03YzYwLTRjOTgtOGQwNy1jODAxZmE0MmRhMzUiLCJuYmYiOjE1NTI2MTc3MzQsInN1YiI6IjVjOGIwZjcyZTU3M2ZjMDAwOTE0NjA1MiIsInR5cCI6ImFjY2VzcyJ9.mU7bgLdmcdFgxt017Ds2UrlNyUNzy31irOyLQTJwVSoeGo7ejKwzN0ctpV6Ntm3rGkF4G_xnI1T8Ua0hPZP1WQ',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '82': {\n    id: 'equatorial-alagoas',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiYm90IjoiZXF1YXRvcmlhbC1hbGFnb2FzIiwiZXhwIjoxNTcwMDQyMzIxLCJpYXQiOjE1Njc2MjMxMjEsImlzcyI6InlhbG9jaGF0X2F1dGgiLCJqdGkiOiI2NWQ1OGQ0Zi03MDM0LTRjNGItOWYyNS0yYzRmMTdjMzYwN2EiLCJuYmYiOjE1Njc2MjMxMjAsInN1YiI6IjVkNzAwN2M4NmM5OGFhMDAwOTBlZDc3ZiIsInR5cCI6ImFjY2VzcyJ9.VTPLnWo7zJYDMlrywLVN1LV36rFA7C6NfLmoIOxy8WyyHsenon5C7gALbgfwtZnmtHnvz-ERNzVtcYewlgOl0A',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n  '86': {\n    id: 'equatorial-piaui',\n    token: {\n      activeSession:\n        'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ5YWxvY2hhdF9hdXRoIiwiYm90IjoiZXF1YXRvcmlhbC1waWF1aSIsImV4cCI6MTU3MDA0MjIzNiwiaWF0IjoxNTY3NjIzMDM2LCJpc3MiOiJ5YWxvY2hhdF9hdXRoIiwianRpIjoiNDBhNWRjMGUtZDQwZS00OGM0LTkzMTQtY2ViMzQ4MTJlNDk3IiwibmJmIjoxNTY3NjIzMDM1LCJzdWIiOiI1ZDcwMDcxMWZlZTExNTAwMGJhZTJhNjkiLCJ0eXAiOiJhY2Nlc3MifQ.-M94J42QltLdAHuHxyiz-BaFR6EfxHfUA8Z89Jblp6udxL-xIHn8yhDUCUL7nGrPxfMhbR6nJAf6Rg4EsujVZQ',\n      noSession:\n        'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUNUtNbHBiSGpKQ2RQSUtmdFZ5SUJBem5IUEllcThyMCJ9.EDZ45MU8V6tlEvAv1KAZeLtAwRSJgSg2bo5VzwNzdRE',\n    },\n  },\n};\n\ninterface WhatsappSendingContextData {\n  sendNotification({\n    operatingCompany,\n    phoneNumber,\n  }: SendNotificationProps): Promise<void>;\n  sendInvoiceDebit({\n    operatingCompany,\n    invoiceUrl,\n    reference,\n    phoneNumber,\n  }: SendInvoiceDebitProps): Promise<void>;\n  sendInstallmentPayment({\n    operatingCompany,\n    phoneNumber,\n    name,\n    contract,\n    amount,\n    barCode,\n  }: SendInstallmentPaymentProps): Promise<void>;\n}\n\ninterface SendInvoiceDebitProps {\n  operatingCompany: string;\n  invoiceUrl: string;\n  reference: string;\n  phoneNumber: string;\n}\n\ninterface SendNotificationProps {\n  operatingCompany: string;\n  phoneNumber: string;\n}\n\ninterface SendInstallmentPaymentProps {\n  operatingCompany: string;\n  phoneNumber: string;\n  name: string;\n  contract: string;\n  amount: number;\n  barCode: string;\n}\n\nconst WhatsappSendingContext = createContext<WhatsappSendingContextData>(\n  {} as WhatsappSendingContextData,\n);\n\nconst WhatsappSendingProvider: React.FC = ({ children }) => {\n  const sendNotification = useCallback(\n    async ({ operatingCompany, phoneNumber }: SendNotificationProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'entrada-parcelamento',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                nomeCliente: 'teste',\n                contaContrato: 'teste',\n                valorEntrada: 'teste',\n                codBarras: 'teste',\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  const sendInstallmentPayment = useCallback(\n    async ({\n      operatingCompany,\n      phoneNumber,\n      name,\n      contract,\n      amount,\n      barCode,\n    }: SendInstallmentPaymentProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'entrada-parcelamento',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                nomeCliente: name,\n                contaContrato: contract,\n                valorEntrada: amount,\n                codBarras: barCode,\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  const sendInvoiceDebit = useCallback(\n    async ({\n      operatingCompany,\n      invoiceUrl,\n      reference,\n      phoneNumber,\n    }: SendInvoiceDebitProps) => {\n      const { id, token } = urlVariations[operatingCompany];\n\n      await yaloApi.post(\n        `/accounts/equatorial/bots/${id}/notifications`,\n        {\n          type: 'segunda-via',\n          users: [\n            {\n              phone: `+55${phoneNumber}`,\n              params: {\n                document: {\n                  caption: `2ª via de fatura (${reference})`,\n                  link: invoiceUrl,\n                },\n              },\n            },\n          ],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token.noSession}`,\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n    },\n    [],\n  );\n\n  return (\n    <WhatsappSendingContext.Provider\n      value={{\n        sendNotification,\n        sendInvoiceDebit,\n        sendInstallmentPayment,\n      }}\n    >\n      {children}\n    </WhatsappSendingContext.Provider>\n  );\n};\n\nfunction useWhatsappSending(): WhatsappSendingContextData {\n  const context = useContext(WhatsappSendingContext);\n\n  if (!context) {\n    throw new Error(\n      'useWhatsappSending must be used within a WhatsappSendingProvider',\n    );\n  }\n\n  return context;\n}\n\nexport { WhatsappSendingProvider, useWhatsappSending };\n",["364","365","366","367","368"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/alert.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/Route.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/eqtlBarApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/extractResponseData.ts",["369","370","371","372","373","374","375"],"import { AxiosResponse } from 'axios';\nimport { parseISO } from 'date-fns';\n\nimport Customer from '../types/Customer';\nimport Installation from '../types/Installation';\nimport Debits, { InvoiceDebit, InstallmentDebit } from '../types/Debits';\nimport ServiceNotes, { OpenNote, ClosedNote } from '../types/ServiceNotes';\n\nimport { phoneMask } from './inputMasks';\n\nimport getInstallationSubclassName from './getInstallationSubclassName';\n\ninterface ExtractedData {\n  customer: Customer;\n  installation: Installation;\n  debits: Debits;\n  serviceNotes: ServiceNotes;\n}\n\ninterface ResponsePhone {\n  tipoTelefone: string;\n  numeroTelefone: string;\n}\n\nfunction getCustomerData(response: AxiosResponse, stateCode: string): Customer {\n  const responseCustomer = response.data.data.cliente[0];\n\n  const customer: Customer = {\n    contractAccount:\n      typeof responseCustomer.contaContrato === 'string'\n        ? responseCustomer.contaContrato.replace(/^0+/, '')\n        : responseCustomer.contaContrato.toString().replace(/^0+/, ''),\n    name: responseCustomer.nome,\n    surname: responseCustomer.sobrenome,\n    motherName: responseCustomer.nomeMae,\n    dayOfBirth: parseISO(responseCustomer.dataNascimento),\n    rg: responseCustomer.numeroRg,\n    cpf: responseCustomer.numeroCpf,\n    contacts: {\n      email: responseCustomer.contatos.email,\n    },\n    address: {\n      publicArea: responseCustomer.endereco.logradouro,\n      number: responseCustomer.endereco.numero,\n      neighborhood: responseCustomer.endereco.bairro,\n      city: responseCustomer.endereco.cidade,\n      uf: responseCustomer.endereco.uf,\n      postalCode: responseCustomer.endereco.cep,\n    },\n    phaseNumber: Number(responseCustomer.numeroFases),\n    bp: responseCustomer.bp,\n    installationNumber: responseCustomer.numeroInstalacao,\n  };\n\n  if (stateCode === '82' || stateCode === '86') {\n    const landline = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'R',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    const cellPhone = responseCustomer.contatos.telefones\n      .filter(\n        (telefone: ResponsePhone) =>\n          telefone.numeroTelefone && telefone.tipoTelefone === 'C',\n      )\n      .map((telefone: ResponsePhone) => phoneMask(telefone.numeroTelefone));\n\n    customer.contacts = {\n      phones: {\n        landline,\n        cellPhone,\n      },\n      email: responseCustomer.contatos.email,\n    };\n\n    customer.installationNumber = responseCustomer.numeroInstalacao.toString();\n\n    customer.address.complement = responseCustomer.endereco.complemento;\n  }\n\n  return customer;\n}\n\nfunction getInstallationData(\n  responseInstallation: any,\n  stateCode: string,\n): Installation {\n  const {\n    status,\n    corteAndamento,\n    desligaAndamento,\n    faltaEnergiaIndividual,\n    faltaEnergiaColetiva,\n    desligamentoProgramado,\n    faltaFases,\n    faltaEnergiaAvaliacaoTecnica,\n  } = responseInstallation;\n\n  const {\n    classe,\n    subclasse,\n    tarifa,\n    grupoTensao,\n    tipoPagamento,\n    fase,\n    localidade,\n    bomPagador,\n  } = responseInstallation.dadosTecnicos;\n\n  const {\n    latitude,\n    longitude,\n  } = responseInstallation.dadosTecnicos.coordenadaGeografica;\n\n  const installation: Installation = {\n    status,\n    cutInProgress: true && corteAndamento === 'S',\n    turnOffInProgress: true && desligaAndamento === 'S',\n    individualPowerOutage: true && faltaEnergiaIndividual === 'S',\n    collectivePowerOutage: true && faltaEnergiaColetiva === 'S',\n    scheduledShutdown: true && desligamentoProgramado === 'S',\n    powerPhaseOutage: true && faltaFases === 'S',\n    powerOutageTechnicalEvaluation:\n      true && faltaEnergiaAvaliacaoTecnica === 'S',\n    technicalData: {\n      class: classe,\n      subclass: subclasse,\n      tariff: tarifa,\n      tensionGroup: grupoTensao,\n      geographicCoordinates: {\n        latitude,\n        longitude,\n      },\n      paymentType: tipoPagamento,\n      phase: Number(fase),\n      locality: localidade,\n      goodPayer: true && bomPagador === 'S',\n    },\n  };\n\n  if (stateCode === '98' || stateCode === '95') {\n    installation.technicalData.subclass = getInstallationSubclassName(\n      installation.technicalData.subclass,\n    );\n  }\n\n  return installation;\n}\n\nfunction getDebits(responseDebits: any, stateCode: string): Debits {\n  const { debitosFatura, debitosParcelamento } = responseDebits;\n\n  const invoiceDebits: InvoiceDebit[] = debitosFatura.detalhesDebitoFatura.map(\n    (debit: any) => {\n      return {\n        overdueInvoiceNumber: debit.numeroFaturaVencida,\n        dueDate: parseISO(debit.dataVencimento),\n        invoiceAmount: Number(debit.valorFatura),\n        invoiceReference: debit.referenciaFatura,\n        paymentCode: debit.codigoPagamento,\n      };\n    },\n  );\n\n  const installmentDebits: InstallmentDebit[] = debitosParcelamento.detalhesDebitoParcelamento.map(\n    (debit: any) => {\n      const parsedDebit: InstallmentDebit = {\n        billingDocumentNumber: debit.numeroDocumentoCobranca,\n        invoiceAmount: Number(debit.valorFatura.toString().trim()),\n        invoiceReference: '',\n        paymentCode: debit.codigoPagamento,\n      };\n\n      if (stateCode === '82' || stateCode === '86') {\n        parsedDebit.invoiceReference = debit.referenciaFatura;\n      }\n\n      return parsedDebit;\n    },\n  );\n\n  const debits: Debits = {\n    invoiceDebits: {\n      invoiceDebitDetails: invoiceDebits,\n      totalAmountInvoiceDebits: Number(debitosFatura.valorTotalDebitoFatura),\n    },\n    installmentDebits: {\n      installmentDebitDetails: installmentDebits,\n      totalAmountInstallmentDebits: Number(\n        debitosParcelamento.valorTotalDebitoParcelamento,\n      ),\n    },\n  };\n\n  return debits;\n}\n\nfunction getServiceNotes(response: AxiosResponse): ServiceNotes {\n  const responseNotes = response.data.data.notas;\n\n  const mappedOpenServiceNotes: OpenNote[] = responseNotes.notasAbertas.map(\n    (note: any) => {\n      const openServiceNote: OpenNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoTipoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        status: note.status,\n        rejectionCode: note.codigoRejeicao,\n        rejectionCodeDescription: note.descricaoCodigoRejeicao,\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const mappedClosedServiceNotes: ClosedNote[] = responseNotes.notasEncerradas.map(\n    (note: any) => {\n      const openServiceNote: ClosedNote = {\n        type: note.tipoNota,\n        typeDescription: note.descricaoNota,\n        codeGroup: note.grupoCode,\n        codeGroupDescription: note.descricaoGrupoCode,\n        code: note.code,\n        codeDescription: note.descricaoCode,\n        openingDate: parseISO(note.dataAbertura),\n        conclusionDate: parseISO(note.dataConclusao),\n      };\n\n      return openServiceNote;\n    },\n  );\n\n  const serviceNotes: ServiceNotes = {\n    openServiceNotes: mappedOpenServiceNotes,\n    closedServiceNotes: mappedClosedServiceNotes,\n  };\n\n  return serviceNotes;\n}\n\nfunction extractResponseData(\n  response: AxiosResponse,\n  stateCode: string,\n): ExtractedData {\n  const { data: responseData } = response.data;\n\n  const customer = getCustomerData(response, stateCode);\n  const installation = getInstallationData(responseData.instalacao, stateCode);\n  const debits = getDebits(responseData.debitos, stateCode);\n  const serviceNotes = getServiceNotes(response);\n\n  return {\n    customer,\n    installation,\n    debits,\n    serviceNotes,\n  };\n}\n\nexport { extractResponseData, getInstallationData, getServiceNotes };\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getValidationErrors.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/index.tsx",["376"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\nimport Spinner from 'react-spinkit';\n\nimport 'rodal/lib/rodal.css';\n\nimport { Content } from './styles';\n\ninterface LoadingModalProps {\n  isOpen: boolean;\n  message?: string;\n  setIsOpen: () => void;\n}\n\nconst LoadingModal: React.FC<LoadingModalProps> = ({\n  isOpen,\n  message,\n  setIsOpen,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton={false}\n      customStyles={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n        width: 'fit-content',\n      }}\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      <Content>\n        <Spinner name=\"ball-pulse-sync\" fadeIn=\"none\" color=\"#fff\" />\n        <h2>{message}</h2>\n      </Content>\n    </Rodal>\n  );\n};\n\nexport default LoadingModal;\n",["377","378","379","380","381"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Input/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/index.tsx",["382","383"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Modal/index.tsx",["384"],"import React, { useState, useEffect } from 'react';\nimport Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  customStyles?: object;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({\n  children,\n  isOpen,\n  setIsOpen,\n  customStyles,\n}) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Rodal\n      visible={modalStatus}\n      showCloseButton\n      closeOnEsc\n      onClose={setIsOpen}\n      customStyles={\n        customStyles || {\n          borderRadius: '8px',\n          padding: '48px 64px',\n          width: '736px',\n          height: 'fit-content',\n        }\n      }\n      customMaskStyles={{\n        background: 'rgba(0, 0, 0, 0.6)',\n      }}\n    >\n      {children}\n    </Rodal>\n  );\n};\n\nexport default Modal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/styles.ts",[],["385","386","387","388","389"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/index.tsx",["390"],"import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport { format } from 'date-fns';\nimport { useLoading } from 'react-use-loading';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\n\nimport getValidationErrors from '../../../utils/getValidationErrors';\nimport getUnformattedPhone from '../../../utils/getUnformattedPhone';\n\nimport { useCustomerService } from '../../../hooks/customerService';\nimport { useDebitsConsultation } from '../../../hooks/debitsConsultation';\nimport { useWhatsappSending } from '../../../hooks/whatsappSending';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\nimport InputMask from '../../InputMask';\n\nimport { currencyMask } from '../../../utils/inputMasks';\n\nimport { InstallmentDebit, InvoiceDebit } from '../../../types/Debits';\nimport { ModalContent, SendButton, DebitContainer } from './styles';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface SendDebitFormData {\n  phone: string;\n}\n\nconst DebitsConsultationModal: React.FC<ModalProps> = ({\n  isOpen,\n  setIsOpen,\n}) => {\n  const [selectedDebit, setSelectedDebit] = useState<\n    InstallmentDebit | InvoiceDebit | undefined\n  >(undefined);\n\n  const {\n    debits,\n    customer,\n    operatingCompany,\n    registerServicePerformed,\n  } = useCustomerService();\n  const { getInvoiceUrl } = useDebitsConsultation();\n  const { sendInvoiceDebit, sendInstallmentPayment } = useWhatsappSending();\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const selectedDebitReference = useMemo(() => {\n    if (selectedDebit) {\n      if (Object.keys(selectedDebit).includes('overdueInvoiceNumber')) {\n        const invoiceDebit: InvoiceDebit = selectedDebit as InvoiceDebit;\n\n        let monthReference;\n        let yearReference;\n\n        if (operatingCompany === '98' || operatingCompany === '95') {\n          yearReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(1, 4),\n          );\n\n          monthReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(5, 2),\n          );\n        } else {\n          yearReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(8, 4),\n          );\n\n          monthReference = Number(\n            invoiceDebit.overdueInvoiceNumber.substr(12, 2),\n          );\n        }\n\n        const referenceDate = new Date(yearReference, monthReference - 1);\n\n        return format(referenceDate, 'MM/yyyy');\n      }\n\n      return 'Parcelamento';\n    }\n\n    return null;\n  }, [selectedDebit, operatingCompany]);\n\n  const handleSubmit = useCallback(\n    async (data: SendDebitFormData) => {\n      try {\n        start('Enviando fatura ...');\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          phone: Yup.string().required('Telefone obrigatório'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (selectedDebit) {\n          if (Object.keys(selectedDebit).includes('overdueInvoiceNumber')) {\n            const invoiceUrl = await getInvoiceUrl({\n              invoiceReference: selectedDebit.invoiceReference,\n              operatingCompany,\n            });\n\n            if (invoiceUrl && selectedDebitReference) {\n              await sendInvoiceDebit({\n                invoiceUrl,\n                operatingCompany,\n                reference: selectedDebitReference,\n                phoneNumber: getUnformattedPhone(data.phone),\n              });\n\n              Swal.fire({\n                icon: 'success',\n                title: 'Fatura enviada',\n                html: '<p>Fatura foi enviada com sucesso.</p>',\n                confirmButtonText: `OK`,\n                confirmButtonColor: '#3c1490',\n              });\n            }\n\n            return;\n          }\n\n          if (Object.keys(selectedDebit).includes('billingDocumentNumber')) {\n            await sendInstallmentPayment({\n              operatingCompany,\n              phoneNumber: getUnformattedPhone(data.phone),\n              name: customer.name,\n              amount: selectedDebit.invoiceAmount,\n              barCode: selectedDebit.paymentCode,\n              contract: customer.contractAccount,\n            });\n\n            Swal.fire({\n              icon: 'success',\n              title: 'Código enviado',\n              html: '<p>O código para pagamento foi enviado com sucesso.</p>',\n              confirmButtonText: `OK`,\n              confirmButtonColor: '#3c1490',\n            });\n          }\n        }\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Erro no envio',\n          html:\n            '<p>Ocorreu um erro ao enviar a fatura, cheque o número de telefone</p>',\n          confirmButtonText: `OK`,\n          confirmButtonColor: '#3c1490',\n        });\n      } finally {\n        setSelectedDebit(undefined);\n        setIsOpen();\n        stop();\n      }\n    },\n    [\n      selectedDebit,\n      customer,\n      getInvoiceUrl,\n      operatingCompany,\n      start,\n      sendInvoiceDebit,\n      selectedDebitReference,\n      sendInstallmentPayment,\n      stop,\n      setIsOpen,\n    ],\n  );\n\n  const handleClickDebit = useCallback(debit => {\n    setSelectedDebit(debit);\n  }, []);\n\n  useEffect(() => {\n    if (isOpen) {\n      registerServicePerformed({\n        serviceName: 'Consulta de débitos',\n        executionDate: new Date(),\n      });\n    }\n  }, [registerServicePerformed, isOpen]);\n\n  const generateInstallmentRows = useMemo(() => {\n    const installmentRows = debits.installmentDebits.installmentDebitDetails.map(\n      debit => (\n        <tr\n          key={debit.billingDocumentNumber}\n          tabIndex={0}\n          onClick={() => handleClickDebit(debit)}\n        >\n          <td>\n            <span>Parcelamento</span>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td />\n        </tr>\n      ),\n    );\n\n    return installmentRows;\n  }, [debits, handleClickDebit]);\n\n  const generateInvoiceRows = useMemo(() => {\n    const invoiceRows = debits.invoiceDebits.invoiceDebitDetails.map(debit => {\n      let monthReference;\n      let yearReference;\n\n      if (operatingCompany === '98' || operatingCompany === '95') {\n        yearReference = Number(debit.overdueInvoiceNumber.substr(1, 4));\n        monthReference = Number(debit.overdueInvoiceNumber.substr(5, 2));\n\n        if (yearReference < 2016) {\n          yearReference = debit.dueDate.getFullYear();\n          monthReference = debit.dueDate.getMonth() + 1;\n        }\n      } else {\n        yearReference = Number(debit.overdueInvoiceNumber.substr(8, 4));\n\n        monthReference = Number(debit.overdueInvoiceNumber.substr(12, 2));\n      }\n\n      const referenceDate = new Date(yearReference, monthReference - 1);\n\n      return (\n        <tr\n          key={debit.invoiceReference}\n          tabIndex={0}\n          onClick={() => handleClickDebit(debit)}\n        >\n          <td>\n            <span>Referente a</span>\n            <strong>{format(referenceDate, 'MM/yyyy ')}</strong>\n          </td>\n          <td>\n            <h2>{currencyMask(debit.invoiceAmount)}</h2>\n          </td>\n          <td>\n            <span>Vencimento</span>\n            <strong>{format(new Date(debit.dueDate), 'dd/MM/yyyy')}</strong>\n          </td>\n        </tr>\n      );\n    });\n\n    return invoiceRows;\n  }, [debits, handleClickDebit]);\n\n  useEffect(() => {\n    setSelectedDebit(undefined);\n  }, [setIsOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <ModalContent>\n        <h2>Consulta de débitos</h2>\n\n        <div>\n          <table>\n            <tbody>\n              {generateInstallmentRows}\n              {generateInvoiceRows}\n            </tbody>\n          </table>\n        </div>\n\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n          initialData={{\n            phone: customer.contacts.phones?.cellPhone,\n          }}\n        >\n          {selectedDebit ? (\n            <DebitContainer>\n              <p>Débito selecionado</p>\n\n              <strong>{`Referente a: ${selectedDebitReference}`}</strong>\n\n              <strong>\n                {`Valor: ${currencyMask(selectedDebit.invoiceAmount)}`}\n              </strong>\n            </DebitContainer>\n          ) : (\n            <span>Nenhum débito selecionado</span>\n          )}\n\n          <InputMask\n            name=\"phone\"\n            mask=\"(99) 99999-9999\"\n            type=\"text\"\n            placeholder=\"Telefone do cliente\"\n            autoComplete=\"off\"\n          />\n\n          <SendButton type=\"submit\" disabled={!selectedDebit}>\n            Enviar fatura\n          </SendButton>\n        </Form>\n      </ModalContent>\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default DebitsConsultationModal;\n",["391","392","393","394","395"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DebitsConsultationModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/questions/PowerOutageQuestions.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/StatusIndicator/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerOutageService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/customerService.tsx",["396"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/styles/global.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/toast.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/powerReconnectionService.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/index.tsx",[],["397","398","399","400","401"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/SignIn/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Button/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/RadioOptions/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/Header/TagInfo/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/hasSocialTariff.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getUnformattedPhone.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/DueDateChange/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/styles.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/StepModal/styles.ts",[],["402","403","404","405","406"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/authenticationApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/services/yaloApi.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/index.tsx",["407"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/ServiceNotesTable/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/FindContractModal/ContractsTable/index.tsx",["408","409"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/LeftBar/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/inputMasks.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/ToastContainer/Toast/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/index.tsx",["410","411"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInput/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ContractData/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/RequestList/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/routes/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/pages/Dashboard/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Loading/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/OutlineInputMask/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/InstallmentPaymentModal/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/InputMask/index.tsx",["412","413"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport ReactInputMask, { Props } from 'react-input-mask';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container, Error } from './styles';\r\n\r\ninterface InputProps extends Props {\r\n  name: string;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst OutlineInputMask: React.FC<InputProps> = ({\r\n  name,\r\n  icon: Icon,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n      setValue(ref: any, value: string) {\r\n        ref.setInputValue(value);\r\n      },\r\n      clearValue(ref: any) {\r\n        ref.setInputValue('');\r\n      },\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <Container isFocused={isFocused} isErrored={!!error}>\r\n      {Icon && <Icon size={20} />}\r\n\r\n      <ReactInputMask\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#ff5353\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OutlineInputMask;\r\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/debitsConsultation.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/hooks/timer.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/CustomRadioGroup/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/ClientData/styles.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Tooltip/index.tsx",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/utils/getInstallationSubclassName.ts",[],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/AlertModal/index.tsx",["414"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/EmailInvoice/index.tsx",["415"],"import React, { useCallback, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { v4 as uuid } from 'uuid';\n\nimport { useLoading } from 'react-use-loading';\nimport { useCustomerService } from '../../../hooks/customerService';\n\nimport Loading from '../../Loading';\nimport Modal from '../../Modal';\n\nimport eqtlBarApi from '../../../services/eqtlBarApi';\n\nimport addZeroesToContract from '../../../utils/addZeroesToContract';\n\nimport { ModalContent, OptionsContainer, OptionButton } from './styles';\n\ninterface ModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\ninterface RegisterInvoiceByEmailProps {\n  contract: string;\n  email: string;\n  stateCode: string;\n}\n\nconst EmailInvoiceModal: React.FC<ModalProps> = ({ isOpen, setIsOpen }) => {\n  const [{ isLoading, message }, { start, stop }] = useLoading();\n\n  const {\n    customer,\n    operatingCompany,\n    registerServicePerformed,\n  } = useCustomerService();\n\n  const registerInvoiceByEmail = useCallback(\n    async ({ contract, email, stateCode }: RegisterInvoiceByEmailProps) => {\n      const response = await eqtlBarApi.post(\n        '/fatura/v1/cadastrarFatura',\n        {\n          codigoTransacao: uuid(),\n          data: {\n            canalAtendimento: 'S',\n            email,\n            contaContrato: addZeroesToContract(contract, 12),\n          },\n        },\n        {\n          params: {\n            flagAtualizaEmail: false,\n            flagCadastroFatura: true,\n            empresaOperadora: stateCode,\n          },\n        },\n      );\n\n      console.log(response.data);\n\n      if (Object.keys(response.data.data).includes('codigoErro')) {\n        if (response.data.data.codigoErro !== '00') {\n          throw new Error(response.data.data.mensagem);\n        }\n      } else {\n        throw new Error('Falha ao cadastrar a fatura por e-mail');\n      }\n    },\n    [],\n  );\n\n  const handleClickAutorize = useCallback(async () => {\n    try {\n      start('Ativando serviço de fatura por e-mail..');\n\n      await registerInvoiceByEmail({\n        contract: customer.contractAccount,\n        email: customer.contacts.email,\n        stateCode: operatingCompany,\n      });\n\n      Swal.fire({\n        icon: 'success',\n        title: 'Fatura por e-mail',\n        html: '<p>Serviço de fatura por e-mail ativado com sucesso.</p>',\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } catch (err) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Fatura por e-mail',\n        html: `<p>${err.message}</p>`,\n        confirmButtonText: `OK`,\n        confirmButtonColor: '#3c1490',\n      });\n    } finally {\n      setIsOpen();\n      stop();\n    }\n  }, [\n    customer,\n    operatingCompany,\n    registerInvoiceByEmail,\n    setIsOpen,\n    start,\n    stop,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      registerServicePerformed({\n        serviceName: 'Cadastro de fatura por e-mail',\n        executionDate: new Date(),\n      });\n    }\n  }, [registerServicePerformed, isOpen]);\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <ModalContent>\n        <h2>Fatura por e-mail</h2>\n        <p>\n          {`Autorizo o envio mensal das faturas de energia elétrica e de eventuais\n          notificações referentes à conta contrato especificada, ao e-mail do\n          meu cadastro: ${customer.contacts.email}, dispensando a necessidade de envio\n          impresso em papel.`}\n        </p>\n\n        <OptionsContainer>\n          <OptionButton type=\"button\" onClick={() => setIsOpen()}>\n            Não\n          </OptionButton>\n\n          <OptionButton type=\"button\" onClick={handleClickAutorize}>\n            Sim, autorizo\n          </OptionButton>\n        </OptionsContainer>\n      </ModalContent>\n\n      {isLoading && (\n        <Loading isOpen={isLoading} message={message} setIsOpen={stop} />\n      )}\n    </Modal>\n  );\n};\n\nexport default EmailInvoiceModal;\n","/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Main/ServicesContent/QuickMenu/index.tsx",["416"],"/home/roberto/Área de Trabalho/eqtl-tela-agil/src/components/Services/PowerOutageFlow/index.tsx",["417"],{"ruleId":"418","severity":1,"message":"419","line":2,"column":16,"nodeType":"420","messageId":"421","endLine":2,"endColumn":20},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","replacedBy":"427"},{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":87,"column":3,"nodeType":"420","messageId":"434","endLine":87,"endColumn":28},{"ruleId":"435","severity":1,"message":"436","line":87,"column":25,"nodeType":"437","messageId":"438","endLine":87,"endColumn":28,"suggestions":"439"},{"ruleId":"435","severity":1,"message":"436","line":152,"column":36,"nodeType":"437","messageId":"438","endLine":152,"endColumn":39,"suggestions":"440"},{"ruleId":"435","severity":1,"message":"436","line":156,"column":13,"nodeType":"437","messageId":"438","endLine":156,"endColumn":16,"suggestions":"441"},{"ruleId":"435","severity":1,"message":"436","line":168,"column":13,"nodeType":"437","messageId":"438","endLine":168,"endColumn":16,"suggestions":"442"},{"ruleId":"435","severity":1,"message":"436","line":204,"column":12,"nodeType":"437","messageId":"438","endLine":204,"endColumn":15,"suggestions":"443"},{"ruleId":"435","severity":1,"message":"436","line":223,"column":12,"nodeType":"437","messageId":"438","endLine":223,"endColumn":15,"suggestions":"444"},{"ruleId":"418","severity":1,"message":"445","line":18,"column":3,"nodeType":"420","messageId":"421","endLine":18,"endColumn":12},{"ruleId":"422","replacedBy":"446"},{"ruleId":"424","replacedBy":"447"},{"ruleId":"426","replacedBy":"448"},{"ruleId":"428","replacedBy":"449"},{"ruleId":"430","replacedBy":"450"},{"ruleId":"418","severity":1,"message":"451","line":8,"column":40,"nodeType":"420","messageId":"421","endLine":8,"endColumn":50},{"ruleId":"418","severity":1,"message":"452","line":8,"column":52,"nodeType":"420","messageId":"421","endLine":8,"endColumn":61},{"ruleId":"435","severity":1,"message":"436","line":7,"column":13,"nodeType":"437","messageId":"438","endLine":7,"endColumn":16,"suggestions":"453"},{"ruleId":"422","replacedBy":"454"},{"ruleId":"424","replacedBy":"455"},{"ruleId":"426","replacedBy":"456"},{"ruleId":"428","replacedBy":"457"},{"ruleId":"430","replacedBy":"458"},{"ruleId":"459","severity":1,"message":"460","line":272,"column":6,"nodeType":"461","endLine":272,"endColumn":32,"suggestions":"462"},{"ruleId":"422","replacedBy":"463"},{"ruleId":"424","replacedBy":"464"},{"ruleId":"426","replacedBy":"465"},{"ruleId":"428","replacedBy":"466"},{"ruleId":"430","replacedBy":"467"},{"ruleId":"435","severity":1,"message":"436","line":157,"column":20,"nodeType":"437","messageId":"438","endLine":157,"endColumn":23,"suggestions":"468"},{"ruleId":"422","replacedBy":"469"},{"ruleId":"424","replacedBy":"470"},{"ruleId":"426","replacedBy":"471"},{"ruleId":"428","replacedBy":"472"},{"ruleId":"430","replacedBy":"473"},{"ruleId":"422","replacedBy":"474"},{"ruleId":"424","replacedBy":"475"},{"ruleId":"426","replacedBy":"476"},{"ruleId":"428","replacedBy":"477"},{"ruleId":"430","replacedBy":"478"},{"ruleId":"418","severity":1,"message":"479","line":55,"column":27,"nodeType":"420","messageId":"421","endLine":55,"endColumn":28},{"ruleId":"418","severity":1,"message":"480","line":42,"column":20,"nodeType":"420","messageId":"421","endLine":42,"endColumn":25},{"ruleId":"418","severity":1,"message":"481","line":42,"column":27,"nodeType":"420","messageId":"421","endLine":42,"endColumn":32},{"ruleId":"435","severity":1,"message":"436","line":37,"column":21,"nodeType":"437","messageId":"438","endLine":37,"endColumn":24,"suggestions":"482"},{"ruleId":"435","severity":1,"message":"436","line":40,"column":23,"nodeType":"437","messageId":"438","endLine":40,"endColumn":26,"suggestions":"483"},{"ruleId":"435","severity":1,"message":"436","line":36,"column":21,"nodeType":"437","messageId":"438","endLine":36,"endColumn":24,"suggestions":"484"},{"ruleId":"435","severity":1,"message":"436","line":39,"column":23,"nodeType":"437","messageId":"438","endLine":39,"endColumn":26,"suggestions":"485"},{"ruleId":"418","severity":1,"message":"486","line":1,"column":41,"nodeType":"420","messageId":"421","endLine":1,"endColumn":47},{"ruleId":"487","severity":1,"message":"488","line":58,"column":7,"nodeType":"489","messageId":"490","endLine":58,"endColumn":18},{"ruleId":"418","severity":1,"message":"491","line":4,"column":18,"nodeType":"420","messageId":"421","endLine":4,"endColumn":30},{"ruleId":"418","severity":1,"message":"492","line":16,"column":21,"nodeType":"420","messageId":"421","endLine":16,"endColumn":33},"@typescript-eslint/no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","lines-around-directive",["493"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Argument 'responseInstallation' should be typed with a non-any type.","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["494","495"],["496","497"],["498","499"],["500","501"],["502","503"],["504","505"],"'setIsOpen' is defined but never used.",["493"],[],[],[],[],"'OwnerLabel' is defined but never used.","'OwnerName' is defined but never used.",["506","507"],["493"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'operatingCompany'. Either include it or remove the dependency array.","ArrayExpression",["508"],["493"],[],[],[],[],["509","510"],["493"],[],[],[],[],["493"],[],[],[],[],"'i' is defined but never used.","'index' is defined but never used.","'event' is defined but never used.",["511","512"],["513","514"],["515","516"],["517","518"],"'useRef' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'FaDollarSign' is defined but never used.","'setQuestions' is assigned a value but never used.","padding-line-between-statements",{"messageId":"519","fix":"520","desc":"521"},{"messageId":"522","fix":"523","desc":"524"},{"messageId":"519","fix":"525","desc":"521"},{"messageId":"522","fix":"526","desc":"524"},{"messageId":"519","fix":"527","desc":"521"},{"messageId":"522","fix":"528","desc":"524"},{"messageId":"519","fix":"529","desc":"521"},{"messageId":"522","fix":"530","desc":"524"},{"messageId":"519","fix":"531","desc":"521"},{"messageId":"522","fix":"532","desc":"524"},{"messageId":"519","fix":"533","desc":"521"},{"messageId":"522","fix":"534","desc":"524"},{"messageId":"519","fix":"535","desc":"521"},{"messageId":"522","fix":"536","desc":"524"},{"desc":"537","fix":"538"},{"messageId":"519","fix":"539","desc":"521"},{"messageId":"522","fix":"540","desc":"524"},{"messageId":"519","fix":"541","desc":"521"},{"messageId":"522","fix":"542","desc":"524"},{"messageId":"519","fix":"543","desc":"521"},{"messageId":"522","fix":"544","desc":"524"},{"messageId":"519","fix":"545","desc":"521"},{"messageId":"522","fix":"546","desc":"524"},{"messageId":"519","fix":"547","desc":"521"},{"messageId":"522","fix":"548","desc":"524"},"suggestUnknown",{"range":"549","text":"550"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"549","text":"551"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"552","text":"550"},{"range":"552","text":"551"},{"range":"553","text":"550"},{"range":"553","text":"551"},{"range":"554","text":"550"},{"range":"554","text":"551"},{"range":"555","text":"550"},{"range":"555","text":"551"},{"range":"556","text":"550"},{"range":"556","text":"551"},{"range":"557","text":"550"},{"range":"557","text":"551"},"Update the dependencies array to be: [debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",{"range":"558","text":"559"},{"range":"560","text":"550"},{"range":"560","text":"551"},{"range":"561","text":"550"},{"range":"561","text":"551"},{"range":"562","text":"550"},{"range":"562","text":"551"},{"range":"563","text":"550"},{"range":"563","text":"551"},{"range":"564","text":"550"},{"range":"564","text":"551"},[2760,2763],"unknown","never",[4379,4382],[4571,4574],[4980,4983],[6014,6017],[6639,6642],[147,150],[7700,7726],"[debits.invoiceDebits.invoiceDebitDetails, handleClickDebit, operatingCompany]",[3952,3955],[1011,1014],[1101,1104],[998,1001],[1088,1091]]